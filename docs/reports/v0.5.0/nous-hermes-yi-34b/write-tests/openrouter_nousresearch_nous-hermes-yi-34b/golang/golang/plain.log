2024/06/19 11:08:58 Evaluating model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain"
2024/06/19 11:08:58 Querying model "openrouter/nousresearch/nous-hermes-yi-34b" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/19 11:09:00 Model "openrouter/nousresearch/nous-hermes-yi-34b" responded (1961 ms) with:
	```golang
	package plain

	import "testing"

	func TestPlain(t *testing.T) { }
	```
2024/06/19 11:09:00 $ go mod tidy
2024/06/19 11:09:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality2883895263/plain --coverage-file /tmp/eval-dev-quality2883895263/plain/coverage.json
Checking for updates
Latest version already installed
=== RUN   TestPlain
--- PASS: TestPlain (0.00s)
PASS
coverage: 0.0% of statements
ok  	plain	0.003s	coverage: 0.0% of statements

DONE 1 tests in 1.807s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 11:09:05 Executes tests with 0 coverage objects
2024/06/19 11:09:05 Evaluated model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain": encountered 0 problems: []
2024/06/19 11:09:13 Evaluating model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain"
2024/06/19 11:09:13 Querying model "openrouter/nousresearch/nous-hermes-yi-34b" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/19 11:09:18 Model "openrouter/nousresearch/nous-hermes-yi-34b" responded (4381 ms) with:
	package plain

	import (
		"testing"
		"plain"
	)

	func TestPlain(t *testing.T) {
		assertion := assert.New(t)
		plain.plain()
		assertion.True(true, "We verified the code is working by calling plains plain().")
	}
2024/06/19 11:09:18 $ go mod tidy
2024/06/19 11:09:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality2883895263/plain --coverage-file /tmp/eval-dev-quality2883895263/plain/coverage.json
# plain
package plain
WARN 	imports plain: import cycle not allowed in test
invalid TestEvent: FAIL	plain [setup failed]
bad output from test2json: FAIL	plain [setup failed]

=== Errors
package plain
	imports plain: import cycle not allowed in test

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 11:09:18 Evaluated model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain": encountered 1 problems: [exit status 1
# plain
package plain
WARN 	imports plain: import cycle not allowed in test
invalid TestEvent: FAIL	plain [setup failed]
bad output from test2json: FAIL	plain [setup failed]

=== Errors
package plain
	imports plain: import cycle not allowed in test

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# plain
package plain
WARN 	imports plain: import cycle not allowed in test
invalid TestEvent: FAIL	plain [setup failed]
bad output from test2json: FAIL	plain [setup failed]

=== Errors
package plain
	imports plain: import cycle not allowed in test

DONE 0 tests, 1 error in 0.041s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

plain.go]
2024/06/19 11:09:31 Evaluating model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain"
2024/06/19 11:09:31 Querying model "openrouter/nousresearch/nous-hermes-yi-34b" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/19 11:09:35 Model "openrouter/nousresearch/nous-hermes-yi-34b" responded (3918 ms) with:
	```golang
	package plain

	import "testing"

	func TestPlain(t *testing.T) {
		if plain() != nil {
			t.Errorf("plain returned a non-nil value instead of nil: %v", plain())
		}
	}
	```
2024/06/19 11:09:35 $ go mod tidy
2024/06/19 11:09:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2883895263/plain --coverage-file /tmp/eval-dev-quality2883895263/plain/coverage.json
# plain [plain.test]
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value

DONE 0 tests, 2 errors in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 11:09:36 Evaluated model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain": encountered 1 problems: [exit status 1
# plain [plain.test]
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value

DONE 0 tests, 2 errors in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# plain [plain.test]
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value
WARN invalid TestEvent: FAIL	plain [build failed]
bad output from test2json: FAIL	plain [build failed]

=== Errors
./plain_test.go:6:5: plain() (no value) used as value
./plain_test.go:7:65: plain() (no value) used as value

DONE 0 tests, 2 errors in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

plain.go]
2024/06/19 11:09:43 Evaluating model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain"
2024/06/19 11:09:43 Querying model "openrouter/nousresearch/nous-hermes-yi-34b" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/19 11:09:45 Model "openrouter/nousresearch/nous-hermes-yi-34b" responded (2820 ms) with:
	```go
	package plain

	import "testing"

	var _ = testing.T{}

	func TestPlain(t *testing.T) { // A test to cover the very least
		plain()
	}
	```
2024/06/19 11:09:45 $ go mod tidy
2024/06/19 11:09:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality2883895263/plain --coverage-file /tmp/eval-dev-quality2883895263/plain/coverage.json
=== RUN   TestPlain
--- PASS: TestPlain (0.00s)
PASS
coverage: 100.0% of statements
ok  	plain	0.002s	coverage: 100.0% of statements

DONE 1 tests in 0.276s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 11:09:46 Executes tests with 1 coverage objects
2024/06/19 11:09:46 Evaluated model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain": encountered 0 problems: []
2024/06/19 11:09:58 Evaluating model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain"
2024/06/19 11:09:58 Querying model "openrouter/nousresearch/nous-hermes-yi-34b" with:
	Given the following Go code file "plain.go" with package "plain", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package plain

	func plain() {
		return // This does not do anything but it gives us a line to cover.
	}
	```
2024/06/19 11:10:13 Model "openrouter/nousresearch/nous-hermes-yi-34b" responded (15734 ms) with:
	```go
	package plain_test

	import (
		"bytes"
		"testing"

		"github.com/yourGoprojectName/plain"
	)

	func TestPlainFunctionShouldDoSomething(t *testing.T) {
		expected := "This function should do something"
		got := plain.plain()

		if got != expected {
			t.Errorf("Error: function did not return expected output: got %q, want %q", got, expected)
		}
	}

	func TestPlainFunctionShouldHave100PercentCoverage(t *testing.T) {
		got := plain.plain()

		var buf bytes.Buffer
		buf.Grow(1024)
		for i := 0; i < 1000; i++ {
			buf.WriteString(got)
		}

		if buf.Bytes()[0] == '\n' {
			t.Error("Linebreak found in coverage test output")
		}
	}
	```
2024/06/19 11:10:13 $ go mod tidy
go: finding module for package github.com/yourGoprojectName/plain
go: plain tested by
	plain.test imports
	github.com/yourGoprojectName/plain: cannot find module providing package github.com/yourGoprojectName/plain: module github.com/yourGoprojectName/plain: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/fb726781f51f87d6bb1921c2408752d922347525bd9a5bbfe37cba511fecef73: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 11:10:15 Evaluated model "openrouter/nousresearch/nous-hermes-yi-34b" on task "write-tests" using language "golang" and repository "golang/plain": encountered 1 problems: [exit status 1
go: finding module for package github.com/yourGoprojectName/plain
go: plain tested by
	plain.test imports
	github.com/yourGoprojectName/plain: cannot find module providing package github.com/yourGoprojectName/plain: module github.com/yourGoprojectName/plain: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/fb726781f51f87d6bb1921c2408752d922347525bd9a5bbfe37cba511fecef73: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func1
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:128
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:118
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/yourGoprojectName/plain
go: plain tested by
	plain.test imports
	github.com/yourGoprojectName/plain: cannot find module providing package github.com/yourGoprojectName/plain: module github.com/yourGoprojectName/plain: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/fb726781f51f87d6bb1921c2408752d922347525bd9a5bbfe37cba511fecef73: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

plain.go]
