2024/06/19 10:02:29 Evaluating model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:02:29 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:02:33 Model "openrouter/google/palm-2-chat-bison" responded (3272 ms) with:
	 ```golang
	package light

	import "testing"

	func TestBalancedBrackets(t *testing.T) {
		type tests struct {
			Input    string
			Expected bool
		}

		tableTests := []tests{
			{"[]", true},             // Valid case with matching brackets.
			{"[[][]]", true},           // Nested valid brackets.
			{"(()[[]])", true},        // Mix of round and square brackets.
			{"{12[[()]34]}", true},    // Brackets within curly braces.
			{"[([)}", false},           // Bracket is not properly closed.
			{"(", false},                // Incomplete bracket is open only.
			{")[}", false},             // Incomplete bracket is closed only.
			{"[)", false},             // Invalid combination of opening and closing.
			{"123", false},           // Non-brackets characters with no brackets at all.
			{"([)][][122", false},     // Combination of characters containing extra/fewer brackets and non-brackets characters.
		}

		for _, test := range tableTests {
			result := hasBalancedBrackets(test.Input)
			if result != test.Expected {
				t.Errorf("Test FAILED. Input: %v, Expected: %v, Got: %v", test.Input, test.Expected, result)
			}
		}
	}

	```
2024/06/19 10:02:33 $ go mod tidy
2024/06/19 10:02:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestBalancedBrackets
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false
--- FAIL: TestBalancedBrackets (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestBalancedBrackets (0.00s)
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false

DONE 1 tests, 1 failure in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:34 Executes tests with 5 coverage objects
2024/06/19 10:02:34 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:02:36 Model "openrouter/google/palm-2-chat-bison" responded (2843 ms) with:
	 ```go
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestBinarySearch(t *testing.T) {
	    a := []int{1, 3, 5, 7, 9, 11, 13, 15, 17, 19}

	    if index := light.BinarySearch(a, 7); index != 3 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 3)
	    }

	    if index := light.BinarySearch(a, 19); index != 9 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 9)
	    }

	    if index := light.BinarySearch(a, 23); index != -1 {
	        t.Errorf("BinarySearch found index %d; want %d", index, -1)
	    }
	}
	```
2024/06/19 10:02:36 $ go mod tidy
2024/06/19 10:02:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.244s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:37 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:02:40 Model "openrouter/google/palm-2-chat-bison" responded (3330 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		type args struct {
			x int
			y int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test Case 1",
				args: args{
					x: 19,
					y: 44,
				},
				want: 9,
			},
			{
				name: "Test Case 2",
				args: args{
					x: 5,
					y: 40,
				},
				want: 5,
			},
			{
				name: "Test Case 3",
				args: args{
					x: 43,
					y: 50,
				},
				want: 21,
			},
			{
				name: "Test Case 4",
				args: args{
					x: 56,
					y: 60,
				},
				want: 28,
			},
			{
				name: "Test Case 5",
				args: args{
					x: 61,
					y: 25,
				},
				want: 61,
			},
		}
		for _, tt := range tests {
			got := light.CallLoopConditionsOftenEnough(tt.args.x, tt.args.y)
			if got != tt.want {
				t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:02:40 $ go mod tidy
2024/06/19 10:02:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:02:43 Model "openrouter/google/palm-2-chat-bison" responded (2444 ms) with:
	 ```go
	package light

	import "testing"

	func TestCascadingIfElse(t *testing.T) {
		type testCase struct {
			givenInput int
			wantOutput int
		}

		testCases := []testCase{
			{1, 2},
			{3, 4},
			{0, 5}, // Default path taken in else
		}

		for _, test := range testCases {
			output := cascadingIfElse(test.givenInput)
			if output != test.wantOutput {
				t.Errorf("cascadingIfElse(%d):\n  got:  %d\n  want: %d", test.givenInput, output, test.wantOutput)
			}
		}
	}
	```
2024/06/19 10:02:43 $ go mod tidy
2024/06/19 10:02:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestCascadingIfElse
--- PASS: TestCascadingIfElse (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.005s	coverage: 2.4% of statements

DONE 1 tests in 0.419s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:02:44 Executes tests with 3 coverage objects
2024/06/19 10:02:44 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:02:47 Model "openrouter/google/palm-2-chat-bison" responded (2963 ms) with:
	 ```go
	package light

	import (
	  "testing"
	  "errors"
	)

	func TestComputeStepCount(t *testing.T) {
	  type test struct {
	    input int
	    expectation int
	    err expectationErr
	  }

	  tests := []test {
	    {1, 0, expectationNoError},
	    {5, 5, expectationNoError},
	    {11, 14, expectationNoError},
	    {801, 307, expectationNoError},
	    {0, 0, expectationError { errors.New("Only positive integers are allowed")}},
	    {5123382804326904, 0, expectationError{ errors.New("number needs to be less than 2⁶³ in absolute value")}}
	  }

	  for _, tt := range tests {
	    actual, err := computeStepCount(tt.input)
	    checkErrorAgainstExpectation(t, tt.err, err)
	    checkCalculatedStepsAgainstExpectation(t, tt.expectation, actual)
	  }
	}

	type expectationErr struct {
	  err error
	}

	var expectationNoError expectationErr

	func (ee expectationErr) errExpectation() error {
	  return ee.err
	}
	```
2024/06/19 10:02:47 $ go mod tidy
2024/06/19 10:02:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:47 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:02:49 Model "openrouter/google/palm-2-chat-bison" responded (1654 ms) with:
	 ```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		var x, y rune

		x = 'A'
		y = 'B'
		if !conditionsAnd(x, y) {
			t.Error("Expected true, got false")
		}

		x = 'B'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}

		x = 'A'
		y = 'A'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}

		x = 'D'
		y = 'A'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}
	}
	```
2024/06/19 10:02:49 $ go mod tidy
2024/06/19 10:02:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 1 tests in 0.327s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:02:49 Executes tests with 2 coverage objects
2024/06/19 10:02:49 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:02:53 Model "openrouter/google/palm-2-chat-bison" responded (4051 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestEquilibriumIndices(t *testing.T) {
		type Test struct {
			sequence      []int
			expectedList  string
		}

		// Create testing inputs and expected outputs.
		tests := []Test{
			// Normal scenario with multiple indices.
			{[]int{2, 6, 3, 4, 3, 2, 1, 1}, "2;7"},
			// Normal scenario with no indices.
			{[]int{1, 2, 2, 7, 5, 1, 3, 9}, ""},
			// Single equilibrium index.
			{[]int{1, 3, 9, 6, 7, 1, 3, 2}, "7"},
			// Scenario with single element equilibrium index.
			{[]int{5}, "0"},
			// Equilibrium list is empty and totalSum is positive.
			{[]int{2, 8, 6, 5, 3}, ""},
			// Equilibrium list is empty and totalSum is negative.
			{[]int{-4, -5, -1, -9, -6, -5}, ""},
			// Empty/nil sequence.
			{[]int{}, ""},
			// Sequence consists of 0's only.
			{[]int{0, 0, 0, 0, 0}, "4"},
		}

		// Iterate through the tests and validate equilibrium index calculations.
		for idx, test := range tests {
			equilibriumIndices := light.EquilibriumIndices(test.sequence)
			if equilibriumIndices != test.expectedList {
				t.Errorf("Test %d failed!", idx+1)
			}
		}
	}

	```
2024/06/19 10:02:53 $ go mod tidy
2024/06/19 10:02:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:54 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:02:55 Model "openrouter/google/palm-2-chat-bison" responded (1900 ms) with:
	 ```go
	package light_test

	import (
		"light"
		"testing"
	)

	func TestLightForLoop(t *testing.T) {
		tests := []struct {
			name string
			s    int
			want int
		}{
			{"case1", 5, 20},
			{"case2", 10, 90},
			{"case3", 0, 0},
			{"case4", -10, -45},
			{"case5", 130, 8430},
			{"boundary1", 1, 0},
			{"boundary2", 5497567, 1486740532},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.forLoop(tt.s); got != tt.want {
					t.Errorf("forLoop() = %d, want %d", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:02:55 $ go mod tidy
2024/06/19 10:02:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./forLoop_test.go:24:20: undefined: light.forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:24:20: undefined: light.forLoop

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:56 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:03:01 Model "openrouter/google/palm-2-chat-bison" responded (4985 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/0xdevalias/codecoverage-examples/golang/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		tests := []struct {
			name string
			k    uint64
			n    uint64
			want int
		}{
			{name: "Simple even example", k: 6, n: 35, want: 1},
			{name: "Simple odd example", k: 31, n: 52, want: -1},
			{name: "k is 0", k: 0, n: 37, want: 0},
			{name: "n is even: odd Jacobi symbol", k: 8, n: 26, want: 0},
			// Add more test cases if you want to improve quality of testing:
			// For odd Jacobi results:
			//  {name: "both number are powers of prime numbers.", k: 3*3*3*3, n: 5*5*5*5, want: -1},
			//  {name: "n contain both power 2 3 as 2^a*3 ^b and the value ( a%4 = 3 AND b ^2 %8=3), the n contain other multipled prime number that must be squares:", k: 5235647088970217867, n: 38251230563485505563, want: -1},
			// For even result 1:
			//   {name: "n must be a power number (n ^p). k can be any odd number less than n or k can also the power number and its power must less than the power of n.", k: 35 , n: 49, want: 1},
			//   {name: "n is only divisible by power of prime number other than 2:", k: 77, n: 96479545406045248, want: 1},
			// Test case for error. 
			// {name: "Error - negative k", k: -2299263305862251753, n: 15933580700590502289, want: 0},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.JacobiSymbol(tt.k, tt.n)
				if tt.want != got {
					t.Errorf("JacobiSymbol() = %v  %v want %v", err, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:01 $ go mod tidy
go: finding module for package github.com/0xdevalias/codecoverage-examples/golang/light
go: light tested by
	light.test imports
	github.com/0xdevalias/codecoverage-examples/golang/light: cannot find module providing package github.com/0xdevalias/codecoverage-examples/golang/light: module github.com/0xdevalias/codecoverage-examples/golang/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a14d924c42e541a8fb2573c7f0ae24ecd9c13cce2c5b2927bcbc7e713bef001: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:03:01 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:03:07 Model "openrouter/google/palm-2-chat-bison" responded (5788 ms) with:
	 ```golang
	package light_test

	import (
		"testing"

		"light"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		type args struct {
			limit int
		}
		tests := []struct {
			name string
			args args
			want []int
		}{
			{
				name: "limit_7",
				args: args{
					limit: 7,
				},
				want: []int{1, 3, 2, 6, 4, 12, 8},
			},
			{
				name: "limit_64",
				args: args{
					limit: 64,
				},
				want: []int{1, 3, 2, 6, 4, 12, 8, 24, 16, 48, 144, 96, 288, 192, 576, 384, 1152, 768, 2304, 1536, 4608, 3072, 9216, 6144, 18432, 12288, 36864, 24576, 73728, 49152, 147456, 98304, 294912, 196608, 589824, 393216, 1179648, 786432, 2359296, 1572864, 4718592, 3145728, 9437184, 6291456, 18874368, 12582912, 37748736, 25165824, 75497472, 50331648, 150994944, 100663296, 301989888},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.InitialiseKlarnerRadoSequence(tt.args.limit); !isEqual(got, tt.want) {
					t.Errorf("InitialiseKlarnerRadoSequence() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func isEqual(got, want []int) bool {
		if len(got) != len(want) {
			return false
		}
		for i := 0; i < len(want); i++ {
			if got[i] != want[i] {
				return false
			}
		}
		return true
	}
	```
2024/06/19 10:03:07 $ go mod tidy
2024/06/19 10:03:07 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:08 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:03:13 Model "openrouter/google/palm-2-chat-bison" responded (5820 ms) with:
	 ```golang
	package light_test

	import (
		light "GoCodeExampleForTestGeneration/knapsack" // Alias import for readability to avoid the repetition of the package name "light" for every method called.
		"testing"
	)

	var (
		// Some predefined and simple test scenarios used as test cases (input and expectations are given in order of increasing complexity).
		// These cover some of the edge cases (such as a combination weight more than total capacity, combination capacity filled exactly without exceeding) etc.
		firstExampleInputs            = []light.Item{{3, 30}, {4, 50}}
		firstExampleTotalAvailableWeight    = 6
		firstExampleExpectedReturnValue    = 60

		secondExampleInputs                  = []light.Item{{2, 60}, {4, 100}, {16, 44}, {6, 68}, {3, 65}, {6, 82}}
		secondExampleTotalAvailableWeight     = 10
		secondExampleExpectedReturnValue     = 246

		thirdExampleInputs                   = []light.Item{{8, 54}, {6, 199}, {5, 93}, {6, 273}, {7, 191}, {28, 680}, {5, 268}, {4, 284}, {7, 474}, {8, 227}, {4, 379}, {5, 753}, {4, 221}, {21, 876}, {7, 627}, {9, 592}, {7, 692}, {5, 469}, {5, 576}, {32, 225}}
		thirdExampleTotalAvailableWeight      = 37
		thirdExampleExpectedReturnValue      = 3951
	)

	// Function for creating simpler and self-explaining names in test.
	func makeName(tName, paramNames string) string {
		return (tName + "_" + paramNames + ": ")
	}

	// This function can check and return if maximumValue for given arguments satisfies a given "maximumExpectedValue".
	func maximumValueWithCondition(maximumExpectedValue int, maximumWeight int, items []light.Item) bool {
		return light.MaximumValue(maximumWeight, items) == maximumExpectedValue
	}

	// Testing is usually written in a modularized form which allows easy reading as well as extensibility for multiple kinds of test conditions.

	// Here we are checking different kinds of input and maximum capacity with corresponding output to satisfy some expected value using Test method:
	func TestLightFunctionOnCustomScenario_FirstExample(t *testing.T) {
		t.Log(makeName(t.Name(), "Capacity=6, Input-Weights[30,50] & Weights[3,4]"))
		result := maximumValueWithCondition(firstExampleExpectedReturnValue, firstExampleTotalAvailableWeight, firstExampleInputs)
		handleFailureMessage(t, result, true)
	}

	func TestLightFunctionOnCustomScenario_SecondExample(t *testing.T) {
		t.Log(makeName(t.Name(), "Capacity=10, Input-Weights[60,100,44,68,65,82
2024/06/19 10:03:13 $ go mod tidy
2024/06/19 10:03:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:14 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:03:16 Model "openrouter/google/palm-2-chat-bison" responded (2925 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
			wantErr  bool
		}{
			{1, 0, false},
			{9, 3, false},
			{10, 5, false},
			{37, 1, false},
			{38, 19, false},
			{43, 1, false},
			{73, 67, false},
			{63, 21, false},
			{-17, 0, true},
			{21, 7, false},
			{0, 0, true},
		}

		for _, tc := range testCases {
			pd, err := light.LargestProperDivisor(tc.input)
			if (err != nil) != tc.wantErr {
				t.Errorf("largestProperDivisor(%d) returned error? %t -> expected? %t", tc.input, err != nil, tc.wantErr)
			}
			if pd != tc.expected {
				t.Errorf("largestProperDivisor(%d) = %d -> expected %d", tc.input, pd, tc.expected)
			}
		}
	}
	```
2024/06/19 10:03:16 $ go mod tidy
2024/06/19 10:03:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor

DONE 0 tests, 1 error in 0.160s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:17 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:03:22 Model "openrouter/google/palm-2-chat-bison" responded (4854 ms) with:
	 ```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name      string
			givenBase int
			wantGrid  [][]int
			wantErr   error
		}{
			{
				name:      "test odd square: base > 3",
				givenBase: 5,
				wantGrid: [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 12, 19, 2, 9},
					{11, 18, 25, 3, 21},
				},
				wantErr: nil,
			},
			{
				name:      "test base 3",
				givenBase: 3,
				wantGrid: [][]int{
					{2, 7, 6},
					{9, 5, 1},
					{4, 3, 8},
				},
				wantErr: nil,
			},
			{
				name:      "test even base",
				givenBase: 10,
				wantErr:   errors.New("base must be odd and > 2"),
			},
			{
				name:      "test base < 3",
				givenBase: 1,
				wantErr:   errors.New("base must be odd and > 2"),
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				gotGrid, err := magicSquareOdd(tt.givenBase)
				if err != tt.wantErr {
					t.Fatalf("magicSquareOdd() error should be %v, got error %v", tt.wantErr, err)
				}
				if !reflect.DeepEqual(gotGrid, tt.wantGrid) {
					t.Errorf("magicSquareOdd() result did not match expected grid!")
				}
			})
		}
	}
	```
2024/06/19 10:03:22 $ go mod tidy
2024/06/19 10:03:22 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:22 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:03:25 Model "openrouter/google/palm-2-chat-bison" responded (2567 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		testCases := []struct {
			s1       []byte
			s2       []byte
			expected bool
		}{
			{[]byte("Hello"), []byte("Hello"), true},
			{[]byte("hello"), []byte("HeLLo"), true},
			{[]byte("123abc"), []byte("123ABC"), true},
			{[]byte("abc-"), []byte("abc_"), false},
			{[]byte("a"), []byte("ab"), false},
			{[]byte{}, []byte(""), true},
			{[]byte("aBcD09-"), []byte("abcdef@0"), false},
			{[]byte("go10"), []byte("gO!0"), false},
		}

		for _, tc := range testCases {
			result := matchBytes(tc.s1, tc.s2)
			if result != tc.expected {
				t.Errorf("For inputs s1 = %s and s2 = %s, got result %v but expected %v", tc.s1, tc.s2, result, tc.expected)
			}
		}
	}
	```
2024/06/19 10:03:25 $ go mod tidy
2024/06/19 10:03:25 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:26 Executes tests with 2 coverage objects
2024/06/19 10:03:26 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:03:31 Model "openrouter/google/palm-2-chat-bison" responded (5625 ms) with:
	 ```golang
	package light_test

	import (
		"reflect"
		"testing"

		"github.com/golang-light/light/light"
	)

	//TestPascalsTriangle tests function light.pascalsTriangle() on valid and edge-case scenarios
	func TestPascalsTriangle(t *testing.T) {
		type test struct {
			//Inputs
			rownum int
			//Expected Output
			pt   [][]int
			errn error
		}

		testCases := []test{
			//Rows = 0, Expected to have 1-row result: [[1]]
			{0, [][]int{{1}}, nil},
			//Rows = 4
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}, nil},
			//Rows = -4 Expected error, no output triangle
			{-4, nil, errors.New("Rows can't be negative!")},
			//Edge case test: Rows =50000 is also handled gracefully without stackoverflow (max possible rows 80,082 for 32bit systems)
			{50000, nil, errors.New("Rows can't be negative!")},
		}

		for i, c := range testCases {
			t.Run("", func(t *testing.T) {
				//Get triangle
				actualTriangle, err := light.PascalsTriangle(c.rownum)
				//If an error has occured in case where there isn't supposed to be, fail tests; in any case of error just compare the received message
				if (c.errn != nil && err == nil) || (c.errn == nil && err != nil) ||
					(c.errn != nil && err != nil && c.errn.Error() != err.Error()) {
					t.Fatalf("\nTEST %d: Invalid error. expected = %s, \tactual   = %s", i, c.errn, err)
				}
				//If function executed successfully (even in expected error cases above), check triangle returned
				if err == nil {
					//if lengths mismatched fail test instantly
					if !reflect.DeepEqual(len(actualTriangle), len(c.pt)) {
						t.Errorf("\nTEST %d: Rows length is mismatched:\n\texpected = %d,\n\tactual   = %d", i, len(c.pt), len(actualTriangle))
					}
					for pIndex, r1 := range actualTriangle {
						//Check number of elements in every rows, stop on mismatch, report that row only
						if !reflect.DeepEqual(len(r1), len(c.pt[pIndex])) {
							t.Errorf("\nTEST %d:\n Row no%d: Elements length is mismatched.\nActual:   %+v\nExpected: %+v", i, pIndex, r1, c.pt[pIndex])
							break
						}
						//Compare each row element-by-element. Stop at first encountered mismatched pair, report actual row and expected row only to reduce noise in failure output
						for cIndex, val := range c.pt[pIndex] {
							if val != r1[cIndex] {
								t
2024/06/19 10:03:31 $ go mod tidy
2024/06/19 10:03:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:31 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:03:35 Model "openrouter/google/palm-2-chat-bison" responded (3467 ms) with:
	 ```go
	package light_test

	import (
		"errors"
		"light"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name     string
			number   string
			expected string
			err      error
		}{
			{
				name:     "normal case",
				number:   "1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with spaces",
				number:   "123 456 7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with dots",
				number:   "123.456.7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with parentheses",
				number:   "(123) 456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with hyphens",
				number:   "123-456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with pluses",
				number:   "+1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with letters",
				number:   "123abc456",
				expected: "",
				err:      errors.New("letters not permitted"),
			},
			{
				name:     "with punctuations",
				number:   "123!456",
				expected: "",
				err:      errors.New("punctuations not permitted"),
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				actual, err := light.extractDigits(test.number)
				if err != test.err {
					t.Errorf("unexpected error: %v, expected: %v", err, test.err)
				}
				if actual != test.expected {
					t.Errorf("unexpected extracted digits: %q, expected: %q", actual, test.expected)
				}
			})
		}
	}
	```
2024/06/19 10:03:35 $ go mod tidy
2024/06/19 10:03:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.179s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:35 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:03:37 Model "openrouter/google/palm-2-chat-bison" responded (1346 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		type test struct {
			Input    int
			Expected int
		}

		var testCases = []test{
			{1, 0},
			{2, 1},
		}

		for _, tc := range testCases {
			r := simpleIfElse(tc.Input)
			if r != tc.Expected {
				t.Errorf("simpleIfElse(%d) returned %d; expected %d.", tc.Input, r, tc.Expected)
			}
		}
	}
	```
2024/06/19 10:03:37 $ go mod tidy
2024/06/19 10:03:37 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 1 tests in 0.348s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:03:37 Executes tests with 2 coverage objects
2024/06/19 10:03:37 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:03:39 Model "openrouter/google/palm-2-chat-bison" responded (2041 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "case 1",
				i:    1,
				want: 0,
			},
			{
				name: "default",
				i:    2,
				want: 1,
			},
		}
		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tc.i); got != tc.want {
					t.Errorf("simpleSwitchWithReturn(%d) = %d; want %d", tc.i, got, tc.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:39 $ go mod tidy
2024/06/19 10:03:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/case_1
=== RUN   TestSimpleSwitchWithReturn/default
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/case_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/default (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.322s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:03:40 Executes tests with 3 coverage objects
2024/06/19 10:03:40 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:03:44 Model "openrouter/google/palm-2-chat-bison" responded (3810 ms) with:
	 ```golang
	package light

	import (
	  "testing"
	)

	func TestIsSorted(t *testing.T) {
	  type testData struct {
	    testName string
	    in       []int
	    expOut   bool
	  }

	  testDataCases := []testData{
	    {
	      testName: "1. Sorted positive int slice",
	      in:       []int{1, 2, 3, 4, 5},
	      expOut:   true,
	    },
	    {
	      testName: "2. Sorted negative int slice",
	      in:       []int{-5, -3, -2, -1, 0},
	      expOut:   true,
	    },
	    {
	      testName: "3. Empty int slice",
	      in:       []int{},
	      expOut:   true,
	    },
	    {
	      testName: "4. Single-element int slice",
	      in:       []int{7},
	      expOut:   true,
	    },
	    {
	      testName: "5. Unsorted positive int slice",
	      in:       []int{5, 4, 3, 2, 1},
	      expOut:   false,
	    },
	    {
	      testName: "6. Two element slice: unsorted",
	      in:       []int{2, 1},
	      expOut:   false,
	    },
	    {
	      testName: "7. Unsorted int slice with duplicates",
	      in:       []int{3, 1, 3, 6, 1, 0},
	      expOut:   false,
	    },
	    {
	      testName: "8. Unsorted string slice",
	      in:       []int{'g', 'a', 'f', 'm', 'a'},
	      expOut:   false,
	    },
	  }

	  for _, td := range testDataCases {
	    t.Run(td.testName, func(t *testing.T) {
	      if ret := isSorted(td.in); ret != td.expOut {
	        t.Errorf("Incorrect output!\nTest Case:\n%-40s| Input   : (%+v)\n                       || Expected: (%v)\n                       || Received: (%v)",
	          td.testName, td.in, td.expOut, ret)
	      }
	    })
	  }
	}
	```
2024/06/19 10:03:44 $ go mod tidy
2024/06/19 10:03:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:45 Executes tests with 2 coverage objects
2024/06/19 10:03:45 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:03:47 Model "openrouter/google/palm-2-chat-bison" responded (2321 ms) with:
	 ```Go
	import (
	    "testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
	    type testCase struct {
	        Input    []int
	        Expected int
	    }

	    testCases := []testCase{
	        // Success scenario 1
	        {
	            Input:    []int{123, 4, 5},
	            Expected: 123,
	        },
	        // Success scenario 2
	        {
	            Input:    []int{246, 11, 33},
	            Expected: 3,
	        },
	        // Edge scenario: Array is empty
	        {
	            Input:    []int{},
	            Expected: 3,
	        },
	        // Edge scenario: All array elements are equal
	        {
	            Input:    []int{3, 3, 3},
	            Expected: 3,
	        },
	    }

	    for _, tc := range testCases {
	        result := typeArrayAccess(tc.Input)
	        if result != tc.Expected {
	            t.Errorf("Test case failed. Expected: %d, Got: %d", tc.Expected, result)
	        }
	    }
	}
	```
2024/06/19 10:03:47 $ go mod tidy
2024/06/19 10:03:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:47 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:03:50 Model "openrouter/google/palm-2-chat-bison" responded (2834 ms) with:
	 ```go
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		type args struct {
			input []int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "positive tests",
				args: args{
					input: []int{0, 8},
				},
				want: 2,
			},
			{
				name: "negative test case: only first value matches (2nd = 1)",
				args: args{
					input: []int{0, 1},
				},
				want: 1,
			},
			{
				name: "negative test case: only 2nd value matches (1st = 4)",
				args: args{
					input: []int{4, 8},
				},
				want: 1,
			},
			{
				name: "edge case: both values do not match",
				args: args{
					input: []int{5, 7},
				},
				want: 0,
			},
			{
				name: "empty array",
				args: args{
					input: []int{},
				},
				want: 0,
			},
			{
				name: "single-element array",
				args: args{
					input: []int{0},
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.args.input); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:50 $ go mod tidy
2024/06/19 10:03:50 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/positive_tests
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1)
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4)
=== RUN   TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/positive_tests (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 6 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:51 Executes tests with 0 coverage objects
2024/06/19 10:03:51 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:03:54 Model "openrouter/google/palm-2-chat-bison" responded (2858 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "case 1",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "case 2",
				x:    [][]int{{1, 2}},
				want: 1,
			},
			{
				name: "case 3",
				x:    [][]int{{1, 2, 3}, {4, 5, 6}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if typeArrayMultidimensionalArrayLength(tt.x) != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %d, want %d", typeArrayMultidimensionalArrayLength(tt.x), tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:54 $ go mod tidy
2024/06/19 10:03:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:55 Executes tests with 3 coverage objects
2024/06/19 10:03:55 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:03:58 Model "openrouter/google/palm-2-chat-bison" responded (3309 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestValidateDate(t *testing.T) {
		tests := []struct {
			day            int
			month           int
			year            int
			expectedOutcome bool
		}{
			{31, 1, 2022, true},
			{1, 7, 2000, true},
			{29, 2, 2004, true},
			{31, 4, 2003, true},
			{31, 6, 2014, true},
			{30, 9, 2019, true},
			{31, 10, 1993, true},
			{30, 11, 2009, true},
			{31, 12, 2020, true},
			{29, 2, 2001, false},
			{32, 3, 2022, false},
			{13, 2, 2018, false},
			{31, 1, 1582, false},
		}

		for _, test := range tests {
			outcome := validDate(test.day, test.month, test.year)
			if outcome != test.expectedOutcome {
				t.Errorf("For date %d-%d-%d, expected outcome %v, but got %v", test.day, test.month, test.year, test.expectedOutcome, outcome)
			}
		}
	}
	```
2024/06/19 10:03:58 $ go mod tidy
2024/06/19 10:03:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:59 Executes tests with 7 coverage objects
2024/06/19 10:03:59 Evaluated model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light": encountered 19 problems: [exit status 1
=== RUN   TestBalancedBrackets
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false
--- FAIL: TestBalancedBrackets (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestBalancedBrackets (0.00s)
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false

DONE 1 tests, 1 failure in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestBalancedBrackets
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false
--- FAIL: TestBalancedBrackets (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.006s

=== Failed
=== FAIL: . TestBalancedBrackets (0.00s)
    balancedBrackets_test.go:27: Test FAILED. Input: (()[[]]), Expected: true, Got: false
    balancedBrackets_test.go:27: Test FAILED. Input: {12[[()]34]}, Expected: true, Got: false

DONE 1 tests, 1 failure in 0.317s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.244s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.244s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.108s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
# light
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
collatzCalculator_test.go:21:114: missing ',' before newline in composite literal

DONE 0 tests, 1 error in 0.043s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
# light_test [light.test]
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:37:31: undefined: light.EquilibriumIndices

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
# light_test [light.test]
./forLoop_test.go:24:20: undefined: light.forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:24:20: undefined: light.forLoop

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./forLoop_test.go:24:20: undefined: light.forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:24:20: undefined: light.forLoop

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
go: finding module for package github.com/0xdevalias/codecoverage-examples/golang/light
go: light tested by
	light.test imports
	github.com/0xdevalias/codecoverage-examples/golang/light: cannot find module providing package github.com/0xdevalias/codecoverage-examples/golang/light: module github.com/0xdevalias/codecoverage-examples/golang/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a14d924c42e541a8fb2573c7f0ae24ecd9c13cce2c5b2927bcbc7e713bef001: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/0xdevalias/codecoverage-examples/golang/light
go: light tested by
	light.test imports
	github.com/0xdevalias/codecoverage-examples/golang/light: cannot find module providing package github.com/0xdevalias/codecoverage-examples/golang/light: module github.com/0xdevalias/codecoverage-examples/golang/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a14d924c42e541a8fb2573c7f0ae24ecd9c13cce2c5b2927bcbc7e713bef001: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

jacobiSymbol.go exit status 1
# light_test [light.test]
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:35:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light_test [light.test]
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor

DONE 0 tests, 1 error in 0.160s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:29:20: undefined: light.LargestProperDivisor

DONE 0 tests, 1 error in 0.160s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.179s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.179s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([])
                               || Expected: (true)
                               || Received: (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/positive_tests
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1)
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4)
=== RUN   TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/positive_tests (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 6 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/positive_tests
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1)
=== RUN   TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4)
=== RUN   TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match
=== RUN   TestTypeArrayConsecutiveAccess/empty_array
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/positive_tests (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_first_value_matches_(2nd_=_1) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/negative_test_case:_only_2nd_value_matches_(1st_=_4) (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/edge_case:_both_values_do_not_match (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/empty_array (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/empty_array (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 11 [running]:
testing.tRunner.func1.2({0x56b480, 0xc000018048})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56b480?, 0xc000018048?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess.func1(0xc0001ae340?)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:59 +0x138
testing.tRunner(0xc0001ae4e0, 0xc000026470)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 6
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 6 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.336s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/19 10:06:32 Evaluating model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:06:32 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:06:35 Model "openrouter/google/palm-2-chat-bison" responded (2464 ms) with:
	 ```golang
	package light_test

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			description string
			expression  string
			expected    bool
		}{
			{
				description: "balanced",
				expression:  "[][{}]()",
				expected:    true,
			},
			{
				description: "unbalanced with opening braces",
				expression:  "[](}{))",
				expected:    false,
			},
			{
				description: "unbalanced with closing braces",
				expression:  "{[}(]})",
				expected:    false,
			},
			{
				description: "no braces",
				expression:  "abcdfg123",
				expected:    true,
			},
			{
				description: "empty string",
				expression:  "",
				expected:    true,
			},
		}

		for _, tt := range tests {
			if actual := hasBalancedBrackets(tt.expression); actual != tt.expected {
				t.Errorf("(%s): For charArray %s got %v, want %v", tt.description, tt.expression, actual, tt.expected)
			}
		}
	}

	```
2024/06/19 10:06:35 $ go mod tidy
2024/06/19 10:06:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.165s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:35 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:06:37 Model "openrouter/google/palm-2-chat-bison" responded (2040 ms) with:
	 ```go
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestBinarySearch(t *testing.T) {
	    a := []int{1, 3, 5, 7, 9, 11, 13, 15, 17, 19}

	    if index := light.BinarySearch(a, 7); index != 3 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 3)
	    }

	    if index := light.BinarySearch(a, 19); index != 9 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 9)
	    }

	    if index := light.BinarySearch(a, 23); index != -1 {
	        t.Errorf("BinarySearch found index %d; want %d", index, -1)
	    }
	}
	```
2024/06/19 10:06:37 $ go mod tidy
2024/06/19 10:06:37 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:38 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:06:41 Model "openrouter/google/palm-2-chat-bison" responded (3111 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		type args struct {
			x int
			y int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test Case 1",
				args: args{
					x: 19,
					y: 44,
				},
				want: 9,
			},
			{
				name: "Test Case 2",
				args: args{
					x: 5,
					y: 40,
				},
				want: 5,
			},
			{
				name: "Test Case 3",
				args: args{
					x: 43,
					y: 50,
				},
				want: 21,
			},
			{
				name: "Test Case 4",
				args: args{
					x: 56,
					y: 60,
				},
				want: 28,
			},
			{
				name: "Test Case 5",
				args: args{
					x: 61,
					y: 25,
				},
				want: 61,
			},
		}
		for _, tt := range tests {
			got := light.CallLoopConditionsOftenEnough(tt.args.x, tt.args.y)
			if got != tt.want {
				t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:06:41 $ go mod tidy
2024/06/19 10:06:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
# light_test [light.test]
 FAIL	light [build failed]
# light_test [light.test]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.155s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:06:43 Model "openrouter/google/palm-2-chat-bison" responded (1653 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/user/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		var tests = []struct {
			input    int
			expected int
		}{
			{1, 2},
			{3, 4},
			{2, 5},
		}

		for _, test := range tests {
			result := light.CascadingIfElse(test.input)
			if result != test.expected {
				t.Errorf("cascadingIfElse(%d) = %d, expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/06/19 10:06:43 $ go mod tidy
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:06:45 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:06:48 Model "openrouter/google/palm-2-chat-bison" responded (2652 ms) with:
	 ```go
	package light

	import (
	    "testing"
	    "strconv"
	)

	func TestComputeStepCount(t *testing.T) {
	    var tests = []struct {
	        input             int
	        expectedCount     int
	        shouldHaveError   bool
	    }{
	        {1, 0, false},
	        {5, 5, false},
	        {13, 9, false},
	        {0, 0, true},
	        {-18, 0, true},
	    }

	    for _, test := range tests {
	        t.Run(strconv.Itoa(test.input), func(t *testing.T) {
	            count, err := computeStepCount(test.input)

	            if count != test.expectedCount {
	                t.Errorf("Expected %d but got %d for `%s`", test.expectedCount, count, test.input)
	            }

	            if (err != nil) != test.shouldHaveError {
	                t.Errorf("Expected %v errors for `%s` but got: `%v`", test.shouldHaveError, test.input, err)
	            }
	        })
	    }
	}
	```
2024/06/19 10:06:48 $ go mod tidy
2024/06/19 10:06:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/13
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/-18
--- PASS: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/13 (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/-18 (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.005s	coverage: 5.2% of statements

DONE 6 tests in 0.418s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:06:49 Executes tests with 6 coverage objects
2024/06/19 10:06:49 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:06:50 Model "openrouter/google/palm-2-chat-bison" responded (1933 ms) with:
	 ```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		var x, y rune

		x = 'A'
		y = 'B'
		if !conditionsAnd(x, y) {
			t.Error("Expected true, got false")
		}

		x = 'B'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}

		x = 'A'
		y = 'A'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}

		x = 'D'
		y = 'A'
		if conditionsAnd(x, y) {
			t.Error("Expected false, got true")
		}
	}
	```
2024/06/19 10:06:50 $ go mod tidy
2024/06/19 10:06:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 1 tests in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:06:51 Executes tests with 2 coverage objects
2024/06/19 10:06:51 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:06:55 Model "openrouter/google/palm-2-chat-bison" responded (4087 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "Simple testcase: sequence with three equilibrium indices",
				sequence: []int{2, 3, -4, 7, -6, 2},
				want:     "2;3;4",
			},
			{
				name:     "Empty sequence",
				sequence: []int{},
				want:     "",
			},
			{
				name:     "All positive integers",
				sequence: []int{1, 2, 3, 4, 5},
				want:     "",
			},
			{
				name:     "Only one equilibrium index present",
				sequence: []int{4, 8, 4, 7, 6, 6},
				want:     "3",
			},
			{
				name:     "Duplicate values within the sequence",
				sequence: []int{6, -3, 10, 2, 8, 2, 11, 7, 9, 7},
				want:     "5;9",
			},
			{
				name:     "Large range of values within the sequence",
				sequence: []int{100, -373, 52, 66, -694, 691, 340},
				want:     "3;6",
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := equilibriumIndices(tt.sequence)
				if got != tt.want {
					t.Errorf("equilibriumIndices(%v) = %v, want %v", tt.sequence, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:06:55 $ go mod tidy
2024/06/19 10:06:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:56 Executes tests with 4 coverage objects
2024/06/19 10:06:56 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:06:58 Model "openrouter/google/palm-2-chat-bison" responded (2538 ms) with:
	 ```go
	package light

	import (
	  "testing"
	)

	func TestLoop(t *testing.T) {
	  test_for_sum0, test_for_sum1 := 0, 0
	  // Test case one sums only positive indices.
	  test_for_sum0 = forLoop(5)
	  // Test case two sums both positive and negative numbers (up to -3):
	  test_for_sum1 = forLoop(-3)
	  if test_for_sum0 != 10 || test_for_sum1 != -6 {
	    t.Errorf("The expected Sum Value does not match. Output Value: %v -3: %v:", test_for_sum0, test_for_sum1)
	  }
	}
	```
2024/06/19 10:06:58 $ go mod tidy
2024/06/19 10:06:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestLoop
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:
--- FAIL: TestLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestLoop (0.00s)
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:59 Executes tests with 3 coverage objects
2024/06/19 10:06:59 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:07:04 Model "openrouter/google/palm-2-chat-bison" responded (4809 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestJacobiSymbol(t *testing.T) {
		var testMatrix = []struct {
			k, n uint64
			want         int
		}{
			{5798542, 7910843, -1},
			{0, 25889025745217, 0},
			{14059022902285849888, 9895205060502268353, 1},
			{5042500054510806075, 7842728500705532021, -1},
			{5705052655520290097, 8252586272120062551, 1},
			{8800672825205959505, 3522706042855222527, -1},
			{4570127015528255726, 5530552252223260807, 1},
			{15054205027052722203, 8038859587803510525, -1},
			{2275528532504235459, 8230927295575085905, 1},
			{2652225710926052825, 9212506570109042725, -1},
		}
		for _, tt := range testMatrix {
			t.Run("", func(t *testing.T) {
				res, err := light.JacobiSymbol(tt.k, tt.n)
				if err != nil {
					t.Errorf("Unexpected error: %s", err)
					return
				}
				if res != tt.want {
					t.Errorf("incorrect jacobi for %d & %d, wants: %d got: %d", tt.k, tt.n, tt.want, res)
				}
			})
		}

		invalidValue, _ := light.JacobiSymbol(4046292668455090084, 0)
		if invalidValue != 0 {
			t.Error("expected 0")
		}

		invalidEven, _ := light.JacobiSymbol(-3928205425842549268, 7405452260538092558)
		if invalidEven != 0 {
			t.Error("expected 0")
2024/06/19 10:07:04 $ go mod tidy
2024/06/19 10:07:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:04 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:07:08 Model "openrouter/google/palm-2-chat-bison" responded (4504 ms) with:
	 ```go
	package light_test

	import (
		"math"
		"reflect"
		"testing"

		light "klarnrerRadoSequence.go"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		testCases := []struct {
			limit, expected []int
		}{
			{1, []int{1}},
			{3, []int{1, 2, 3}},
			{7, []int{1, 2, 3, 6, 3, 9, 3}},
			{12, []int{1, 2, 3, 6, 3, 9, 3, 18, 6, 3, 27, 9}},
			{23, []int{1, 2, 3, 6, 3, 9, 3, 18, 6, 3, 27, 9, 3, 54, 18, 6, 3, 81, 27, 9, 3, 162, 54}},
		}

		for _, tc := range testCases {
			result := light.InitialiseKlarnerRadoSequence(tc.limit)
			// check if returned slice equals the exepected
			if !reflect.DeepEqual(result, tc.expected) {
				t.Errorf("Expected %v for limit %d, Actual: %v.", tc.expected, tc.limit, result)
			}
		}

		// Testing Edge cases and boundary tests
		var upperLimitTestsArray = []int{0, 1, 3, 8, 71, 139, 946, 3700, 3701, 7954, 994832}
		// check whether 0 returns an empty slice while all other values return some result within slice bound 0 to
		// input number "limit" (inclusive of)
		for _, num := range upperLimitTestsArray {
			results := light.InitialiseKlarnerRadoSequence(num)
			resultsSize := len(results)
			if num == 0 && resultsSize != 0 {
				t.Errorf("Error in Test cases with limit values. The result shouldn't be: %v for limit: %d.", results, num)
			}

			if num != 0 && resultsSize != max(math.Abs(float64(num + 1)),  4+int(math.Pow(float64(num), 0.45))) {
				t.Errorf("Error in Test cases with limit values. The result slice len for num %d doesn't match expected results", num)
			}
		}
	}

	func max(num1, num2 int) int {
	    if num1 >= num2 {
	        return num1
	    }

	    return num2
	}
	```
2024/06/19 10:07:08 $ go mod tidy
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element
2024/06/19 10:07:08 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:07:13 Model "openrouter/google/palm-2-chat-bison" responded (4772 ms) with:
	 ```golang
	package light_test

	import (
		light "GoCodeExampleForTestGeneration/knapsack" // Alias import for readability to avoid the repetition of the package name "light" for every method called.
		"testing"
	)

	var (
		// Some predefined and simple test scenarios used as test cases (input and expectations are given in order of increasing complexity).
		// These cover some of the edge cases (such as a combination weight more than total capacity, combination capacity filled exactly without exceeding) etc.
		firstExampleInputs            = []light.Item{{3, 30}, {4, 50}}
		firstExampleTotalAvailableWeight    = 6
		firstExampleExpectedReturnValue    = 60

		secondExampleInputs                  = []light.Item{{2, 60}, {4, 100}, {16, 44}, {6, 68}, {3, 65}, {6, 71}, {2, 82}, {7, 29}, {7, 57}, {8, 8}}
		secondExampleTotalAvailableWeight       = 20
		secondExampleExpectedReturnValue       = 293

		itemsInputs            = []light.Item{{412, 889}, {783, 901}, {308, 524}, {397, 255}, {381, 834}, {335, 388}, {682, 551}, {255, 587}, {750, 472}, {712, 770}}
		itemsTotalAvailableWeight    = 3578
		itemsExpectedReturnValue    = 2455

		largeWeightItemsInputs                    = []light.Item{{3776, 6163}, {7743, 8858}, {6141, 3518}, {1526, 8538}, {8503, 3555}, {1598, 2555}, {3520, 7215}, {8543, 8270}, {1806, 8587}, {2659, 9395}}
		largeWeightItemsTotalAvailableWeight          = 19928
		largeWeightItemsExpectedReturnValue           = 69322

		heavyLargeCapacityInputs                         = []light.Item{{6203, 25759}, {4053, 36077}, {8274, 35575}, {3059, 1552}, {5220, 45277}, {2125, 35057}, {8951, 55506}, {2328, 52035}, {2205, 19525}, {3327, 57094}}
		heavyLargeCapacityTotalAvailableCapacity             = 39524
		heavyLargeCapacityExpectedReturnValue                = 358778

		multipleObjectsWithSimilarPropertiesInputs     = []light.Item{{2
2024/06/19 10:07:13 $ go mod tidy
2024/06/19 10:07:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:13 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:07:17 Model "openrouter/google/palm-2-chat-bison" responded (3337 ms) with:
	 ```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
			wantErr  bool
		}{
			{1, 0, false},
			{9, 3, false},
			{10, 5, false},
			{42, 21, false},
			{100, 50, false},
			{991, 660, false},
			{-18, 0, true},
			{0, 0, true},
		}

		for _, tc := range testCases {
			t.Run(fmt.Sprintf("input: %d", tc.input), func(t *testing.T) {
				result, err := light.LargestProperDivisor(tc.input)
				if tc.wantErr && err == nil {
					t.Errorf("Did not return expected error; want %v, got nil", tc.wantErr)
				} else if !tc.wantErr && err != nil {
					t.Errorf("Unexpected error: %v", err)
				} else if result != tc.expected {
					t.Errorf("Wrong divisors calculated. Want %d but got %d", tc.expected, result)
				}
			})
		}
	}
	```
2024/06/19 10:07:17 $ go mod tidy
2024/06/19 10:07:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.176s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:17 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:07:20 Model "openrouter/google/palm-2-chat-bison" responded (3503 ms) with:
	 ```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name      string
			givenBase int
			wantGrid  [][]int
			wantErr   error
		}{
			{
				name:      "test odd square: base > 3",
				givenBase: 5,
				wantGrid: [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 12, 19, 2, 9},
					{11, 18, 25, 3, 21},
				},
				wantErr: nil,
			},
			{
				name:      "test base 3",
				givenBase: 3,
				wantGrid: [][]int{
					{2, 7, 6},
					{9, 5, 1},
					{4, 3, 8},
				},
				wantErr: nil,
			},
			{
				name:      "test even base",
				givenBase: 10,
				wantErr:   errors.New("base must be odd and > 2"),
			},
			{
				name:      "test base < 3",
				givenBase: 1,
				wantErr:   errors.New("base must be odd and > 2"),
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				gotGrid, err := magicSquareOdd(tt.givenBase)
				if err != tt.wantErr {
					t.Fatalf("magicSquareOdd() error should be %v, got error %v", tt.wantErr, err)
				}
				if !reflect.DeepEqual(gotGrid, tt.wantGrid) {
					t.Errorf("magicSquareOdd() result did not match expected grid!")
				}
			})
		}
	}
	```
2024/06/19 10:07:20 $ go mod tidy
2024/06/19 10:07:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.199s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:21 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:07:23 Model "openrouter/google/palm-2-chat-bison" responded (2287 ms) with:
	 ```go
	package light

	import (
	  "testing"
	)

	func TestMatchBytes(t *testing.T) {
	  testCases := []struct {
	    s1       []byte
	    s2       []byte
	    expected bool
	  }{
	    {[]byte("Hello"), []byte("Hello"), true},
	    {[]byte("Hello"), []byte("HELLO"), true},
	    {[]byte("Hello"), []byte("Hella"), false},
	    {[]byte("Hello"), []byte("Hello,"), false},
	    {[]byte("123abc"), []byte("123aBc"), true},
	    {[]byte("123abc"), []byte("123aBc,"), false},
	    {[]byte(""), []byte(""), true},
	    {[]byte("A"), []byte("a"), true},
	    {[]byte("*"), []byte(";"), false},
	    {[]byte(";"), []byte("*"), false},
	  }

	  for _, tc := range testCases {
	    actual := matchBytes(tc.s1, tc.s2)
	    if actual != tc.expected {
	      t.Errorf("Test failed for s1='%s', s2='%s'. Expected: %v, Actual: %v", tc.s1, tc.s2, tc.expected, actual)
	    }
	  }
	}
	```
2024/06/19 10:07:23 $ go mod tidy
2024/06/19 10:07:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:24 Executes tests with 2 coverage objects
2024/06/19 10:07:24 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:07:29 Model "openrouter/google/palm-2-chat-bison" responded (5523 ms) with:
	 ```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestPascalsTriangle(t *testing.T) {
		type inputAndOutput struct {
			Input  int
			Output [][]int
		}

		// Setting up positive test cases to ensure we have at least
		// two tests and we are testing various scenarios.
		// Each element in testScenarios represents input and expected output.
		testScenarios := []inputAndOutput{
			{0, [][]int{}},
			{1, [][]int{{1}}},
			{2, [][]int{{1}, {1, 1}}},
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}},
			{6, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}, {1, 5, 10, 10, 5, 1}}},
		}

		// Negative testcase with rows < 0 to ensure negative values are appropriately tested 
		negativeTestScenarios := []inputAndOutput{
			{-10, nil},
			{-5, nil},
			{-1, nil},
		}

		// Iterating through the positive test scenarios, performing the testing of the 'pascalsTriangle' function.
		for _, scenario := range testScenarios {
			output, err := light.PascalsTriangle(scenario.Input)
			if err != nil {
				t.Errorf("An unexpected error occurred while processing the provided rows:%d -> %s", scenario.Input, err)
			}

			if !compare2DInts(output, scenario.Output) {
				t.Errorf("Unexpected result. got=%#v want=%#v rows=%d", output, scenario.Output, scenario.Input)
			}
		}

		// Iterating through the negative test scenarios to test negative scenario
		for _, scenario := range negativeTestScenarios {
			_, err := light.PascalsTriangle(scenario.Input)
			if err == nil {
				t.Errorf("We expected an error for rows=%d, but no error occurred!", scenario.Input)
			}
		}
	}

	// Helper function compare2DInts is used to compare two-dimensional slices(2D int slices) in a flexible way, including cases where one of them may be nil when another not.
	// This handles special cases such as nil arrays (e.g. [[]] which doesn't equal to [][]).
	func compare2DInts(a, b [][]int) bool {
		// Return nil for nil. When two 2D array both are nil, this will handle this case.
		if a == nil && b == nil {
			return true
		} else if a == nil || b == nil {
			return false
		}

		// For both non-nil cases, checking the outer len.  We can guarantee 2D slices won't be one nil and the other is non-nil,
		// the previous nil check will handle these 2D arrays (e.g. [] vs  [[]]).
		n1, n2 := len(a), len(b)
		
2024/06/19 10:07:29 $ go mod tidy
2024/06/19 10:07:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:29 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:07:33 Model "openrouter/google/palm-2-chat-bison" responded (4023 ms) with:
	 ```go
	package light_test

	import (
		"errors"
		"light"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name     string
			number   string
			expected string
			err      error
		}{
			{
				name:     "normal case",
				number:   "1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with spaces",
				number:   "123 456 7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with dots",
				number:   "123.456.7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with parentheses",
				number:   "(123) 456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with hyphens",
				number:   "123-456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with pluses",
				number:   "+1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with letters",
				number:   "123abc456",
				expected: "",
				err:      errors.New("letters not permitted"),
			},
			{
				name:     "with punctuations",
				number:   "123!456",
				expected: "",
				err:      errors.New("punctuations not permitted"),
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				actual, err := light.extractDigits(test.number)
				if err != test.err {
					t.Errorf("unexpected error: %v, expected: %v", err, test.err)
				}
				if actual != test.expected {
					t.Errorf("unexpected extracted digits: %q, expected: %q", actual, test.expected)
				}
			})
		}
	}
	```
2024/06/19 10:07:33 $ go mod tidy
2024/06/19 10:07:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.114s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:34 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:07:35 Model "openrouter/google/palm-2-chat-bison" responded (1217 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		type test struct {
			Input    int
			Expected int
		}

		var testCases = []test{
			{1, 0},
			{2, 1},
		}

		for _, tc := range testCases {
			r := simpleIfElse(tc.Input)
			if r != tc.Expected {
				t.Errorf("simpleIfElse(%d) returned %d; expected %d.", tc.Input, r, tc.Expected)
			}
		}
	}
	```
2024/06/19 10:07:35 $ go mod tidy
2024/06/19 10:07:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 1 tests in 0.229s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:07:36 Executes tests with 2 coverage objects
2024/06/19 10:07:36 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:07:38 Model "openrouter/google/palm-2-chat-bison" responded (2483 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "Default Case",
				i:    0,
				want: 1,
			},
			{
				name: "Specified Case",
				i:    1,
				want: 0,
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tc.i); got != tc.want {
					t.Errorf("simpleSwitchWithReturn(%d) = %d; want %d", tc.i, got, tc.want)
				}
			})
		}
	}
	```
2024/06/19 10:07:38 $ go mod tidy
2024/06/19 10:07:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/Default_Case
=== RUN   TestSimpleSwitchWithReturn/Specified_Case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Default_Case (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/Specified_Case (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.321s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:07:39 Executes tests with 3 coverage objects
2024/06/19 10:07:39 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:07:42 Model "openrouter/google/palm-2-chat-bison" responded (3837 ms) with:
	 ```golang
	package light

	import (
	  "testing"
	)

	func TestIsSorted(t *testing.T) {
	  type testData struct {
	    testName string
	    in       []int
	    expOut   bool
	  }

	  testDataCases := []testData{
	    {
	      testName: "1. Sorted positive int slice",
	      in:       []int{1, 2, 3, 4, 5},
	      expOut:   true,
	    },
	    {
	      testName: "2. Sorted negative int slice",
	      in:       []int{-5, -3, -2, -1, 0},
	      expOut:   true,
	    },
	    {
	      testName: "3. Empty int slice",
	      in:       []int{},
	      expOut:   true,
	    },
	    {
	      testName: "4. Single-element int slice",
	      in:       []int{7},
	      expOut:   true,
	    },
	    {
	      testName: "5. Unsorted positive int slice",
	      in:       []int{5, 4, 3, 2, 1},
	      expOut:   false,
	    },
	    {
	      testName: "6. Two element slice: unsorted",
	      in:       []int{2, 1},
	      expOut:   false,
	    },
	    {
	      testName: "7. Unsorted int slice with duplicates",
	      in:       []int{3, 1, 3, 6, 1, 0},
	      expOut:   false,
	    },
	    {
	      testName: "8. Unsorted string slice",
	      in:       []int{'g', 'a', 'f', 'm', 'a'},
	      expOut:   false,
	    },
	  }

	  for _, td := range testDataCases {
	    t.Run(td.testName, func(t *testing.T) {
	      if ret := isSorted(td.in); ret != td.expOut {
	        t.Errorf("Incorrect output!\nTest Case:\n%-40s| Input   : (%#v)\n                      expected result : %#v\n                      obtained result : (%#v)", td.testName, td.in, td.expOut, ret)
	      }
	    })
	  }
	}

	```
2024/06/19 10:07:42 $ go mod tidy
2024/06/19 10:07:42 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:43 Executes tests with 2 coverage objects
2024/06/19 10:07:43 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:07:45 Model "openrouter/google/palm-2-chat-bison" responded (2450 ms) with:
	 ```Go
	import (
	    "testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
	    type testCase struct {
	        Input    []int
	        Expected int
	    }

	    testCases := []testCase{
	        // Success scenario 1
	        {
	            Input:    []int{123, 4, 5},
	            Expected: 123,
	        },
	        // Success scenario 2
	        {
	            Input:    []int{246, 11, 33},
	            Expected: 3,
	        },
	        // Edge scenario: Array is empty
	        {
	            Input:    []int{},
	            Expected: 3,
	        },
	        // Edge scenario: All array elements are equal
	        {
	            Input:    []int{3, 3, 3},
	            Expected: 3,
	        },
	    }

	    for _, tc := range testCases {
	        result := typeArrayAccess(tc.Input)
	        if result != tc.Expected {
	            t.Errorf("Test case failed. Expected: %d, Got: %d", tc.Expected, result)
	        }
	    }
	}
	```
2024/06/19 10:07:45 $ go mod tidy
2024/06/19 10:07:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.023s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:45 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:07:47 Model "openrouter/google/palm-2-chat-bison" responded (2109 ms) with:
	 ```go
	package testlight

	import (
		"testing"

		"light"
	)

	var inputA = []int{0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}
	var inputB = []int{5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105}

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		testcases := []struct {
			desc string
			input []int
			expected int
		}{
			{desc: "check for inputA", input:inputA, expected:1},
			{desc: "check for inputB", input: inputB, expected: 0},
			{desc: "check for an empty slice", input: []int{}, expected: 0},
		}

		for _, test := range testcases {
			 actualOutput := light.typeArrayConsecutiveAccess(test.input)
			if actualOutput != test.expected {
				t.Errorf("%s failed : expected %d got %d", test.desc, test.expected, actualOutput)
			}
		}
	}
	```
2024/06/19 10:07:47 $ go mod tidy
2024/06/19 10:07:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:48 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:07:50 Model "openrouter/google/palm-2-chat-bison" responded (1970 ms) with:
	 ```golang
	package light

	import "testing"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		var empty2DArray [][]int

		type testCases struct {
			inputArray  [][]int
			output int
		}

		testSet := []testCases{
			{[][]int{{}, {}}, 2},
			{[][]int{{1, 2}, {3, 4}}, 2},
			{[][]int{{1}, {2}}, 1},
			{[][]int{{9999}}, 2},
			{[][]int{{0, 0}}, 1},
			{[][]int{[]int{9999, 9999}}, 0},
			{[][]int{}, 0},
			{empty2DArray, 0},
		}

		for _, testData := range testSet {
			result := typeArrayMultidimensionalArrayLength(testData.inputArray)
			if result != testData.output {
				t.Errorf("input %v: got %d instead of expected length %d.", testData.inputArray, result, testData.output)
			}
		}
	}
	```
2024/06/19 10:07:50 $ go mod tidy
2024/06/19 10:07:50 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.

DONE 1 tests, 1 failure in 0.386s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:50 Executes tests with 3 coverage objects
2024/06/19 10:07:50 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:07:55 Model "openrouter/google/palm-2-chat-bison" responded (4774 ms) with:
	 ```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestIsValidDate(t *testing.T) {
		type test struct {
			inputs      [3]int
			expectedRes bool
		}

		var tests = []test{
			{inputs: [3]int{31, 1, 2000}, expectedRes: true},
			{inputs: [3]int{29, 2, 2004}, expectedRes: true},
			{inputs: [3]int{28, 2, 2007}, expectedRes: true},
			{inputs: [3]int{15, 3, 1800}, expectedRes: true},
			{inputs: [3]int{31, 6, 1961}, expectedRes: true},
			{inputs: [3]int{14, 10, 1632}, expectedRes: true},
			{inputs: [3]int{31, 10, 1521}, expectedRes: true},
			{inputs: [3]int{1, 12, 1446}, expectedRes: true},
			{inputs: [3]int{1, 5, 1279}, expectedRes: true},
			{inputs: [3]int{22, 4, 1549}, expectedRes: true},
			{inputs: [3]int{32, 2, 784}, expectedRes: false},
			{inputs: [3]int{30, 3, 881}, expectedRes: false},
			{inputs: [3]int{0, 4, 721}, expectedRes: false},
			{inputs: [3]int{7, 0, 1241}, expectedRes: false},
			{inputs: [3]int{31, 14, 744}, expectedRes: false},
			{inputs: [3]int{31, 13, 1703}, expectedRes: false},
			{inputs: [3]int{-3, 3, 431}, expectedRes: false},
			{inputs: [3]int{1520, 7, 472}, expectedRes: false},
			{inputs: [3]int{755, 5, 763}, expectedRes: false},
			{inputs: [3]int{27, 4, 476}, expectedRes: false},
			{inputs: [3]int{1819, 6, 758}, expectedRes: false},
			{inputs: [3]int{717, 10, 259}, expectedRes: false},
			{inputs: [3]int{497, 9, 1579}, expectedRes: false},
			{inputs: [3]int{256, 5, 487}, expectedRes: false},
			{inputs: [3]int{1721, 6, 467}, expectedRes: false},
			{inputs: [3]int{766
2024/06/19 10:07:55 $ go mod tidy
2024/06/19 10:07:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
validateDate_test.go:1:1: expected 'package', found 'go'

=== Errors
validateDate_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:07:55 Evaluated model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light": encountered 19 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.165s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:41:16: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.165s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
# light_test [light.test]
 FAIL	light [build failed]
# light_test [light.test]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.155s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]
# light_test [light.test]
 FAIL	light [build failed]
# light_test [light.test]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.155s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

cascadingIfElse.go exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.328s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestLoop
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:
--- FAIL: TestLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestLoop (0.00s)
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestLoop
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:
--- FAIL: TestLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestLoop (0.00s)
    forLoop_test.go:14: The expected Sum Value does not match. Output Value: 20 -3: 0:

DONE 1 tests, 1 failure in 0.333s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element

klarnerRadoSequence.go exit status 1
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.176s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.176s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.199s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.199s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:28: Test failed for s1='Hello', s2='Hello,'. Expected: false, Actual: true
    matchBytes_test.go:28: Test failed for s1='123abc', s2='123aBc,'. Expected: false, Actual: true

DONE 1 tests, 1 failure in 0.337s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.114s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.114s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
=== RUN   TestIsSorted/1._Sorted_positive_int_slice
=== RUN   TestIsSorted/2._Sorted_negative_int_slice
=== RUN   TestIsSorted/3._Empty_int_slice
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
=== RUN   TestIsSorted/4._Single-element_int_slice
=== RUN   TestIsSorted/5._Unsorted_positive_int_slice
=== RUN   TestIsSorted/6._Two_element_slice:_unsorted
=== RUN   TestIsSorted/7._Unsorted_int_slice_with_duplicates
=== RUN   TestIsSorted/8._Unsorted_string_slice
--- FAIL: TestIsSorted (0.00s)
    --- PASS: TestIsSorted/1._Sorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/2._Sorted_negative_int_slice (0.00s)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)
    --- PASS: TestIsSorted/4._Single-element_int_slice (0.00s)
    --- PASS: TestIsSorted/5._Unsorted_positive_int_slice (0.00s)
    --- PASS: TestIsSorted/6._Two_element_slice:_unsorted (0.00s)
    --- PASS: TestIsSorted/7._Unsorted_int_slice_with_duplicates (0.00s)
    --- PASS: TestIsSorted/8._Unsorted_string_slice (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted/3._Empty_int_slice (0.00s)
    sort_test.go:60: Incorrect output!
        Test Case:
        3. Empty int slice                      | Input   : ([]int{})
                              expected result : true
                              obtained result : (false)
    --- FAIL: TestIsSorted/3._Empty_int_slice (0.00s)

=== FAIL: . TestIsSorted (0.00s)

DONE 9 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.023s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.023s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.

DONE 1 tests, 1 failure in 0.386s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:27: input [[] []]: got 1 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[9999]]: got 0 instead of expected length 2.
    typeArrayMultidimensionalArrayLength_test.go:27: input [[0 0]]: got 0 instead of expected length 1.

DONE 1 tests, 1 failure in 0.386s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
validateDate_test.go:1:1: expected 'package', found 'go'

=== Errors
validateDate_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
validateDate_test.go:1:1: expected 'package', found 'go'

=== Errors
validateDate_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.026s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
2024/06/19 10:10:27 Evaluating model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:10:27 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:10:31 Model "openrouter/google/palm-2-chat-bison" responded (3870 ms) with:
	 ```golang
	package light_test

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			description string
			expression  string
			expected    bool
		}{
			{
				description: "Basic balanced brackets check",
				expression:  "[[()]]",
				expected:    true,
			},
			{
				description: "Unbalanced closing bracket - mismatched",
				expression:  "[])",
				expected:    false,
			},
			{
				description: "Non-bracket characters should return false",
				expression:  "hello world!",
				expected:    false,
			},
			{
				description: "Unbalanced open bracket - not all are closed",
				expression:  "[[([[[]",
				expected:    false,
			},
			{
				description: "Empty string should consider the brackets balanced",
				expression:  "",
				expected:    true,
			},
			{
				description: "Multiple types of balanced brackets are allowed",
				expression:  "({[]()})(({[]}))({[]()})",
				expected:    true,
			},
			{
				description: "Complex mixed expression with balanced brackets",
				expression:  "{[[a(bc)[def]]]ghi}",
				expected:    true,
			},
			{
				description: "Closing square bracket before open square bracket",
				expression:  "))))(()(][[[()()]]",
				expected:    false,
			},
			{
				description: "Valid open & close square brackets mixed with braces",
				expression:  "[][[[[}]]]](){",
				expected:    false,
			},
			{
				description: "All types of braces and brackets allowed mixed in any sequence is ok",
				expression:  "{[[((([(())))[][]{{}}}}]][]{}()]}([])()",
				expected:    true,
			},
		}

		for _, test := range tests {
			result := hasBalancedBrackets(test.expression)
			if result != test.expected {
				t.Errorf("FAIL %v. hasBalancedBrackets(%s) got %v expected %v", test.description, test.expression, result, test.expected)
			} else {
				t.Logf("PASS %v", test.description)
			}
		}
	}
	```
2024/06/19 10:10:31 $ go mod tidy
2024/06/19 10:10:31 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:32 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:10:35 Model "openrouter/google/palm-2-chat-bison" responded (3538 ms) with:
	 ```go
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestBinarySearch(t *testing.T) {
	    type args struct {
	        a []int
	        x int
	    }
	    tests := []struct {
	        name string
	        args args
	        want int
	    }{
	        {
	            name: "search element in even numbered sorted array",
	            args: args{
	                a: []int{2, 4, 6, 8, 10, 12, 14, 16},
	                x: 10,
	            },
	            want: 4,
	        },
	        {
	            name: "search element in odd numbered sorted array",
	            args: args{
	                a: []int{1, 3, 5, 7, 9, 11, 13},
	                x: 9,
	            },
	            want: 4,
	        },
	        {
	            name: "element not present in odd numbered sorted array",
	            args: args{
	                a: []int{1, 3, 5, 7, 9, 11, 13},
	                x: 10,
	            },
	            want: -1,
	        },
	        {
	            name: "empty array",
	            args: args{
	                a: []int{},
	                x: 10,
	            },
	            want: -1,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := light.BinarySearch(tt.args.a, tt.args.x); got != tt.want {
	                t.Errorf("BinarySearch() = %v, want %v", got, tt.want)
	            }
	        })
	    }
	}
	```
2024/06/19 10:10:35 $ go mod tidy
2024/06/19 10:10:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:54:29: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:54:29: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.121s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:36 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:10:38 Model "openrouter/google/palm-2-chat-bison" responded (2419 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		type args struct {
			x int
			y int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test Case 1",
				args: args{
					x: 19,
					y: 44,
				},
				want: 9,
			},
			{
				name: "Test Case 2",
				args: args{
					x: 5,
					y: 40,
				},
				want: 5,
			},
			{
				name: "Test Case 3",
				args: args{
					x: 43,
					y: 50,
				},
				want: 21,
			},
			{
				name: "Test Case 4",
				args: args{
					x: 56,
					y: 60,
				},
				want: 28,
			},
			{
				name: "Test Case 5",
				args: args{
					x: 61,
					y: 25,
				},
				want: 61,
			},
		}
		for _, tt := range tests {
			got := light.CallLoopConditionsOftenEnough(tt.args.x, tt.args.y)
			if got != tt.want {
				t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:10:38 $ go mod tidy
2024/06/19 10:10:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.136s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:38 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:10:40 Model "openrouter/google/palm-2-chat-bison" responded (1861 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/user/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		var tests = []struct {
			input    int
			expected int
		}{
			{1, 2},
			{3, 4},
			{2, 5},
		}

		for _, test := range tests {
			result := light.CascadingIfElse(test.input)
			if result != test.expected {
				t.Errorf("cascadingIfElse(%d) = %d, expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/06/19 10:10:40 $ go mod tidy
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:10:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:10:45 Model "openrouter/google/palm-2-chat-bison" responded (4379 ms) with:
	 ```go
	package light

	import (
	    "testing"
	    "strconv"
	)

	func TestComputeStepCount(t *testing.T) {
	    var tests = []struct {
	        input             int
	        expectedCount     int
	        expectedError     bool
	    }{
	        {2, 1, false},
	        {3, 7, false},
	        {4, 2, false},
	        {5, 5, false},
	        {7, 16, false},
	        {9, 19, false},
	        {22, 15, false},
	        {100, 25, false},
	        {65535, 304, false},
	        {0, 0, true},
	        {-5, 0, true},
	        {-3790524, 0, true},
	    }

	    for i, testItem := range tests {
	        t.Run(strconv.Itoa(i), func(t *testing.T) {
	            count, err := computeStepCount(testItem.input)
	            if testItem.expectedError {
	                if err == nil {
	                    t.Errorf("computeStepCount(%d) did NOT return an expected error but instead it returned '%d'", testItem.input, count)
	                }
	                return
	            }

	            if err != nil {
	                t.Errorf("computeStepCount(%d) gave an unexpected error which is '%s'", testItem.input, err.Error())
	            }

	            if count != testItem.expectedCount {
	                t.Errorf("computeStepCount(%d) returned %d but expected %d", testItem.input, count, testItem.expectedCount)
	            }
	        })
	    }
	}
	```
2024/06/19 10:10:45 $ go mod tidy
2024/06/19 10:10:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:46 Executes tests with 6 coverage objects
2024/06/19 10:10:46 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:10:48 Model "openrouter/google/palm-2-chat-bison" responded (2542 ms) with:
	 ```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		type args struct {
			x rune
			y rune
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Base Test 1",
				args: args{'A', 'B'},
				want: true,
			},
			{
				name: "Base Test 2",
				args: args{'C', 'B'},
				want: false,
			},
			{
				name: "Base Test 3",
				args: args{'A', 'C'},
				want: false,
			},
			// Add more test cases to achieve 100% code coverage
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.args.x, tt.args.y); got != tt.want {
					t.Errorf("conditionsAnd(%s, %s) = %v, want %v", tt.args.x, tt.args.y, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:10:48 $ go mod tidy
2024/06/19 10:10:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestConditionsAnd
=== RUN   TestConditionsAnd/Base_Test_1
=== RUN   TestConditionsAnd/Base_Test_2
=== RUN   TestConditionsAnd/Base_Test_3
--- PASS: TestConditionsAnd (0.00s)
    --- PASS: TestConditionsAnd/Base_Test_1 (0.00s)
    --- PASS: TestConditionsAnd/Base_Test_2 (0.00s)
    --- PASS: TestConditionsAnd/Base_Test_3 (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 4 tests in 0.408s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:10:49 Executes tests with 2 coverage objects
2024/06/19 10:10:49 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:10:53 Model "openrouter/google/palm-2-chat-bison" responded (4261 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestEquilibriumIndices(t *testing.T) {
		type Test struct {
			sequence      []int
			expectedList  string
		}

		// Create testing inputs and expected outputs.
		tests := []Test{
			// Normal scenario with multiple indices.
			{[]int{2, 6, 3, 4, 3, 2, 6, -6, 4}, "2;7"},
			// Single equilibrium index at end of list.
			{[]int{4, 5, 3, 8, 7, 2, 4}, "7"},
			// No equilibrium indices found.
			{[]int{1, 3, 0, -5, 4, 3}, ""},
			// All elements same number with single equilibrium index.
			{[]int{5, 5, 5, 5, 5}, "2"},
			// Empty slice case.
			{[]int{}, ""},
		}

		for _, test := range tests {
			result := "Got: " + light.equilibriumIndices(test.sequence) + "  "
			result += "Want: " + test.expectedList
			if light.equilibriumIndices(test.sequence) != test.expectedList {
				t.Errorf("Error. %s", result)
			}
		}
	}

	```
2024/06/19 10:10:53 $ go mod tidy
2024/06/19 10:10:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices

DONE 0 tests, 2 errors in 0.186s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:53 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:10:56 Model "openrouter/google/palm-2-chat-bison" responded (2750 ms) with:
	 ```go
	package light_test

	import (
		"light"
		"testing"
	)

	func TestForLoop(t *testing.T) {
		type args struct {
			s int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "positive test case",
				args: args{
					s: 5,
				},
				want: 20, //5+4+3+2+1+5+4+3+2+1
			},
			{
				name: "negative test case",
				args: args{
					s: -5,
				},
				want: 0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ForLoop(tt.args.s); got != tt.want {
					t.Errorf("ForLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:10:56 $ go mod tidy
2024/06/19 10:10:56 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./forLoop_test.go:34:20: undefined: light.ForLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:34:20: undefined: light.ForLoop

DONE 0 tests, 1 error in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:10:56 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:11:02 Model "openrouter/google/palm-2-chat-bison" responded (5436 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/saman2003/goLangPractice/src/main/golang/levelTwo/testCases/testCases/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		var pairs = []struct {
			x        uint64
			p        uint64
			expected int
		}{
			{27, 32, 1},
			{1751548980418426081, 7406675579700710047, 1},
			{1404555625022250828, 8950056590329515701, -1},
			{5286208525052705707, 3554510023202028262, 0},
			{6065862634520028590, 9508828505957232524, 0},
			{6684270600545526251, 5252924252475090550, 1},
			{4458022057282327255, 9205092772705232853, 1},
			{6109205227030951063, 9280854855221285509, -1},
			{9530051292227055523, 4326240529050985242, 0},
			{6953822526062428055, 7052526610708042725, 0},
		}

		for _, v := range pairs {
			if actual, err := light.JacobiSymbol(v.x, v.p); err != nil {
				t.Errorf("Error executing the method on the test case.\nExpected: %v \nReceived: %v \nGot Error: %s", v.expected, actual, err.Error())
			} else if v.expected != actual {
				t.Errorf("Test data : {%d, %d}\nExpected: %d \nReceived: %d", v.x, v.p, v.expected, actual)
			}
		}
	}

	/*
	coverage report before applying suggestions:
	mode: set
	    mode: atomic
	coverage:
	    /Users/sa29/Documents/goPlayground/src/main/golang/levelTwo/packages/light.jacobiSymbol/code.go:
	        lines:         85.71% ( 6/ 7)
	        statements
2024/06/19 10:11:02 $ go mod tidy
2024/06/19 10:11:02 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:02 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:11:05 Model "openrouter/google/palm-2-chat-bison" responded (3026 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		type args struct {
			limit int
		}
		tests := []struct {
			name string
			args args
			want []int
		}{
			{
				name: "Testing with limit 6",
				args: args{
					limit: 6,
				},
				want: []int{1, 3, 7, 17, 41, 99},
			},
			{
				name: "Testing with limit 10",
				args: args{
					limit: 10,
				},
				want: []int{1, 3, 7, 17, 41, 99, 241, 583, 1423, 3469},
			},
			{
				name: "Testing with limit 0",
				args: args{
					limit: 0,
				},
				want: []int{1},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.InitialiseKlarnerRadoSequence(tt.args.limit); !equal(got, tt.want) {
					t.Errorf("InitialiseKlarnerRadoSequence(%d) = %v, want %v", tt.args.limit, got, tt.want)
				}
			})
		}
	}

	func equal(a, b []int) bool {
		if len(a) != len(b) {
			return false
		}
		for i, el := range a {
			if el != b[i] {
				return false
			}
		}
		return true
	}
	```
2024/06/19 10:11:05 $ go mod tidy
2024/06/19 10:11:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:06 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:11:11 Model "openrouter/google/palm-2-chat-bison" responded (5144 ms) with:
	 ```golang
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestMaximumValue(t *testing.T) {
	    tests := []struct {
	        name       string
	        items      []light.Item
	        maxWeight  int
	        want       int
	    }{
	        {
	            name: "BasicTest1",
	            items: []light.Item{
	                {3, 4},
	                {4, 5},
	                {7, 10},
	            },
	            maxWeight: 8,
	            want: 15,
	        },
	        {
	            name: "BasicTest2",
	            items: []light.Item{
	                {3, 4},
	                {4, 5},
	                {7, 10},
	            },
	            maxWeight: 15,
	            want: 22,
	        },
	        {
	            name: "NoItems",
	            items: []light.Item{},
	            maxWeight: 0,
	            want: 0,
	        },
	        {
	            name: "ItemFitsExactly",
	            items: []light.Item{
	                {5, 5},
	            },
	            maxWeight: 5,
	            want: 5,
	        },
	        {
	            name: "AllItemsFit",
	            items: []light.Item{
	                {2, 1},
	                {2, 3},
	            },
	            maxWeight: 4,
	            want: 4,
	        },
	        {
	            name: "TestHeavyItemsFirst",
	            items: []light.Item{
	                {5, 1},
	                {1, 4},
	                {7, 3},
	            },
	            maxWeight: 11,
	            want: 10,
	        },
	        {
	            name: "EmptyContainer",
	            items: []light.Item{},
	            maxWeight: 8,
	            want: 0,
	        },
	        {
	            name: "OneHeavyItemOnly",
	            items: []light.Item{
	                {10, 5},
	            },
	            maxWeight: 2,
	            want: 0,
	        },
	        {
	            name: "SmallWeightsOnly",
	            items: []light.Item{
	                {1, 3},
	                {2, 1},
	            },
	            maxWeight: 8,
	            want: 4,
	        },
	        {
	            name: "EmptyWeight",
	            items: []light.Item{
	                {1, 2},
	                {6, 5},
	                {3, 8},
	            },
	            maxWeight: 0,
	            want: 0,
	        },
	        {
	            name: "DuplicateValuesWeights",
	            items: []light.Item{
	                {4, 8},
	                {2, 1},
	                {5, 4},
	                {8, 6},
	                {8, 3},
	            },
	            maxWeight: 14,
	            want: 16,
	        },
	        {
	            name: "OneItemFits",
	            items: []light.Item{
	                {4, 8},
	                {
2024/06/19 10:11:11 $ go mod tidy
2024/06/19 10:11:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:11 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:11:15 Model "openrouter/google/palm-2-chat-bison" responded (3361 ms) with:
	 ```go
	package light_test

	import (
		"light"
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
		}{
			{aNumber: 481, expected: 240},
			{aNumber: 433, expected: 1},
			{aNumber: 105, expected: 5},
			{aNumber: 625, expected: 125},
			{aNumber: 87032, expected: 43516},
			{aNumber: 450263, expected: 173271},
			{aNumber: 418794, expected: 209397},
			{aNumber: 6769587, expected: 3384793},
			{aNumber: 97045785, expected: 48522892},
			{aNumber: 939851559, expected: 234962889},
			{aNumber: 369852501, expected: 184926250},
			{aNumber: 937553540, expected: 468776770},
		}

		for _, tc := range testCases {
			actual, err := light.LargestProperDivisor(tc.input)
			if err != nil {
				t.Errorf("Error: %v", err)
			}
			if actual != tc.expected {
				t.Errorf("Test Failed expected: %d, got: %d", tc.expected, actual)
			}
		}
	}
	```
2024/06/19 10:11:15 $ go mod tidy
2024/06/19 10:11:15 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors

DONE 0 tests, 11 errors in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:15 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:11:20 Model "openrouter/google/palm-2-chat-bison" responded (5092 ms) with:
	 ```go
	package light

	import "testing"

	var inputAndOutput = []struct {
		input    int
		expected [][]int
	}{
		{3, [][]int{{2, 9, 4}, {7, 5, 3}, {6, 1, 8}}},
		{5, [][]int{{7, 12, 1, 14, 2}, {23, 5, 7, 8, 15}, {4, 6, 13, 20, 22}, {10, 16, 19, 3, 17}, {25, 21, 18, 24, 9}}},
		{7, [][]int{{37, 26, 2, 23, 40, 7, 34}, {8, 35, 42, 3, 20, 31, 10}, {33, 16, 5, 32, 17, 28, 11}, {24, 1, 44, 39, 6, 21, 18}, {46, 36, 13, 4, 41, 22, 29}, {19, 30, 9, 38, 15, 25, 12}, {43, 14, 27, 45, 36, 20, 1}}},
	}

	func TestMagicSquareOdd(t *testing.T) {
		for _, testData := range inputAndOutput {
			ms, err := magicSquareOdd(testData.input)
			if err != nil {
				t.Errorf("magicSquareOdd(%d) returned error: %v", testData.input, err)
				continue
			}

			if checkEquals(ms, testData.expected) == false {
				t.Errorf("test failed for odd(%d), got %v expected: %v", testData.input, ms, testData.expected)
			}
		}
	}

	func checkEquals(got [][]int, expected [][]int) bool {
		if len(got) != len(expected) {
			return false
		}

		for i := range got {
			if len(got[i]) != len(expected[i]) {
				return false
			}

			for j := range got[i] {
				if got[i][j] != expected[i][j] {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:11:20 $ go mod tidy
2024/06/19 10:11:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]

DONE 1 tests, 1 failure in 0.422s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:21 Executes tests with 8 coverage objects
2024/06/19 10:11:21 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:11:23 Model "openrouter/google/palm-2-chat-bison" responded (2129 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		testCases := []struct {
			s1       []byte
			s2       []byte
			expected bool
		}{
			{[]byte("Hello"), []byte("Hello"), true},
			{[]byte("hello"), []byte("HeLLo"), true},
			{[]byte("123abc"), []byte("123ABC"), true},
			{[]byte("abc-"), []byte("abc_"), false},
			{[]byte("a"), []byte("ab"), false},
			{[]byte{}, []byte(""), true},
			{[]byte("aBcD09-"), []byte("abcdef@0"), false},
			{[]byte("go10"), []byte("gO!0"), false},
		}

		for _, tc := range testCases {
			result := matchBytes(tc.s1, tc.s2)
			if result != tc.expected {
				t.Errorf("For inputs s1 = %s and s2 = %s, got result %v but expected %v", tc.s1, tc.s2, result, tc.expected)
			}
		}
	}
	```
2024/06/19 10:11:23 $ go mod tidy
2024/06/19 10:11:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:23 Executes tests with 2 coverage objects
2024/06/19 10:11:23 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:11:30 Model "openrouter/google/palm-2-chat-bison" responded (6233 ms) with:
	 ```golang
	package light_test

	import (
		"reflect"
		"testing"

		"github.com/golang-light/light/light"
	)

	//TestPascalsTriangle tests function light.pascalsTriangle() on valid and edge-case scenarios
	func TestPascalsTriangle(t *testing.T) {
		type test struct {
			//Inputs
			rownum int
			//Expected Output
			pt   [][]int
			errn error
		}

		testCases := []test{
			//Rows = 0, Expected to have 1-row result: [[1]]
			{0, [][]int{{1}}, nil},
			//Rows = 4
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}, nil},
			//Rows = -4 Expected error, no output triangle
			{-4, nil, errors.New("Rows can't be negative!")},
			//Edge case test: Rows =50000 is also handled gracefully without stackoverflow (max possible rows 80,082 for 32bit systems)
			{50000, nil, errors.New("Rows can't be negative!")},
		}

		for i, c := range testCases {
			t.Run("", func(t *testing.T) {
				//Get triangle
				actualTriangle, err := light.PascalsTriangle(c.rownum)
				//If an error has occured in case where there isn't supposed to be, fail tests; in any case of error just compare the received message
				if (c.errn != nil && err == nil) || (c.errn == nil && err != nil) ||
					(c.errn != nil && err != nil && c.errn.Error() != err.Error()) {
					t.Fatalf("\nTEST %d: Invalid error. expected = %s, \tactual   = %s", i, c.errn, err)
				}
				//If function executed successfully (even in expected error cases above), check triangle returned
				if err == nil {
					//if lengths mismatched fail test instantly
					if !reflect.DeepEqual(len(actualTriangle), len(c.pt)) {
						t.Errorf("\nTEST %d: Rows length is mismatched:\n\texpected = %d,\n\tactual   = %d", i, len(c.pt), len(actualTriangle))
					}
					for pIndex, r1 := range actualTriangle {
						//Check number of elements in every rows, stop on mismatch, report that row only
						if !reflect.DeepEqual(len(r1), len(c.pt[pIndex])) {
							t.Errorf("\nTEST %d:\n Row no%d: Elements length is mismatched.\nActual:   %+v\nExpected: %+v", i, pIndex, r1, c.pt[pIndex])
							break
						}
						//Compare each row element-by-element. Stop at first encountered mismatched pair, report actual row and expected row only to reduce noise in failure output
						for cIndex, val := range c.pt[pIndex] {
							if val != r1[cIndex] {
								t
2024/06/19 10:11:30 $ go mod tidy
2024/06/19 10:11:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:30 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:11:32 Model "openrouter/google/palm-2-chat-bison" responded (2493 ms) with:
	 ```go
	package light

	import (
	    "errors"
	    "testing"
	)

	func TestExtractDigits(t *testing.T) {
	    tests := []struct {
	        in       string
	        out      string
	        hasError bool
	    }{
	        // Test empty string.
	        {"", "", false},
	        // Test string with all digits.
	        {"1234567890", "1234567890", false},
	        // Test string with mixed digits and special characters.
	        {"+012-3 .   (4)5.6 789@0#:", "01234567890", true},
	        // Test string with letters: should return an error.
	        {"abc123", "", true},
	    }

	    for _, tt := range tests {
	        cleanNumber, err := extractDigits(tt.in)
	        if err != nil && !tt.hasError {
	            t.Errorf("extractDigits(%q) returned unexpected error: %v", tt.in, err)
	        }
	        if cleanNumber != tt.out {
	            t.Errorf("extractDigits(%q) = %q, want %q", tt.in, cleanNumber, tt.out)
	        }
	    }
	}
	```
2024/06/19 10:11:32 $ go mod tidy
2024/06/19 10:11:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./phoneNumber_test.go:4:5: "errors" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:5: "errors" imported and not used

DONE 0 tests, 1 error in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:33 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:11:34 Model "openrouter/google/palm-2-chat-bison" responded (1164 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		type test struct {
			Input    int
			Expected int
		}

		var testCases = []test{
			{1, 0},
			{2, 1},
		}

		for _, tc := range testCases {
			r := simpleIfElse(tc.Input)
			if r != tc.Expected {
				t.Errorf("simpleIfElse(%d) returned %d; expected %d.", tc.Input, r, tc.Expected)
			}
		}
	}
	```
2024/06/19 10:11:34 $ go mod tidy
2024/06/19 10:11:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.229s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:11:34 Executes tests with 2 coverage objects
2024/06/19 10:11:34 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:11:37 Model "openrouter/google/palm-2-chat-bison" responded (2400 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "case 1",
				i:    1,
				want: 0,
			},
			{
				name: "default case",
				i:    2,
				want: 1,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn(%d) = %d, want %d", tt.i, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:11:37 $ go mod tidy
2024/06/19 10:11:37 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/case_1
=== RUN   TestSimpleSwitchWithReturn/default_case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/case_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/default_case (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.004s	coverage: 1.4% of statements

DONE 3 tests in 0.412s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:11:37 Executes tests with 3 coverage objects
2024/06/19 10:11:37 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:11:41 Model "openrouter/google/palm-2-chat-bison" responded (3114 ms) with:
	 ```golang
	package light

	import (
	  "testing"
	)

	func TestIsSorted(t *testing.T) {
	  type testData struct {
	    testName string
	    in       []int
	    expOut   bool
	  }

	  cases := []testData{
	    {
	      testName: "Empty slice",
	      in:       []int{},
	      expOut:   true,
	    },

	    {
	      testName: "Single element slice",
	      in:       []int{1},
	      expOut:   true,
	    },

	    {
	      testName: "Slices, with all elements unique",
	      in:       []int{1, 2, 3, 4, 5},
	      expOut:   true,
	    },

	    {
	      testName: "Slices, with all elements unique (in descending order)",
	      in:       []int{5, 4, 3, 2, 1},
	      expOut:   false,
	    },

	    {
	      testName: "Slices, with duplicate elements",
	      in:       []int{1, 1, 2, 2, 3, 3},
	      expOut:   true,
	    },

	    {
	      testName: "Slices, alternating positive and negative integers",
	      in:       []int{1, -1, 1, -1},
	      expOut:   true,
	    },
	  }

	  for _, tc := range cases {
	    res := isSorted(tc.in)
	    verifyBoolResult(t, tc, res, tc.expOut)
	  }
	}

	func verifyBoolResult(t *testing.T, td testData, result, expected bool) {
	  if result != expected {
	    t.Errorf("Incorrect result obtained by IsSorted:\n" +
	      "\tTest-case: %s\n"+
	      "\tGot        %v\n"+
	      "\tExpected   %v\n"+
	      "\tInput slice:%v\n",
	      td.testName, result, expected, td.in)
	  }
	}
	```
2024/06/19 10:11:41 $ go mod tidy
2024/06/19 10:11:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./sort_test.go:58:40: undefined: testData
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:58:40: undefined: testData

DONE 0 tests, 1 error in 0.163s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:11:43 Model "openrouter/google/palm-2-chat-bison" responded (2177 ms) with:
	 ```golang
	package light_test

	import (
		"testing"

		"light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name string
			args []int
			want int
		}{
			{name: "Test Case 1", args: []int{123}, want: 123},
			{name: "Test Case 2", args: []int{456}, want: 3},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				if got := light.TypeArrayAccess(test.args); got != test.want {
					t.Errorf("TypeArrayAccess() = %v, want %v", got, test.want)
				}
			})
		}
	}
	```
2024/06/19 10:11:43 $ go mod tidy
2024/06/19 10:11:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:43 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:11:46 Model "openrouter/google/palm-2-chat-bison" responded (2442 ms) with:
	 ```go
	package testlight

	import (
		"testing"

		"light"
	)

	var inputA = []int{0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}
	var inputB = []int{5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105}

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		testcases := []struct {
			desc string
			input []int
			expected int
		}{
			{desc: "check for inputA", input:inputA, expected:1},
			{desc: "check for inputB", input: inputB, expected: 0},
			{desc: "check for an empty slice", input: []int{}, expected: 0},
		}

		for _, test := range testcases {
			 actualOutput := light.typeArrayConsecutiveAccess(test.input)
			if actualOutput != test.expected {
				t.Errorf("%s failed : expected %d got %d", test.desc, test.expected, actualOutput)
			}
		}
	}
	```
2024/06/19 10:11:46 $ go mod tidy
2024/06/19 10:11:46 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:46 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:11:48 Model "openrouter/google/palm-2-chat-bison" responded (2227 ms) with:
	 ```golang
	package light

	import "testing"

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		var emptyArray [][]int

		cases := []struct {
			input    [][]int
			expected int
		}{
			{[][]int{{1, 2}, {3, 4}}, 2},
			{[][]int{{1, 2}, {3, 4, 5}}, 1},
			{[][]int{{1}, {2}}, 1},
			{emptyArray, 0},
		}

		for _, tt := range cases {
			got := typeArrayMultidimensionalArrayLength(tt.input)
			if got != tt.expected {
				t.Errorf("typeArrayMultidimensionalArrayLength(%v) = %d, Expected: %d", tt.input, got, tt.expected)
			}
		}
	}
	```
2024/06/19 10:11:48 $ go mod tidy
2024/06/19 10:11:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:49 Executes tests with 3 coverage objects
2024/06/19 10:11:49 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:11:53 Model "openrouter/google/palm-2-chat-bison" responded (4391 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestValidateDate(t *testing.T) {
		tests := []struct {
			day            int
			month           int
			year            int
			expectedOutcome bool
		}{
			{31, 1, 2022, true},
			{1, 7, 2000, true},
			{29, 2, 2004, true},
			{31, 4, 2003, true},
			{31, 6, 2014, true},
			{30, 9, 2019, true},
			{31, 10, 1993, true},
			{30, 11, 2009, true},
			{31, 12, 2020, true},
			{29, 2, 2001, false},
			{32, 3, 2022, false},
			{13, 2, 2018, false},
			{31, 1, 1582, false},
		}

		for _, test := range tests {
			outcome := validDate(test.day, test.month, test.year)
			if outcome != test.expectedOutcome {
				t.Errorf("For date %d-%d-%d, expected outcome %v, but got %v", test.day, test.month, test.year, test.expectedOutcome, outcome)
			}
		}
	}
	```
2024/06/19 10:11:53 $ go mod tidy
2024/06/19 10:11:53 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.245s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:11:54 Executes tests with 7 coverage objects
2024/06/19 10:11:54 Evaluated model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light": encountered 20 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:66:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.147s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:54:29: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:54:29: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.121s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:54:29: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:54:29: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.121s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.136s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.136s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

cascadingIfElse.go exit status 1
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices

DONE 0 tests, 2 errors in 0.186s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:30:29: undefined: light.equilibriumIndices
./equilibriumIndices_test.go:32:12: undefined: light.equilibriumIndices

DONE 0 tests, 2 errors in 0.186s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
# light_test [light.test]
./forLoop_test.go:34:20: undefined: light.ForLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:34:20: undefined: light.ForLoop

DONE 0 tests, 1 error in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./forLoop_test.go:34:20: undefined: light.ForLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:34:20: undefined: light.ForLoop

DONE 0 tests, 1 error in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

=== Errors
jacobiSymbol_test.go:1:1: expected 'package', found 'go'

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
# light_test [light.test]
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:42:20: undefined: light.InitialiseKlarnerRadoSequence

DONE 0 tests, 1 error in 0.173s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.031s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light_test [light.test]
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors

DONE 0 tests, 11 errors in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:13:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:14:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:15:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:16:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:17:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:18:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:19:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:20:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:21:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: unknown field aNumber in struct literal of type struct{input int; expected int}
./largestProperDivisor_test.go:22:4: too many errors

DONE 0 tests, 11 errors in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]

DONE 1 tests, 1 failure in 0.422s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 10.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:23: test failed for odd(3), got [[8 1 6] [3 5 7] [4 9 2]] expected: [[2 9 4] [7 5 3] [6 1 8]]
    magicSquareOdd_test.go:23: test failed for odd(5), got [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]] expected: [[7 12 1 14 2] [23 5 7 8 15] [4 6 13 20 22] [10 16 19 3 17] [25 21 18 24 9]]
    magicSquareOdd_test.go:23: test failed for odd(7), got [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]] expected: [[37 26 2 23 40 7 34] [8 35 42 3 20 31 10] [33 16 5 32 17 28 11] [24 1 44 39 6 21 18] [46 36 13 4 41 22 29] [19 30 9 38 15 25 12] [43 14 27 45 36 20 1]]

DONE 1 tests, 1 failure in 0.422s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:26: For inputs s1 = a and s2 = ab, got result true but expected false

DONE 1 tests, 1 failure in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light [light.test]
./phoneNumber_test.go:4:5: "errors" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:5: "errors" imported and not used

DONE 0 tests, 1 error in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./phoneNumber_test.go:4:5: "errors" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:5: "errors" imported and not used

DONE 0 tests, 1 error in 0.180s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
# light [light.test]
./sort_test.go:58:40: undefined: testData
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:58:40: undefined: testData

DONE 0 tests, 1 error in 0.163s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./sort_test.go:58:40: undefined: testData
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:58:40: undefined: testData

DONE 0 tests, 1 error in 0.163s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.032s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:21: typeArrayMultidimensionalArrayLength([[1 2] [3 4 5]]) = 2, Expected: 1

DONE 1 tests, 1 failure in 0.349s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.245s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.245s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/19 10:14:24 Evaluating model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:14:24 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:14:27 Model "openrouter/google/palm-2-chat-bison" responded (2416 ms) with:
	 ```golang
	package light_test

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name string
			arg  string
			want bool
		}{
			{
				name: "Basic balanced brackets",
				arg:  "[][][][][][]()",
				want: true,
			},
			{
				name: "Non-bracket characters",
				arg:  "abcdefghijklmnop",
				want: false,
			},
			{
				name: "Too many closing brackets",
				arg:  "]]]]()]",
				want: false,
			},
			{
				name: "Matching single pair",
				arg:  "[]",
				want: true,
			},
			{
				name: "Nesting brackets",
				arg:  "()()[][[[][]]]",
				want: true,
			},
			{
				name: "Empty string",
				arg:  "",
				want: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := hasBalancedBrackets(tt.arg); got != tt.want {
					t.Errorf("hasBalancedBrackets() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:14:27 $ go mod tidy
2024/06/19 10:14:27 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.124s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:27 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:14:30 Model "openrouter/google/palm-2-chat-bison" responded (2893 ms) with:
	 ```go
	package light_test

	import (
	    "testing"
	    "light"
	)

	func TestBinarySearch(t *testing.T) {
	    type testCase struct {
	        array       []int
	        key         int
	        expectedOutput int
	    }

	    var testCases = []testCase{
	        {[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, 8, 7},
	        {[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, 5, 4},
	        {[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, 1, 0},
	        {[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, 10, -1},
	        {[]int{1, 2, 3, 4, 5, 6, 7, 8, 9}, -1, -1},
	        {[]int{-5, -1, 0, 2, 5, 9, 12, 17, 21, 43}, 0, 2},
	        {[]int{-5, -1, 0, 2, 5, 9, 12, 17, 21, 43}, 23, -1},
	        {[]int{}, 47, -1},
	    }

	    for _, tc := range testCases {
	        if result := light.BinarySearch(tc.array, tc.key); result != tc.expectedOutput {
	            t.Errorf("Error in Binary Search of package 'light'. Input: (%v, %v); Expect: %v, Get: %v", tc.array, tc.key, tc.expectedOutput, result)
	        }
	    }
	}
	```
2024/06/19 10:14:30 $ go mod tidy
2024/06/19 10:14:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:27:28: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:27:28: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:30 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:14:34 Model "openrouter/google/palm-2-chat-bison" responded (3121 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		type args struct {
			x int
			y int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test Case 1",
				args: args{
					x: 19,
					y: 44,
				},
				want: 9,
			},
			{
				name: "Test Case 2",
				args: args{
					x: 5,
					y: 40,
				},
				want: 5,
			},
			{
				name: "Test Case 3",
				args: args{
					x: 43,
					y: 50,
				},
				want: 21,
			},
			{
				name: "Test Case 4",
				args: args{
					x: 56,
					y: 60,
				},
				want: 28,
			},
			{
				name: "Test Case 5",
				args: args{
					x: 61,
					y: 25,
				},
				want: 61,
			},
		}
		for _, tt := range tests {
			got := light.CallLoopConditionsOftenEnough(tt.args.x, tt.args.y)
			if got != tt.want {
				t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:14:34 $ go mod tidy
2024/06/19 10:14:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:34 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:14:37 Model "openrouter/google/palm-2-chat-bison" responded (2492 ms) with:
	 ```go
	package light

	import (
	  "testing"
	)

	func TestCascadingIfElse(t *testing.T) {
	  testCases := []struct {
	    i       int
	    want    int
	  }{
	    {1, 2},
	    {3, 4},
	    {5, 5},
	  }

	  for _, testCase := range testCases {
	    got := cascadingIfElse(testCase.i)
	    if got != testCase.want {
	      t.Errorf("incorrect result. got %q, want %q", got, testCase.want)
	    }
	  }
	}
	```
2024/06/19 10:14:37 $ go mod tidy
2024/06/19 10:14:37 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestCascadingIfElse
--- PASS: TestCascadingIfElse (0.00s)
PASS
coverage: 2.4% of statements
ok  	light	0.006s	coverage: 2.4% of statements

DONE 1 tests in 0.356s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:14:37 Executes tests with 3 coverage objects
2024/06/19 10:14:37 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:14:40 Model "openrouter/google/palm-2-chat-bison" responded (3316 ms) with:
	 ```go
	package light

	import (
	    "testing"
	    "strconv"
	)

	func TestComputeStepCount(t *testing.T) {
	    var tests = []struct {
	        input             int
	        expectedCount     int
	        expectedError     bool
	    }{
	        {2, 1, false},
	        {3, 7, false},
	        {4, 2, false},
	        {5, 5, false},
	        {7, 16, false},
	        {9, 19, false},
	        {22, 15, false},
	        {100, 25, false},
	        {65535, 304, false},
	        {0, 0, true},
	        {-5, 0, true},
	        {-3790524, 0, true},
	    }

	    for i, testItem := range tests {
	        t.Run(strconv.Itoa(i), func(t *testing.T) {
	            count, err := computeStepCount(testItem.input)
	            if testItem.expectedError {
	                if err == nil {
	                    t.Errorf("computeStepCount(%d) did NOT return an expected error but instead it returned '%d'", testItem.input, count)
	                }
	                return
	            }

	            if err != nil {
	                t.Errorf("computeStepCount(%d) gave an unexpected error which is '%s'", testItem.input, err.Error())
	            }

	            if count != testItem.expectedCount {
	                t.Errorf("computeStepCount(%d) returned %d but expected %d", testItem.input, count, testItem.expectedCount)
	            }
	        })
	    }
	}
	```
2024/06/19 10:14:40 $ go mod tidy
2024/06/19 10:14:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.228s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:41 Executes tests with 6 coverage objects
2024/06/19 10:14:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:14:43 Model "openrouter/google/palm-2-chat-bison" responded (1420 ms) with:
	 ```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		type args struct {
			x rune
			y rune
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			// TODO: Add test cases.
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := conditionsAnd(tt.args.x, tt.args.y); got != tt.want {
					t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:14:43 $ go mod tidy
2024/06/19 10:14:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 0.0% of statements
ok  	light	0.007s	coverage: 0.0% of statements

DONE 1 tests in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:14:43 Executes tests with 0 coverage objects
2024/06/19 10:14:43 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:14:45 Model "openrouter/google/palm-2-chat-bison" responded (2321 ms) with:
	 ```go
	package light

	import (
	    "testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
	    tests := []struct {
	        in   []int
	        want string
	    }{
	        {in: []int{}, want: ""},
	        {in: []int{1}, want: "0"},
	        {in: []int{1, 3, 0}, want: "2"},
	        {in: []int{1, 2, 1}, want: ""},
	        {in: []int{7, -4, 5, 1, 7, -8, 6}, want: "0;4"},
	    }

	    for _, tt := range tests {
	        got := equilibriumIndices(tt.in)
	        if got != tt.want {
	            t.Errorf("equilibriumIndices got = %v, want = %v", got, tt.want)
	        }
	    }
	}
	```
2024/06/19 10:14:45 $ go mod tidy
2024/06/19 10:14:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4

DONE 1 tests, 1 failure in 0.377s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:46 Executes tests with 4 coverage objects
2024/06/19 10:14:46 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:14:48 Model "openrouter/google/palm-2-chat-bison" responded (2240 ms) with:
	 ```Go
	package light

	import "testing"

	func TestForLoop(t *testing.T) {
		type input struct {
			value int
		}
		tests := []struct {
			in   input
			want int
		}{
			{input{0}, 0},
			{input{1}, 1},
			{input{7}, 42},
			{input{-1}, -1},
			{input{-3}, -6},
			{input{20}, 210},
		}
		for _, tt := range tests {
			if got := forLoop(tt.in.value); got != tt.want {
				t.Errorf("forLoop() = %v. Want %v.", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:14:48 $ go mod tidy
2024/06/19 10:14:48 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:49 Executes tests with 3 coverage objects
2024/06/19 10:14:49 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:14:52 Model "openrouter/google/palm-2-chat-bison" responded (3879 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/saman2003/go-playground/chapter-8/jacobi"
	)

	func TestJacobiSymbol(t *testing.T) {
		testCases := []struct {
			name      string
			k, n      uint64
			wantResult int
			wantErr   bool
		}{
			{
				name:      "Valid inputs",
				k:         15,
				n:         21,
				wantResult: -1,
				wantErr:   false,
			},
			{
				name:      "k is less than 0",
				k:         -5,
				n:         21,
				wantResult: 0,
				wantErr:   true,
			},
			{
				name:      "n is even",
				k:         5,
				n:         30,
				wantResult: 0,
				wantErr:   true,
			},
			{
				name:      "n = 1",
				k:         7,
				n:         1,
				wantResult: 1,
				wantErr:   false,
			},
			{
				name:      "Large number as input",
				k:         890786558750293567,
				n:         67875760497073725451,
				wantResult: 1,
				wantErr:   false,
			},
		}

		for _, tc := range testCases {
			t.Run(tc.name, func(t *testing.T) {
				result, err := jacobi.JacobiSymbol(tc.k, tc.n)
				if (err != nil) != tc.wantErr {
					t.Errorf("Test %s: Expected error: %v, got error: %v", tc.name, tc.wantErr, err)
				}
				if result != tc.wantResult {
					t.Errorf("Test %s: Expected result: %d, got result: %d", tc.name, tc.wantResult, result)
				}
			})
		}
	}
	```
2024/06/19 10:14:52 $ go mod tidy
go: finding module for package github.com/saman2003/go-playground/chapter-8/jacobi
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter-8/jacobi: cannot find module providing package github.com/saman2003/go-playground/chapter-8/jacobi: module github.com/saman2003/go-playground/chapter-8/jacobi: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:14:55 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:15:00 Model "openrouter/google/palm-2-chat-bison" responded (5504 ms) with:
	 ```golang
	package light_test

	import (
		"testing"

		"light"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		type args struct {
			limit int
		}
		tests := []struct {
			name string
			args args
			want []int
		}{
			{
				name: "limit_7",
				args: args{
					limit: 7,
				},
				want: []int{1, 3, 2, 6, 4, 12, 8},
			},
			{
				name: "limit_64",
				args: args{
					limit: 64,
				},
				want: []int{1, 3, 2, 6, 4, 12, 8, 24, 16, 48, 144, 96, 288, 192, 576, 384, 1152, 768, 2304, 1536, 4608, 3072, 9216, 6144, 18432, 12288, 36864, 24576, 73728, 49152, 147456, 98304, 294912, 196608, 589824, 393216, 1179648, 786432, 2359296, 1572864, 4718592, 3145728, 9437184, 6291456, 18874368, 12582912, 37748736, 25165824, 75497472, 50331648, 150994944, 100663296, 301989888},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.InitialiseKlarnerRadoSequence(tt.args.limit); !equal(got, tt.want) {
					t.Errorf("initialiseKlarnerRadoSequence() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	// equal performs a deep comparison for slices without order consideration.
	func equal(a, b []int) bool {
		l, r := len(a), len(b)
		if l != r {
			return false
		}
		c, m := make(map[int]int, l), 0
		for _, item := range a {
			if c[item] += 1; c[item] > m {
				m = c[item]
			}
		}
2024/06/19 10:15:00 $ go mod tidy
2024/06/19 10:15:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

=== Errors
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:00 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:15:05 Model "openrouter/google/palm-2-chat-bison" responded (4646 ms) with:
	 ```go
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestMaximumValue(t *testing.T) {
	    tests := []struct {
	        name       string
	        items      []light.Item
	        maxWeight  int
	        want       int
	    }{
	        {
	            name:      "Example Test Case 1",
	            items:     []light.Item{{1, 1}, {3, 4}, {4, 5}, {5, 7}},
	            maxWeight: 7,
	            want:      9,
	        },
	        {
	            name:      "Example Test Case 2",
	            items:     []light.Item{{6, 13}, {4, 8}, {3, 6}, {5, 12}},
	            maxWeight: 5,
	            want:      14,
	        },
	        {
	            name:       "Empty Inputs",
	            items:      []light.Item{},
	            maxWeight:  0,
	            want:       0,
	        },
	        {
	            name:       "Single Light Item",
	            items:      []light.Item{{1, 5}},
	            maxWeight:  2,
	            want:       5,
	        },
	        {
	            name:      "Large Test Scenario",
	            items:     generateItems(100, 1, 100, 1, 100),
	            maxWeight:  1000,
	            want:       4144,
	        },
	    }

	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := light.MaximumValue(tt.maxWeight, tt.items); got != tt.want {
	                t.Errorf("MaximumValue() = %d, want %d", got, tt.want)
	            }
	        })
	    }
	}

	// Utility function to generate randomly initialized items
	func generateItems(amount int, minWeight int, maxWeight int, minValue int, maxValue int) []light.Item {
	    var items []light.Item
	    for i := 0; i < amount; i++ {
	        items = append(items, light.Item{light.randomInt(minWeight, maxWeight), light.randomInt(minValue, maxValue)})
	    }
	    return items
	}

	// Simple utility function to generate random integer between a range [x, y] (inclusive)
	func randomInt(x int, y int) int {
	    if x > y {
	        // Switch min and max
	        x, y = y, x
	    }
	    return x + int(math.Rand()*float64(y-x+1))
	}
	```
2024/06/19 10:15:05 $ go mod tidy
2024/06/19 10:15:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors

DONE 0 tests, 11 errors in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:05 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:15:08 Model "openrouter/google/palm-2-chat-bison" responded (2787 ms) with:
	 ```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
			wantErr  bool
		}{
			{1, 0, false},
			{9, 3, false},
			{10, 5, false},
			{42, 21, false},
			{100, 50, false},
			{991, 660, false},
			{-18, 0, true},
			{0, 0, true},
		}

		for _, tc := range testCases {
			t.Run(fmt.Sprintf("input: %d", tc.input), func(t *testing.T) {
				result, err := light.LargestProperDivisor(tc.input)
				if tc.wantErr && err == nil {
					t.Errorf("Did not return expected error; want %v, got nil", tc.wantErr)
				} else if !tc.wantErr && err != nil {
					t.Errorf("Unexpected error: %v", err)
				} else if result != tc.expected {
					t.Errorf("Wrong divisors calculated. Want %d but got %d", tc.expected, result)
				}
			})
		}
	}
	```
2024/06/19 10:15:08 $ go mod tidy
2024/06/19 10:15:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:09 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:15:13 Model "openrouter/google/palm-2-chat-bison" responded (3950 ms) with:
	 ```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name      string
			givenBase int
			wantGrid  [][]int
			wantErr   error
		}{
			{
				name:      "test odd square: base > 3",
				givenBase: 5,
				wantGrid: [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 12, 19, 2, 9},
					{11, 18, 25, 3, 21},
				},
				wantErr: nil,
			},
			{
				name:      "test base 3",
				givenBase: 3,
				wantGrid: [][]int{
					{2, 7, 6},
					{9, 5, 1},
					{4, 3, 8},
				},
				wantErr: nil,
			},
			{
				name:      "test even base",
				givenBase: 10,
				wantErr:   errors.New("base must be odd and > 2"),
			},
			{
				name:      "test base < 3",
				givenBase: 1,
				wantErr:   errors.New("base must be odd and > 2"),
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				gotGrid, err := magicSquareOdd(tt.givenBase)
				if err != tt.wantErr {
					t.Fatalf("magicSquareOdd() error should be %v, got error %v", tt.wantErr, err)
				}
				if !reflect.DeepEqual(gotGrid, tt.wantGrid) {
					t.Errorf("magicSquareOdd() result did not match expected grid!")
				}
			})
		}
	}
	```
2024/06/19 10:15:13 $ go mod tidy
2024/06/19 10:15:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:13 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:15:17 Model "openrouter/google/palm-2-chat-bison" responded (3731 ms) with:
	 ```go
	package light

	import (
	  "testing"
	  "bytes"
	)

	func TestMatchBytes(t *testing.T) {
	  tests := []struct {
	    name string
	    s1, s2 []byte
	    want bool
	  }{
	    {
	      name: "Example from given function matchBytes()",
	      s1: []byte{104, 101, 108, 108, 111},
	      s2: []byte{72, 101, 108, 108, 111},
	      want: true,
	    },
	    {
	      name: "Empty slices passed - expected fail",
	      s1: []byte{},
	      s2: []byte{},
	      want: false,
	    },
	    {
	      name: "Slice s2 longer than slice s1 - expected fail",
	      s1: []byte{72, 101, 108, 108, 111},
	      s2: []byte{104, 101, 108, 108, 111, 67},
	      want: false,
	    },
	    {
	      name: "Mismatched characters between bytes slices of equal length - expected fail",
	      s1: []byte{72, 101, 108, 108, 111},
	      s2: []byte{65, 101, 108, 108, 111},
	      want: false,
	    },
	  }

	  for _, test := range tests {
	    got := matchBytes(test.s1, test.s2)
	    if got != test.want {
	      t.Errorf("matchBytes(%q, %q) == %v; want %v.", string(test.s1), string(test.s2), got, test.want)
	    }
	  }
	}
	```
2024/06/19 10:15:17 $ go mod tidy
2024/06/19 10:15:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./matchBytes_test.go:5:3: "bytes" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:5:3: "bytes" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:17 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:15:23 Model "openrouter/google/palm-2-chat-bison" responded (6048 ms) with:
	 ```golang
	package light_test

	import (
		"reflect"
		"testing"

		"github.com/golang-light/light/light"
	)

	//TestPascalsTriangle tests function light.pascalsTriangle() on valid and edge-case scenarios
	func TestPascalsTriangle(t *testing.T) {
		type test struct {
			//Inputs
			rownum int
			//Expected Output
			pt   [][]int
			errn error
		}

		testCases := []test{
			//Rows = 0, Expected to have 1-row result: [[1]]
			{0, [][]int{{1}}, nil},
			//Rows = 4
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}, nil},
			//Rows = -4 Expected error, no output triangle
			{-4, nil, errors.New("Rows can't be negative!")},
			//Edge case test: Rows =50000 is also handled gracefully without stackoverflow (max possible rows 80,082 for 32bit systems)
			{50000, nil, errors.New("Rows can't be negative!")},
		}

		for i, c := range testCases {
			t.Run("", func(t *testing.T) {
				//Get triangle
				actualTriangle, err := light.PascalsTriangle(c.rownum)
				//If an error has occured in case where there isn't supposed to be, fail tests; in any case of error just compare the received message
				if (c.errn != nil && err == nil) || (c.errn == nil && err != nil) ||
					(c.errn != nil && err != nil && c.errn.Error() != err.Error()) {
					t.Fatalf("\nTEST %d: Invalid error. expected = %s, \tactual   = %s", i, c.errn, err)
				}
				//If function executed successfully (even in expected error cases above), check triangle returned
				if err == nil {
					//if lengths mismatched fail test instantly
					if !reflect.DeepEqual(len(actualTriangle), len(c.pt)) {
						t.Errorf("\nTEST %d: Rows length is mismatched:\n\texpected = %d,\n\tactual   = %d", i, len(c.pt), len(actualTriangle))
					}
					for pIndex, r1 := range actualTriangle {
						//Check number of elements in every rows, stop on mismatch, report that row only
						if !reflect.DeepEqual(len(r1), len(c.pt[pIndex])) {
							t.Errorf("\nTEST %d:\n Row no%d: Elements length is mismatched.\nActual:   %+v\nExpected: %+v", i, pIndex, r1, c.pt[pIndex])
							break
						}
						//Compare each row element-by-element. Stop at first encountered mismatched pair, report actual row and expected row only to reduce noise in failure output
						for cIndex, val := range c.pt[pIndex] {
							if val != r1[cIndex] {
								t
2024/06/19 10:15:23 $ go mod tidy
2024/06/19 10:15:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:23 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:15:28 Model "openrouter/google/palm-2-chat-bison" responded (4456 ms) with:
	 ```go
	package light_test

	import (
		"errors"
		"light"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name     string
			number   string
			expected string
			err      error
		}{
			{
				name:     "normal case",
				number:   "1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with spaces",
				number:   "123 456 7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with dots",
				number:   "123.456.7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with parentheses",
				number:   "(123) 456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with hyphens",
				number:   "123-456-7890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with pluses",
				number:   "+1234567890",
				expected: "1234567890",
				err:      nil,
			},
			{
				name:     "with letters",
				number:   "123abc456",
				expected: "",
				err:      errors.New("letters not permitted"),
			},
			{
				name:     "with punctuations",
				number:   "123!456",
				expected: "",
				err:      errors.New("punctuations not permitted"),
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				actual, err := light.extractDigits(test.number)
				if err != test.err {
					t.Errorf("unexpected error: %v, expected: %v", err, test.err)
				}
				if actual != test.expected {
					t.Errorf("unexpected extracted digits: %q, expected: %q", actual, test.expected)
				}
			})
		}
	}
	```
2024/06/19 10:15:28 $ go mod tidy
2024/06/19 10:15:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.126s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:28 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:15:30 Model "openrouter/google/palm-2-chat-bison" responded (1903 ms) with:
	 ```go
	package light_test

	import (
		"light"
		"testing"
	)

	func TestSimpleIfElse(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
		}{
			{1, 0},
			{2, 1},
			{-1, 1},
			{0, 1},
		}

		for _, tc := range testCases {
			result := light.SimpleIfElse(tc.input)
			if result != tc.expected {
				t.Errorf("Test failed for input %d. Expected %d, got %d", tc.input, tc.expected, result)
			}
		}
	}
	```
2024/06/19 10:15:30 $ go mod tidy
2024/06/19 10:15:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse

DONE 0 tests, 1 error in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:30 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:15:32 Model "openrouter/google/palm-2-chat-bison" responded (2344 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"case 1", 1, 0},
			{"default case", 2, 1},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	```
2024/06/19 10:15:32 $ go mod tidy
2024/06/19 10:15:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/case_1
=== RUN   TestSimpleSwitchWithReturn/default_case
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/case_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/default_case (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 3 tests in 0.387s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:15:33 Executes tests with 3 coverage objects
2024/06/19 10:15:33 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:15:35 Model "openrouter/google/palm-2-chat-bison" responded (1935 ms) with:
	 ```go
	package light

	import (
		"sort"
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		arr1 := []int{}
		if !isSorted(arr1) {
			t.Errorf("Incorrect result for non-sorted empty array")
		}

		arr2 := []int{1, 1, 1}
		if !isSorted(arr2) {
			t.Errorf("Incorrect result for the first element repeated n times array")
		}

		arr3 := []int{1, 2, 1, 3}
		if isSorted(arr3) {
			t.Errorf("Incorrect result for non-sorted array")
		}

		arr4 := make([]int, 100)
		for i := 0; i < 100; i++ {
			arr4[i] = i
		}
		if !isSorted(arr4) {
			t.Errorf("Incorrect result for sorted increasing numeric array")
		}

		sort.Slice(arr4, func(i, j int) bool {
			return arr4[i] > arr4[j]
		})
		if isSorted(arr4) {
			t.Errorf("Incorrect result for sorted decreasing numeric array")
		}
	}
	```
2024/06/19 10:15:35 $ go mod tidy
2024/06/19 10:15:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestIsSorted
    sort_test.go:11: Incorrect result for non-sorted empty array
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:11: Incorrect result for non-sorted empty array

DONE 1 tests, 1 failure in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:35 Executes tests with 2 coverage objects
2024/06/19 10:15:35 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:15:38 Model "openrouter/google/palm-2-chat-bison" responded (2406 ms) with:
	 ```Go
	import (
	    "testing"
	)

	func TestTypeArrayAccess(t *testing.T) {
	    type testCase struct {
	        Input    []int
	        Expected int
	    }

	    testCases := []testCase{
	        // Success scenario 1
	        {
	            Input:    []int{123, 4, 5},
	            Expected: 123,
	        },
	        // Success scenario 2
	        {
	            Input:    []int{246, 11, 33},
	            Expected: 3,
	        },
	        // Edge scenario: Array is empty
	        {
	            Input:    []int{},
	            Expected: 3,
	        },
	        // Edge scenario: All array elements are equal
	        {
	            Input:    []int{3, 3, 3},
	            Expected: 3,
	        },
	    }

	    for _, tc := range testCases {
	        result := typeArrayAccess(tc.Input)
	        if result != tc.Expected {
	            t.Errorf("Test case failed. Expected: %d, Got: %d", tc.Expected, result)
	        }
	    }
	}
	```
2024/06/19 10:15:38 $ go mod tidy
2024/06/19 10:15:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:38 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:15:40 Model "openrouter/google/palm-2-chat-bison" responded (2506 ms) with:
	 ```go
	package testlight

	import (
		"testing"

		"light"
	)

	var inputA = []int{0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}
	var inputB = []int{5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105}

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		testcases := []struct {
			desc string
			input []int
			expected int
		}{
			{desc: "check for inputA", input:inputA, expected:1},
			{desc: "check for inputB", input: inputB, expected: 0},
			{desc: "check for an empty slice", input: []int{}, expected: 0},
		}

		for _, test := range testcases {
			 actualOutput := light.typeArrayConsecutiveAccess(test.input)
			if actualOutput != test.expected {
				t.Errorf("%s failed : expected %d got %d", test.desc, test.expected, actualOutput)
			}
		}
	}
	```
2024/06/19 10:15:40 $ go mod tidy
2024/06/19 10:15:40 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:40 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:15:43 Model "openrouter/google/palm-2-chat-bison" responded (2369 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "case 1",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "case 2",
				x:    [][]int{{1, 2}},
				want: 1,
			},
			{
				name: "case 3",
				x:    [][]int{{1, 2, 3}, {4, 5, 6}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if typeArrayMultidimensionalArrayLength(tt.x) != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %d, want %d", typeArrayMultidimensionalArrayLength(tt.x), tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:15:43 $ go mod tidy
2024/06/19 10:15:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.292s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:43 Executes tests with 3 coverage objects
2024/06/19 10:15:43 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:15:47 Model "openrouter/google/palm-2-chat-bison" responded (3712 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestValidateDate(t *testing.T) {
		tests := []struct {
			day            int
			month           int
			year            int
			expectedOutcome bool
		}{
			{31, 1, 2022, true},
			{1, 7, 2000, true},
			{29, 2, 2004, true},
			{31, 4, 2003, true},
			{31, 6, 2014, true},
			{30, 9, 2019, true},
			{31, 10, 1993, true},
			{30, 11, 2009, true},
			{31, 12, 2020, true},
			{29, 2, 2001, false},
			{32, 3, 2022, false},
			{13, 2, 2018, false},
			{31, 1, 1582, false},
		}

		for _, test := range tests {
			outcome := validDate(test.day, test.month, test.year)
			if outcome != test.expectedOutcome {
				t.Errorf("For date %d-%d-%d, expected outcome %v, but got %v", test.day, test.month, test.year, test.expectedOutcome, outcome)
			}
		}
	}
	```
2024/06/19 10:15:47 $ go mod tidy
2024/06/19 10:15:47 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.250s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:47 Executes tests with 7 coverage objects
2024/06/19 10:15:47 Evaluated model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light": encountered 20 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.124s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:47:14: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.124s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:27:28: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:27:28: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:27:28: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:27:28: undefined: light.BinarySearch

DONE 0 tests, 1 error in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.169s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.228s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/0
=== RUN   TestComputeStepCount/1
=== RUN   TestComputeStepCount/2
=== RUN   TestComputeStepCount/3
=== RUN   TestComputeStepCount/4
=== RUN   TestComputeStepCount/5
=== RUN   TestComputeStepCount/6
=== RUN   TestComputeStepCount/7
=== RUN   TestComputeStepCount/8
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
=== RUN   TestComputeStepCount/9
=== RUN   TestComputeStepCount/10
=== RUN   TestComputeStepCount/11
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/0 (0.00s)
    --- PASS: TestComputeStepCount/1 (0.00s)
    --- PASS: TestComputeStepCount/2 (0.00s)
    --- PASS: TestComputeStepCount/3 (0.00s)
    --- PASS: TestComputeStepCount/4 (0.00s)
    --- PASS: TestComputeStepCount/5 (0.00s)
    --- PASS: TestComputeStepCount/6 (0.00s)
    --- PASS: TestComputeStepCount/7 (0.00s)
    --- FAIL: TestComputeStepCount/8 (0.00s)
    --- PASS: TestComputeStepCount/9 (0.00s)
    --- PASS: TestComputeStepCount/10 (0.00s)
    --- PASS: TestComputeStepCount/11 (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestComputeStepCount/8 (0.00s)
    collatzCalculator_test.go:43: computeStepCount(65535) returned 130 but expected 304
    --- FAIL: TestComputeStepCount/8 (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 13 tests, 2 failures in 0.228s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4

DONE 1 tests, 1 failure in 0.377s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4
--- FAIL: TestEquilibriumIndices (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestEquilibriumIndices (0.00s)
    equilibriumIndices_test.go:22: equilibriumIndices got = 0;, want = 0
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 2
    equilibriumIndices_test.go:22: equilibriumIndices got = 1;, want = 
    equilibriumIndices_test.go:22: equilibriumIndices got = , want = 0;4

DONE 1 tests, 1 failure in 0.377s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.359s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: finding module for package github.com/saman2003/go-playground/chapter-8/jacobi
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter-8/jacobi: cannot find module providing package github.com/saman2003/go-playground/chapter-8/jacobi: module github.com/saman2003/go-playground/chapter-8/jacobi: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/saman2003/go-playground/chapter-8/jacobi
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter-8/jacobi: cannot find module providing package github.com/saman2003/go-playground/chapter-8/jacobi: module github.com/saman2003/go-playground/chapter-8/jacobi: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

jacobiSymbol.go exit status 1
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

=== Errors
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

=== Errors
klarnerRadoSequence_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
# light_test [light.test]
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors

DONE 0 tests, 11 errors in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:18:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:46: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:49: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:54: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:57: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:62: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:18:65: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:38: implicit assignment to unexported field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: implicit assignment to unexported field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:24:41: too many errors

DONE 0 tests, 11 errors in 0.191s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.131s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
# light [light.test]
./matchBytes_test.go:5:3: "bytes" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:5:3: "bytes" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./matchBytes_test.go:5:3: "bytes" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./matchBytes_test.go:5:3: "bytes" imported and not used

DONE 0 tests, 1 error in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.126s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:68:25: undefined: light.extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:68:25: undefined: light.extractDigits

DONE 0 tests, 1 error in 0.126s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
# light_test [light.test]
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse

DONE 0 tests, 1 error in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleIfElse_test.go:20:19: undefined: light.SimpleIfElse

DONE 0 tests, 1 error in 0.125s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleIfElse.go exit status 1
=== RUN   TestIsSorted
    sort_test.go:11: Incorrect result for non-sorted empty array
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:11: Incorrect result for non-sorted empty array

DONE 1 tests, 1 failure in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
    sort_test.go:11: Incorrect result for non-sorted empty array
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:11: Incorrect result for non-sorted empty array

DONE 1 tests, 1 failure in 0.338s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

=== Errors
typeArrayAccess_test.go:1:1: expected 'package', found 'import'

DONE 0 tests, 1 error in 0.024s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

=== Errors
found packages light (balancedBrackets.go) and testlight (typeArrayConsecutiveAccess_test.go) in /tmp/eval-dev-quality2581368664/light

DONE 0 tests, 1 error in 0.025s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.292s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.292s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.250s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidateDate
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: For date 31-4-2003, expected outcome true, but got false
    validateDate_test.go:32: For date 31-6-2014, expected outcome true, but got false
    validateDate_test.go:32: For date 13-2-2018, expected outcome false, but got true

DONE 1 tests, 1 failure in 0.250s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/19 10:18:05 Evaluating model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:18:05 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:18:09 Model "openrouter/google/palm-2-chat-bison" responded (4497 ms) with:
	 ```golang
	package light_test

	import (
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		tests := []struct {
			name string
			s    string
			want bool
		}{
			// Balanced braces
			{"Balanced", "()[]{}", true},
			{"Balanced II", "[][][][]", true},
			{"Empty Input", "", true},

			// Unbalanced braces
			{"Unbalanced", "()[", false},
			{"Unbalanced II", "}[][}", false},
			{"Mixed symbols", ")}{][(}{][}{][(", false},
		}
		for _, tt := range tests {
			if got := hasBalancedBrackets(tt.s); got != tt.want {
				t.Errorf("%s failed. Expecting: %v. Got: %v", tt.name, tt.want, got)
			}
		}
	}
	```
2024/06/19 10:18:09 $ go mod tidy
2024/06/19 10:18:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:10 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:18:14 Model "openrouter/google/palm-2-chat-bison" responded (3750 ms) with:
	 ```go
	package light_test

	import (
	    "testing"

	    "light"
	)

	func TestBinarySearch(t *testing.T) {
	    a := []int{1, 3, 5, 7, 9, 11, 13, 15, 17, 19}

	    if index := light.BinarySearch(a, 7); index != 3 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 3)
	    }

	    if index := light.BinarySearch(a, 19); index != 9 {
	        t.Errorf("BinarySearch found index %d; want %d", index, 9)
	    }

	    if index := light.BinarySearch(a, 23); index != -1 {
	        t.Errorf("BinarySearch found index %d; want %d", index, -1)
	    }
	}
	```
2024/06/19 10:18:14 $ go mod tidy
2024/06/19 10:18:14 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:14 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:18:18 Model "openrouter/google/palm-2-chat-bison" responded (3621 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		type args struct {
			x int
			y int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Test Case 1",
				args: args{
					x: 19,
					y: 44,
				},
				want: 9,
			},
			{
				name: "Test Case 2",
				args: args{
					x: 5,
					y: 40,
				},
				want: 5,
			},
			{
				name: "Test Case 3",
				args: args{
					x: 43,
					y: 50,
				},
				want: 21,
			},
			{
				name: "Test Case 4",
				args: args{
					x: 56,
					y: 60,
				},
				want: 28,
			},
			{
				name: "Test Case 5",
				args: args{
					x: 61,
					y: 25,
				},
				want: 61,
			},
		}
		for _, tt := range tests {
			got := light.CallLoopConditionsOftenEnough(tt.args.x, tt.args.y)
			if got != tt.want {
				t.Errorf("callLoopConditionsOftenEnough() = %v, want %v", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:18:18 $ go mod tidy
2024/06/19 10:18:18 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.159s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:18 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:18:20 Model "openrouter/google/palm-2-chat-bison" responded (2280 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/user/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		var tests = []struct {
			input    int
			expected int
		}{
			{1, 2},
			{3, 4},
			{0, 5},
		}

		for _, test := range tests {
			result := light.CascadingIfElse(test.input)
			if result != test.expected {
				t.Errorf("cascadingIfElse(%d) = %d, expected %d", test.input, result, test.expected)
			}
		}
	}
	```
2024/06/19 10:18:20 $ go mod tidy
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:18:21 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:18:24 Model "openrouter/google/palm-2-chat-bison" responded (2926 ms) with:
	 ```go
	package light

	import (
	    "testing"
	    "strconv"
	)

	func TestComputeStepCount(t *testing.T) {
	    var tests = []struct {
	        input             int
	        expectedCount     int
	        shouldHaveError   bool
	    }{
	        {1, 0, false},
	        {5, 5, false},
	        {10, 6, false},
	        {0, 0, true},
	        {-1, 0, true},
	        {50, 11, false},
	    }

	    for _, test := range tests {
	        count, err := computeStepCount(test.input)
	        if !test.shouldHaveError && err != nil {
	            t.Errorf("Error for input %d: %v", test.input, err)
	        } else if test.shouldHaveError && err == nil {
	            t.Errorf("Expected error for input %d, but got none", test.input)
	        } else {
	            if count != test.expectedCount {
	                t.Errorf("Got %d for input %d, expected %d", count, test.input, test.expectedCount)
	            }
	        }
	    }
	}

	func init() {
	    for i := 1; i <= 100000; i++ {
	        computeStepCount(i)
	    }
	}

	```
2024/06/19 10:18:24 $ go mod tidy
2024/06/19 10:18:24 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./collatzCalculator_test.go:5:5: "strconv" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:5:5: "strconv" imported and not used

DONE 0 tests, 1 error in 0.187s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:24 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:18:26 Model "openrouter/google/palm-2-chat-bison" responded (2094 ms) with:
	 ```go
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
		type test struct {
			x      rune
			y      rune
			output bool
		}

		var tests = []test{
			{'A', 'B', true},
			{'Z', 'F', false},
			{'z', 'a', false},
			{'0', 'A', false},
			{'6', '5', false},
		}

		for _, test := range tests {
			output := conditionsAnd(test.x, test.y)

			if output != test.output {
				t.Errorf("For values of (%v, %v), expected a return value of %v but received %v instead.", test.x, test.y, test.output, output)
			}
		}
	}
	```
2024/06/19 10:18:26 $ go mod tidy
2024/06/19 10:18:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestConditionsAnd
--- PASS: TestConditionsAnd (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 1 tests in 0.378s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:18:27 Executes tests with 2 coverage objects
2024/06/19 10:18:27 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:18:32 Model "openrouter/google/palm-2-chat-bison" responded (5103 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "Simple testcase: sequence with three equilibrium indices",
				sequence: []int{2, 3, -4, 7, -6, 2},
				want:     "2;3;4",
			},
			{
				name:     "Empty sequence",
				sequence: []int{},
				want:     "",
			},
			{
				name:     "All positive integers",
				sequence: []int{1, 2, 3, 4, 5},
				want:     "",
			},
			{
				name:     "Only one equilibrium index present",
				sequence: []int{4, 8, 4, 7, 6, 6},
				want:     "3",
			},
			{
				name:     "Duplicate values within the sequence",
				sequence: []int{6, -3, 10, 2, 8, 2, 11, 7, 9, 7},
				want:     "5;9",
			},
			{
				name:     "Large range of values within the sequence",
				sequence: []int{100, -373, 52, 66, -694, 691, 340},
				want:     "3;6",
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := equilibriumIndices(tt.sequence)
				if got != tt.want {
					t.Errorf("equilibriumIndices(%v) = %v, want %v", tt.sequence, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:18:32 $ go mod tidy
2024/06/19 10:18:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:32 Executes tests with 4 coverage objects
2024/06/19 10:18:32 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:18:35 Model "openrouter/google/palm-2-chat-bison" responded (2237 ms) with:
	 ```Go
	package light

	import "testing"

	func TestForLoop(t *testing.T) {
		type input struct {
			value int
		}
		tests := []struct {
			in   input
			want int
		}{
			{input{0}, 0},
			{input{1}, 1},
			{input{7}, 42},
			{input{-1}, -1},
			{input{-3}, -6},
			{input{20}, 210},
		}
		for _, tt := range tests {
			if got := forLoop(tt.in.value); got != tt.want {
				t.Errorf("forLoop() = %v. Want %v.", got, tt.want)
			}
		}
	}
	```
2024/06/19 10:18:35 $ go mod tidy
2024/06/19 10:18:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:35 Executes tests with 3 coverage objects
2024/06/19 10:18:35 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:18:39 Model "openrouter/google/palm-2-chat-bison" responded (3851 ms) with:
	 ```go
	package light_test

	import (
		"testing"

		"github.com/saman2003/go-playground/chapter3/jacobiSymbol"
	)

	var kValTest uint64 = 49

	func genRandomK(val uint64) uint64 {
		if val%2 == 0 {
			val + 1
		}
		if val < 65535 {
			val -= 2
		}
		if val < 90000 {
			val -= 99997
		}
		return val
	}

	func Test100Percentage(t *testing.T) {
		// Normal Cases
		nTests := 10000
		kTests := genRandomK(kValTest)
		k1Tests := genRandomK(nTests + kTests)
		for i := 0; i <= 100000; i++ {
			if i%400 == 151 {
				jacobiSymbol.JacobiSymbol(k1Tests, uint64(i))
			} else if i%500 == 319 {
				jacobiSymbol.JacobiSymbol(uint64(i), kTests)
			} else {
				jacobiSymbol.JacobiSymbol(kTests, uint64(i))
			}
		}
		// Failure Test Case
		failureVal := int32(4 / 0)
		for i := 1; i <= 1000; i++ {
			_, _ = jacobiSymbol.JacobiSymbol(0, uint64(i)+9101*uint64(failureVal))
			_, _ = jacobiSymbol.JacobiSymbol(92+uint64(failureVal), 2)
		}
	}
	```
2024/06/19 10:18:39 $ go mod tidy
go: finding module for package github.com/saman2003/go-playground/chapter3/jacobiSymbol
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter3/jacobiSymbol: cannot find module providing package github.com/saman2003/go-playground/chapter3/jacobiSymbol: module github.com/saman2003/go-playground/chapter3/jacobiSymbol: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:18:41 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:18:45 Model "openrouter/google/palm-2-chat-bison" responded (4557 ms) with:
	 ```go
	package light_test

	import (
		"math"
		"reflect"
		"testing"

		light "klarnrerRadoSequence.go"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		testCases := []struct {
			limit, expected []int
		}{
			{1, []int{1}},
			{3, []int{1, 2, 3}},
			{7, []int{1, 2, 3, 6, 3, 9, 3}},
			{12, []int{1, 2, 3, 6, 3, 9, 3, 18, 6, 3, 27, 9}},
			{23, []int{1, 2, 3, 6, 3, 9, 3, 18, 6, 3, 27, 9, 3, 54, 18, 6, 3, 81, 27, 9, 3, 162, 54}},
		}

		for _, tc := range testCases {
			result := light.InitialiseKlarnerRadoSequence(tc.limit)
			// check if returned slice equals the exepected
			if !reflect.DeepEqual(result, tc.expected) {
				t.Errorf("Expected %v for limit %d, Actual: %v.", tc.expected, tc.limit, result)
			}
		}

		// Testing Edge cases and boundary tests
		var upperLimitTestsArray = []int{0, 1, 3, 8, 71, 139, 946, 3700, 3701, 7954, 994832}
		// check whether 0 returns an empty slice while all other values return some result within slice bound 0 to
		// input number "limit" (inclusive of)
		for _, num := range upperLimitTestsArray {
			results := light.InitialiseKlarnerRadoSequence(num)
			resultsSize := len(results)
			if num == 0 && resultsSize != 0 {
				t.Errorf("Error in Test cases with limit values. The result shouldn't be: %v for limit: %d.", results, num)
			}

			if num != 0 && resultsSize != max(math.Abs(float64(num + 1)),  4+int(math.Pow(float64(num), 0.45))) {
				t.Errorf("Error in Test cases with limit values. The result slice len for num %d doesn't match expected results", num)
			}
		}
	}

	func max(num1, num2 int) int {
	    if num1 >= num2 {
	        return num1
	    }

	    return num2
	}
	```
2024/06/19 10:18:45 $ go mod tidy
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element
2024/06/19 10:18:45 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:18:51 Model "openrouter/google/palm-2-chat-bison" responded (5159 ms) with:
	 ```golang
	package light_test

	import (
		"math"
		"testing"

		light "github.com/user/knapsack" // Change to use real import path as expected during production/usage
	)

	func TestMaximumValue(t *testing.T) {
		t.Run("test basic scenario1", func(t *testing.T) {
			items := []light.Item{
				{weight: 2, value: 6},
				{weight: 2, value: 10},
				{weight: 3, value: 12},
			}
			expected := 22
			if result := light.MaximumValue(5, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test basic scenario2", func(t *testing.T) {
			items := []light.Item{
				{weight: 1, value: 2},
				{weight: 4, value: 6},
				{weight: 7, value: 3},
			}
			expected := 8
			if result := light.MaximumValue(6, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test with only value and no weight restriction", func(t *testing.T) {
			items := []light.Item{
				{weight: 6, value: 6},
			}
			expected := 6
			if result := light.MaximumValue(math.MaxInt, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test with items that exactly equal the capacity", func(t *testing.T) {
			items := []light.Item{
				{weight: 5, value: 6},
			}
			expected := 6
			if result := light.MaximumValue(5, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test empty items slice", func(t *testing.T) {
			items := []light.Item{}
			expected := 0
			if result := light.MaximumValue(5, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test with empty or nil item", func(t *testing.T) {
			items := []light.Item{
				{},
			}
			expected := 0
			if result := light.MaximumValue(5, items); result != expected {
				t.Errorf("unexpected maxValue, expected %d got %d", expected, result)
			}
		})

		t.Run("test with heavy-weight and large-value items", func(t *testing.T) {
			items := []light.Item{
				{weight: 23, value: 92},
				{weight: 31, value: 57},
				{weight: 24, value: 
2024/06/19 10:18:51 $ go mod tidy
2024/06/19 10:18:51 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:51 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:18:55 Model "openrouter/google/palm-2-chat-bison" responded (3904 ms) with:
	 ```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestLargestProperDivisor(t *testing.T) {
		testCases := []struct {
			input    int
			expected int
			wantErr  bool
		}{
			{1, 0, false},
			{9, 3, false},
			{10, 5, false},
			{42, 21, false},
			{100, 50, false},
			{991, 660, false},
			{-18, 0, true},
			{0, 0, true},
		}

		for _, tc := range testCases {
			t.Run(fmt.Sprintf("input: %d", tc.input), func(t *testing.T) {
				result, err := light.LargestProperDivisor(tc.input)
				if tc.wantErr && err == nil {
					t.Errorf("Did not return expected error; want %v, got nil", tc.wantErr)
				} else if !tc.wantErr && err != nil {
					t.Errorf("Unexpected error: %v", err)
				} else if result != tc.expected {
					t.Errorf("Wrong divisors calculated. Want %d but got %d", tc.expected, result)
				}
			})
		}
	}
	```
2024/06/19 10:18:55 $ go mod tidy
2024/06/19 10:18:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.113s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:55 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:19:00 Model "openrouter/google/palm-2-chat-bison" responded (4633 ms) with:
	 ```go
	package light

	import (
		"reflect"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name      string
			givenBase int
			wantGrid  [][]int
			wantErr   error
		}{
			{
				name:      "test odd square: base > 3",
				givenBase: 5,
				wantGrid: [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 12, 19, 2, 9},
					{11, 18, 25, 3, 21},
				},
				wantErr: nil,
			},
			{
				name:      "test base 3",
				givenBase: 3,
				wantGrid: [][]int{
					{2, 7, 6},
					{9, 5, 1},
					{4, 3, 8},
				},
				wantErr: nil,
			},
			{
				name:      "test even base",
				givenBase: 10,
				wantErr:   errors.New("base must be odd and > 2"),
			},
			{
				name:      "test base < 3",
				givenBase: 1,
				wantErr:   errors.New("base must be odd and > 2"),
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				gotGrid, err := magicSquareOdd(tt.givenBase)
				if err != tt.wantErr {
					t.Fatalf("magicSquareOdd() error should be %v, got error %v", tt.wantErr, err)
				}
				if !reflect.DeepEqual(gotGrid, tt.wantGrid) {
					t.Errorf("magicSquareOdd() result did not match expected grid!")
				}
			})
		}
	}
	```
2024/06/19 10:19:00 $ go mod tidy
2024/06/19 10:19:00 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:00 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:19:02 Model "openrouter/google/palm-2-chat-bison" responded (2028 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestMatchBytes(t *testing.T) {
		testCases := []struct {
			s1       []byte
			s2       []byte
			expected bool
		}{
			{ // Exact match
				s1:       []byte("ABC"),
				s2:       []byte("ABC"),
				expected: true,
			},
			{ // Case-insensitive match
				s1:       []byte("Abc"),
				s2:       []byte("abc"),
				expected: true,
			},
			{ // Different lengths
				s1:       []byte("ABCD"),
				s2:       []byte("ABCDE"),
				expected: false,
			},
			{ // Different characters
				s1:       []byte("Hello"),
				s2:       []byte("World"),
				expected: false,
			},
		}

		for _, tc := range testCases {
			actual := matchBytes(tc.s1, tc.s2)
			if actual != tc.expected {
				t.Errorf("For s1='%s' and s2='%s', expected %t but got %t", tc.s1, tc.s2, tc.expected, actual)
			}
		}
	}
	```
2024/06/19 10:19:02 $ go mod tidy
2024/06/19 10:19:02 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true

DONE 1 tests, 1 failure in 0.357s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:02 Executes tests with 2 coverage objects
2024/06/19 10:19:02 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:19:08 Model "openrouter/google/palm-2-chat-bison" responded (6043 ms) with:
	 ```golang
	package light_test

	import (
		"reflect"
		"testing"

		"github.com/golang-light/light/light"
	)

	//TestPascalsTriangle tests function light.pascalsTriangle() on valid and edge-case scenarios
	func TestPascalsTriangle(t *testing.T) {
		type test struct {
			//Inputs
			rownum int
			//Expected Output
			pt   [][]int
			errn error
		}

		testCases := []test{
			//Rows = 0, Expected to have 1-row result: [[1]]
			{0, [][]int{{1}}, nil},
			//Rows = 4
			{4, [][]int{{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}}, nil},
			//Rows = -4 Expected error, no output triangle
			{-4, nil, errors.New("Rows can't be negative!")},
			//Edge case test: Rows =50000 is also handled gracefully without stackoverflow (max possible rows 80,082 for 32bit systems)
			{50000, nil, errors.New("Rows can't be negative!")},
		}

		for i, c := range testCases {
			t.Run("", func(t *testing.T) {
				//Get triangle
				actualTriangle, err := light.PascalsTriangle(c.rownum)
				//If an error has occured in case where there isn't supposed to be, fail tests; in any case of error just compare the received message
				if (c.errn != nil && err == nil) || (c.errn == nil && err != nil) ||
					(c.errn != nil && err != nil && c.errn.Error() != err.Error()) {
					t.Fatalf("\nTEST %d: Invalid error. expected = %s, \tactual   = %s", i, c.errn, err)
				}
				//If function executed successfully (even in expected error cases above), check triangle returned
				if err == nil {
					//if lengths mismatched fail test instantly
					if !reflect.DeepEqual(len(actualTriangle), len(c.pt)) {
						t.Errorf("\nTEST %d: Rows length is mismatched:\n\texpected = %d,\n\tactual   = %d", i, len(c.pt), len(actualTriangle))
					}
					for pIndex, r1 := range actualTriangle {
						//Check number of elements in every rows, stop on mismatch, report that row only
						if !reflect.DeepEqual(len(r1), len(c.pt[pIndex])) {
							t.Errorf("\nTEST %d:\n Row no%d: Elements length is mismatched.\nActual:   %+v\nExpected: %+v", i, pIndex, r1, c.pt[pIndex])
							break
						}
						//Compare each row element-by-element. Stop at first encountered mismatched pair, report actual row and expected row only to reduce noise in failure output
						for cIndex, val := range c.pt[pIndex] {
							if val != r1[cIndex] {
								t
2024/06/19 10:19:08 $ go mod tidy
2024/06/19 10:19:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:08 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:19:12 Model "openrouter/google/palm-2-chat-bison" responded (3530 ms) with:
	 ```go
	package light_test

	import (
		"errors"
		"light"
		"testing"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name    string
			number  string
			want    string
			wantErr bool
		}{
			// Test case 1: Valid phone number with spaces and dashes.
			{
				name:    "Valid phoneNumber with spaces and dashes",
				number:  "+12 (345) 678-9012",
				want:    "123456789012",
				wantErr: false,
			},
			// Test case 2: Empty phone number.
			{
				name:    "Empty phoneNumber",
				number:  "",
				want:    "",
				wantErr: false,
			},
			// Test case 3: Numbers with punctuation marks.
			{
				name:    "Punctuations in phoneNumber",
				number:  "8.2333447!6@",
				want:    "",
				wantErr: true,
			},
			// Test case 4: Letters in phone number.
			{
				name:    "Letters in phoneNumber",
				number:  "38abc3484hjdhj",
				want:    "",
				wantErr: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ExtractDigits(tt.number)
				if (err != nil) != tt.wantErr {
					t.Errorf("ExtractDigits() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ExtractDigits() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:19:12 $ go mod tidy
2024/06/19 10:19:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits

DONE 0 tests, 2 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:12 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:19:13 Model "openrouter/google/palm-2-chat-bison" responded (1188 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		type test struct {
			Input    int
			Expected int
		}

		var testCases = []test{
			{1, 0},
			{2, 1},
		}

		for _, tc := range testCases {
			r := simpleIfElse(tc.Input)
			if r != tc.Expected {
				t.Errorf("simpleIfElse(%d) returned %d; expected %d.", tc.Input, r, tc.Expected)
			}
		}
	}
	```
2024/06/19 10:19:13 $ go mod tidy
2024/06/19 10:19:13 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 1 tests in 0.274s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:19:14 Executes tests with 2 coverage objects
2024/06/19 10:19:14 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:19:17 Model "openrouter/google/palm-2-chat-bison" responded (3260 ms) with:
	 ```go
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		type TestCase struct {
			// First member, which contains the i values to be tested in the test cases of the table driven test (here a slice because multiple values).
			Input []int
			// Second member.
			Output []int
		}

		testCases := []TestCase{
			TestCase{
				// The i values from one test case (here a slice which contains some values to be passed with function light.simpleSwitchWithReturn.
				Input: []int{1, 2},
				// The return values corresponding to the passed arguments for light.simpleSwitchWithReturn for the specified test cases, in the same order (here a slice with two values).
				Output: []int{0, 1},
			},
		}

		for _, tc := range testCases {
			for i, iVal := range tc.Input {
				out := simpleSwitchWithReturn(iVal)
				expected := tc.Output[i]
				if out != expected {
					t.Errorf("Test failed. Expected %d but got %d for simpleSwitchWithReturn(%d), test case %d, test case description: [Input=[%v], Output=[%v]]", expected, out, iVal, i, tc.Input, tc.Output)
				}
			}
		}
	}
	```
2024/06/19 10:19:17 $ go mod tidy
2024/06/19 10:19:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
--- PASS: TestSimpleSwitchWithReturn (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:19:18 Executes tests with 3 coverage objects
2024/06/19 10:19:18 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:19:20 Model "openrouter/google/palm-2-chat-bison" responded (1869 ms) with:
	 ```golang
	package light

	import (
	  "testing"
	)

	func TestIsSorted(t *testing.T) {
	  type test struct {
	    arr        []int
	    result bool
	  }

	  data := []test{
	    // Normal inputs to verify sorting result.
	    {[]int{1, 2, 3, 4, 5}, true},
	    {[]int{5, 4, 3, 2, 1}, false},
	    {[]int{-1, -3, -3, -4, -5}, true},
	    {[]int{}, true},

	    // Edge cases.
	    {nil, true},

	    // Negative inputs for boundary scenario coverage.
	    {[]int{5, 2, -1, -3, -1}, false},
	  }

	  for _, d := range data {
	    result := isSorted(d.arr)
	    if result != d.result {
	      t.Errorf("Test failed for input %v. Expected %v but got %v.", d.arr, d.result, result)
	    }
	  }
	}

	```
2024/06/19 10:19:20 $ go mod tidy
2024/06/19 10:19:20 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestIsSorted
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:21 Executes tests with 2 coverage objects
2024/06/19 10:19:21 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:19:23 Model "openrouter/google/palm-2-chat-bison" responded (2103 ms) with:
	 ```golang
	package light_test

	import (
		"testing"

		"light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name string
			args []int
			want int
		}{
			{name: "Test Case 1", args: []int{123}, want: 123},
			{name: "Test Case 2", args: []int{456}, want: 3},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				if got := light.TypeArrayAccess(test.args); got != test.want {
					t.Errorf("TypeArrayAccess() = %v, want %v", got, test.want)
				}
			})
		}
	}
	```
2024/06/19 10:19:23 $ go mod tidy
2024/06/19 10:19:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.164s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:23 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:19:26 Model "openrouter/google/palm-2-chat-bison" responded (2952 ms) with:
	 ```go
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		testCases := []struct {
			input    []int
			expected int
		}{
			{[]int{0, 8}, 2},
			{[]int{1, 8}, 1},
			{[]int{0, 1}, 1},
			{[]int{1, 2}, 0},
			{[]int{}, 0},
			{[]int{8, 0}, 2},
			{[]int{8, 1}, 1},
			{[]int{8, 1}, 1},
			{[]int{7, 8, 5, 7}, 1},
			{[]int{9, 9, 20}, 0},
		}

		for _, tc := range testCases {
			result := typeArrayConsecutiveAccess(tc.input)
			if result != tc.expected {
				t.Errorf("Test failed for input %v. Expected %d, got %d", tc.input, tc.expected, result)
			}
		}
	}
	```
2024/06/19 10:19:26 $ go mod tidy
2024/06/19 10:19:26 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.382s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:27 Executes tests with 0 coverage objects
2024/06/19 10:19:27 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:19:29 Model "openrouter/google/palm-2-chat-bison" responded (2422 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "case 1",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "case 2",
				x:    [][]int{{1, 2}},
				want: 1,
			},
			{
				name: "case 3",
				x:    [][]int{{1, 2, 3}, {4, 5, 6}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if typeArrayMultidimensionalArrayLength(tt.x) != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %d, want %d", typeArrayMultidimensionalArrayLength(tt.x), tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:19:29 $ go mod tidy
2024/06/19 10:19:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.254s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:30 Executes tests with 3 coverage objects
2024/06/19 10:19:30 Querying model "openrouter/google/palm-2-chat-bison" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:19:34 Model "openrouter/google/palm-2-chat-bison" responded (3927 ms) with:
	 ```go
	package light

	import (
		"testing"
	)

	func TestValidateDate(t *testing.T) {
		tests := []struct {
			day            int
			month           int
			year            int
			expectedOutcome bool
		}{
			{31, 1, 2022, true},
			{1, 7, 2000, true},
			{29, 2, 2004, true},
			{31, 4, 2003, true},
			{31, 6, 2014, true},
			{30, 9, 2019, true},
			{31, 10, 1993, true},
			{30, 11, 2009, true},
			{31, 12, 2020, true},
			{29, 2, 2001, false},
			{32, 3, 2022, false},
			{13, 2, 2018, false},
			{31, 1, 1582, false},
		}

		for _, test := range tests {
			outcome := validDate(test.day, test.month, test.year)
			if outcome != test.expectedOutcome {
				t.Errorf("unexpected outcome for the given dates\n" +
					"given_day: %d, given_month: %d, given_year: %d\n" +
					"expected: %v, observed: %v", test.day, test.month, test.year, test.expectedOutcome, outcome)
			}
		}
	}
	```
2024/06/19 10:19:34 $ go mod tidy
2024/06/19 10:19:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality2581368664/light --coverage-file /tmp/eval-dev-quality2581368664/light/coverage.json
=== RUN   TestValidateDate
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:19:34 Executes tests with 7 coverage objects
2024/06/19 10:19:34 Evaluated model "openrouter/google/palm-2-chat-bison" on task "write-tests" using language "golang" and repository "golang/light": encountered 20 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:24:13: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.129s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:12:23: undefined: light.BinarySearch
./binarySearch_test.go:16:23: undefined: light.BinarySearch
./binarySearch_test.go:20:23: undefined: light.BinarySearch

DONE 0 tests, 3 errors in 0.119s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.159s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:61:16: undefined: light.CallLoopConditionsOftenEnough

DONE 0 tests, 1 error in 0.159s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/user/light
go: light tested by
	light.test imports
	github.com/user/light: cannot find module providing package github.com/user/light: module github.com/user/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/92f3881c8d3a50acb750d61b759cb3b054a017531f9cf3ea20764fff9b6d8b95: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

cascadingIfElse.go exit status 1
# light [light.test]
./collatzCalculator_test.go:5:5: "strconv" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:5:5: "strconv" imported and not used

DONE 0 tests, 1 error in 0.187s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./collatzCalculator_test.go:5:5: "strconv" imported and not used
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./collatzCalculator_test.go:5:5: "strconv" imported and not used

DONE 0 tests, 1 error in 0.187s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

collatzCalculator.go exit status 1
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestEquilibriumIndices
=== RUN   TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
=== RUN   TestEquilibriumIndices/Empty_sequence
=== RUN   TestEquilibriumIndices/All_positive_integers
=== RUN   TestEquilibriumIndices/Only_one_equilibrium_index_present
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
=== RUN   TestEquilibriumIndices/Duplicate_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
=== RUN   TestEquilibriumIndices/Large_range_of_values_within_the_sequence
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
--- FAIL: TestEquilibriumIndices (0.00s)
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    --- PASS: TestEquilibriumIndices/Empty_sequence (0.00s)
    --- PASS: TestEquilibriumIndices/All_positive_integers (0.00s)
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
FAIL
coverage: 3.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([2 3 -4 7 -6 2]) = , want 2;3;4
    --- FAIL: TestEquilibriumIndices/Simple_testcase:_sequence_with_three_equilibrium_indices (0.00s)

=== FAIL: . TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([4 8 4 7 6 6]) = , want 3
    --- FAIL: TestEquilibriumIndices/Only_one_equilibrium_index_present (0.00s)

=== FAIL: . TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([6 -3 10 2 8 2 11 7 9 7]) = , want 5;9
    --- FAIL: TestEquilibriumIndices/Duplicate_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)
    equilibriumIndices_test.go:48: equilibriumIndices([100 -373 52 66 -694 691 340]) = , want 3;6
    --- FAIL: TestEquilibriumIndices/Large_range_of_values_within_the_sequence (0.00s)

=== FAIL: . TestEquilibriumIndices (0.00s)

DONE 7 tests, 5 failures in 0.360s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestForLoop
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.
--- FAIL: TestForLoop (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestForLoop (0.00s)
    forLoop_test.go:22: forLoop() = 0. Want 1.
    forLoop_test.go:22: forLoop() = 0. Want -1.
    forLoop_test.go:22: forLoop() = 0. Want -6.
    forLoop_test.go:22: forLoop() = 380. Want 210.

DONE 1 tests, 1 failure in 0.262s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: finding module for package github.com/saman2003/go-playground/chapter3/jacobiSymbol
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter3/jacobiSymbol: cannot find module providing package github.com/saman2003/go-playground/chapter3/jacobiSymbol: module github.com/saman2003/go-playground/chapter3/jacobiSymbol: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/saman2003/go-playground/chapter3/jacobiSymbol
go: light tested by
	light.test imports
	github.com/saman2003/go-playground/chapter3/jacobiSymbol: cannot find module providing package github.com/saman2003/go-playground/chapter3/jacobiSymbol: module github.com/saman2003/go-playground/chapter3/jacobiSymbol: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/28ed9f25d14fb2de713b791d05740462a44a5eb3b7424a6c74797785f2597927: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

jacobiSymbol.go exit status 1
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package klarnrerRadoSequence.go
go: light tested by
	light.test imports
	klarnrerRadoSequence.go: malformed module path "klarnrerRadoSequence.go": invalid char 'R' in first path element

klarnerRadoSequence.go exit status 1
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
knapsack_test.go:1:1: expected 'package', found golang

=== Errors
knapsack_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.029s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.113s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./largestProperDivisor_test.go:25:9: undefined: fmt
./largestProperDivisor_test.go:26:25: undefined: light.LargestProperDivisor

DONE 0 tests, 2 errors in 0.113s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

largestProperDivisor.go exit status 1
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:40:15: undefined: errors
./magicSquareOdd_test.go:45:15: undefined: errors

DONE 0 tests, 2 errors in 0.150s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true

DONE 1 tests, 1 failure in 0.357s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true
--- FAIL: TestMatchBytes (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:38: For s1='ABCD' and s2='ABCDE', expected false but got true

DONE 1 tests, 1 failure in 0.357s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
pascalsTriangle_test.go:1:1: expected 'package', found golang

=== Errors
pascalsTriangle_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.028s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits

DONE 0 tests, 2 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:4:2: "errors" imported and not used
./phoneNumber_test.go:48:22: undefined: light.ExtractDigits

DONE 0 tests, 2 errors in 0.184s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
=== RUN   TestIsSorted
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestIsSorted
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
--- FAIL: TestIsSorted (0.00s)
FAIL
coverage: 1.9% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestIsSorted (0.00s)
    sort_test.go:30: Test failed for input [-1 -3 -3 -4 -5]. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.
    sort_test.go:30: Test failed for input []. Expected true but got false.

DONE 1 tests, 1 failure in 0.339s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.164s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayAccess_test.go:21:20: undefined: light.TypeArrayAccess

DONE 0 tests, 1 error in 0.164s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayAccess.go exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.382s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad
FAIL	light	0.004s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)
panic: runtime error: index out of range [0] with length 0 [recovered]
	panic: runtime error: index out of range [0] with length 0

goroutine 6 [running]:
testing.tRunner.func1.2({0x56c2a0, 0xc000018060})
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1545 +0x238
testing.tRunner.func1()
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1548 +0x397
panic({0x56c2a0?, 0xc000018060?})
	/home/ubuntu/.eval-dev-quality/go/src/runtime/panic.go:914 +0x21f
light.typeArrayConsecutiveAccess(...)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess.go:5
light.TestTypeArrayConsecutiveAccess(0xc000007860)
	/tmp/eval-dev-quality2581368664/light/typeArrayConsecutiveAccess_test.go:23 +0x425
testing.tRunner(0xc000007860, 0x588120)
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1595 +0xff
created by testing.(*T).Run in goroutine 1
	/home/ubuntu/.eval-dev-quality/go/src/testing/testing.go:1648 +0x3ad

DONE 1 tests, 1 failure in 0.382s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.254s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayMultidimensionalArrayLength
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_2
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
=== RUN   TestTypeArrayMultidimensionalArrayLength/case_3
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
--- FAIL: TestTypeArrayMultidimensionalArrayLength (0.00s)
    --- PASS: TestTypeArrayMultidimensionalArrayLength/case_1 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
FAIL
coverage: 2.4% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 0, want 1
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_2 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)
    typeArrayMultidimensionalArrayLength_test.go:33: typeArrayMultidimensionalArrayLength() = 1, want 0
    --- FAIL: TestTypeArrayMultidimensionalArrayLength/case_3 (0.00s)

=== FAIL: . TestTypeArrayMultidimensionalArrayLength (0.00s)

DONE 4 tests, 3 failures in 0.254s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
=== RUN   TestValidateDate
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidateDate
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true
--- FAIL: TestValidateDate (0.00s)
FAIL
coverage: 6.2% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestValidateDate (0.00s)
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 4, given_year: 2003
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 31, given_month: 6, given_year: 2014
        expected: true, observed: false
    validateDate_test.go:32: unexpected outcome for the given dates
        given_day: 13, given_month: 2, given_year: 2018
        expected: false, observed: true

DONE 1 tests, 1 failure in 0.341s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
