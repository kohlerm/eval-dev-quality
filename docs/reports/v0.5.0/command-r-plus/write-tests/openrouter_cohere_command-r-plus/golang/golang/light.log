2024/06/19 10:02:22 Evaluating model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:02:22 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:02:29 Model "openrouter/cohere/command-r-plus" responded (6443 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		Convey("hasBalancedBrackets tests", t, func() {
			Convey("Basic tests", func() {
				So(light.HasBalancedBrackets("[]"), ShouldBeTrue)
				So(light.HasBalancedBrackets("[][]"), ShouldBeTrue)
				So(light.HasBalancedBrackets("[[]]"), ShouldBeTrue)
				So(light.HasBalancedBrackets("[[][]]"), ShouldBeTrue)
				So(light.HasBalancedBrackets("[[][]][]"), ShouldBeTrue)

				So(light.HasBalancedBrackets("["), ShouldBeFalse)
				So(light.HasBalancedBrackets("]"), ShouldBeFalse)
				So(light.HasBalancedBrackets("[[[]]]"), ShouldBeFalse)
				So(light.HasBalancedBrackets("][][]"), ShouldBeFalse)
				So(light.HasBalancedBrackets("[[]]"), ShouldBeFalse)
				So(light.HasBalancedBrackets("[["), ShouldBeFalse)

				So(light.HasBalancedBrackets("[a]"), ShouldBeTrue)
				So(light.HasBalancedBrackets("[[][]"), ShouldBeFalse)
			})
		})
	}
	```
2024/06/19 10:02:29 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: downloading github.com/smartystreets/goconvey v1.8.1
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
go: downloading github.com/smarty/assertions v1.15.0
go: downloading github.com/jtolds/gls v4.20.0+incompatible
go: downloading github.com/gopherjs/gopherjs v1.17.2
2024/06/19 10:02:29 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors

DONE 0 tests, 11 errors in 0.547s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:30 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:02:38 Model "openrouter/cohere/command-r-plus" responded (8137 ms) with:
	```golang
	package light_test

	import (
		. "testing"
		"github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestBinarySearch(t *T) {
		Convey("binarySearch", t, func() {
			Convey("finds existing element", func() {
				arr := []int{1, 3, 5, 7, 9, 11}
				index := light.BinarySearch(arr, 5)
				So(index, ShouldEqual, 2)
			})

			Convey("returns -1 for non-existing element", func() {
				arr := []int{1, 3, 5, 7, 9, 11}
				index := light.BinarySearch(arr, 6)
				So(index, ShouldEqual, -1)
			})

			Convey("returns -1 for empty array", func() {
				index := light.BinarySearch([]int{}, 5)
				So(index, ShouldEqual, -1)
			})

			Convey("returns correct index for single-element array", func() {
				arr := []int{5}
				index := light.BinarySearch(arr, 5)
				So(index, ShouldEqual, 0)
			})

			Convey("returns -1 when element is smaller than all", func() {
				arr := []int{5, 7, 9, 11}
				index := light.BinarySearch(arr, 3)
				So(index, ShouldEqual, -1)
			})

			Convey("returns -1 when element is larger than all", func() {
				arr := []int{1, 3, 5, 7}
				index := light.BinarySearch(arr, 9)
				So(index, ShouldEqual, -1)
			})
		})
	}
	```
2024/06/19 10:02:38 $ go mod tidy
2024/06/19 10:02:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors

DONE 0 tests, 11 errors in 0.152s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:39 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:02:49 Model "openrouter/cohere/command-r-plus" responded (10280 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/smartystreets/goconvey/convey"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		convey.Convey("callLoopConditionsOftenEnough tests", t, func() {
			convey.Convey("Given x is within the range [10, 20] and y is small", func() {
				x, y := 15, 5
				callLoopConditionsOftenEnough(x, y)
				convey.So(x, convey.ShouldEqual, 16)
			})

			convey.Convey("Given x is within the range and y is large", func() {
				x, y := 15, 30
				callLoopConditionsOftenEnough(x, y)
				convey.So(x, convey.ShouldEqual, 23) // Should increment x more than 10 times
			})

			convey.Convey("Given x is outside the range and y is small", func() {
				x, y := 5, 5
				result := callLoopConditionsOftenEnough(x, y)
				convey.So(result, convey.ShouldEqual, 0)
			})

			convey.Convey("Given x is outside the range and y is large", func() {
				x, y := 25, 30
				result := callLoopConditionsOftenEnough(x, y)
				convey.So(result, convey.ShouldEqual, 0)
			})
		})
	}
	```
2024/06/19 10:02:49 $ go mod tidy
2024/06/19 10:02:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:02:49 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:02:55 Model "openrouter/cohere/command-r-plus" responded (5805 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case i = 1",
				args: args{i: 1},
				want: 2,
			},
			{
				name: "Case i = 3",
				args: args{i: 3},
				want: 4,
			},
			{
				name: "Default Case",
				args: args{i: 4},
				want: 5,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.CascadingIfElse(tt.args.i); got != tt.want {
					t.Errorf("cascadingIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:02:55 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:02:58 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:03:06 Model "openrouter/cohere/command-r-plus" responded (8126 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/project/light"
	)

	func TestComputeStepCount(t *testing.T) {
		type args struct {
			start int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Negative number",
				args: args{
					start: -1,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Zero",
				args: args{
					start: 0,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Already one",
				args: args{
					start: 1,
				},
				want:    0,
				wantErr: false,
			},
			{
				name: "Even number",
				args: args{
					start: 4,
				},
				want:    2,
				wantErr: false,
			},
			{
				name: "Odd number",
				args: args{
					start: 5,
				},
			:     5,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ComputeStepCount(tt.args.start)
				if (err != nil) != tt.wantErr {
					t.Errorf("ComputeStepCount() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ComputeStepCount() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:06 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:03:08 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:03:15 Model "openrouter/cohere/command-r-plus" responded (6912 ms) with:
	```golang
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
	    type args struct {
	        x rune
	        y rune
	    }
	    tests := []struct {
	        name string
	        args args
	        want bool
	    }{
	        {
	            name: "Both conditions met",
	            args: args{
	                x: 'A',
	                y: 'B',
	            },
	            want: true,
	        },
	        {
	            name: "First condition not met",
	            args: args{
	                x: 'C',
	                y: 'B',
	            },
	            want: false,
	        },
	        {
	            name: "Second condition not met",
	            args: args{
	                x: 'A',
	                y: 'C',
	            },
	            want: false,
	        },
	        {
	            nameStopping: "None of the conditions met",
	            args: args{
	                x: 'D',
	                y: 'E',
	            },
	            want: false,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := conditionsAnd(tt.args.x, tt.args.y); got != tt.want {
	                t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
	            }
	        })
	    }
	}
	```
2024/06/19 10:03:15 $ go mod tidy
2024/06/19 10:03:15 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light [light.test]
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.196s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:03:15 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:03:22 Model "openrouter/cohere/command-r-plus" responded (7438 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/light"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "Empty sequence",
				sequence: []int{},
				want:     "",
			},
			{
				name:     "Single element sequence",
				sequence: []int{1},
				want:     "0;",
			},
			{
				name:     "No equilibrium indices",
				sequence: []int{1, 2, 3},
				want:     "",
			},
			{
				name:     "Equilibrium indices at the beginning and end",
				sequence: []int{0, 1, 0},
				want:     "0;2;",
			},
			{
				name:     "Equilibrium index in the middle",
				sequence: []int{1, 3, 2, 1},
				want:     "1;",
			},
			{
				name:     "Multiple equilibrium indices",
				sequence: []int{-7, 1, -5, 2, -6, 3},
				want:     "1;4;",
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := light.EquilibriumIndices(tt.sequence)
				if got != tt.want {
					t.Errorf("EquilibriumIndices() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:22 $ go mod tidy
go: finding module for package github.com/your-org/light
go: light tested by
	light.test imports
	github.com/your-org/light: cannot find module providing package github.com/your-org/light: module github.com/your-org/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/aec1cef1e7eaf7f510bbf2017e1617b97396352d3de55ae405343a090fac64f7: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:03:24 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:03:30 Model "openrouter/cohere/command-r-plus" responded (5209 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/example/light"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			name string
			s    int
			want int
		}{
			{
				name: "sum of 0 to 4",
				s:    5,
				want: 20,
			},
			{
				name: "sum of 0 to 2",
				s:    3,
				want: 6,
			},
			{
				name: "sum of 0 to 10",
				s:    11,
				want: 110,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ForLoop(tt.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:03:30 $ go mod tidy
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:03:32 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:03:48 Model "openrouter/cohere/command-r-plus" responded (16678 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"os"
		"testing"

		"github.com/stretchr/testify/require"

		"github.com/areyousurewhy/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		type args struct {
			k uint64
			n uint64
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Jacobi symbol of 5 and 59",
				args: args{
					k: 5,
					n: 59,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 17 and 59",
				args: args{
					k: 17,
					n: 59,
				},
				want:    -1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 202012 and 31337",
				args: args{
					k: 202012,
					n: 31337,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 0 and 31337",
				args: args{
					k: 0,
					n: 31337,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of 1 and 1",
				args: args{
					k: 1,
					n: 1,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 31337 and 3 and invalid n",
				args: args{
					k: 31337,
					n: 3 * 31337,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of 31336 and 3 and invalid n",
				args: args{
					k: 31336,
					n: 3 * 31337,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of negative 31337",
				args: args{
					k: 31337,
					n: 31337,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of negative 2",
				args: args{
					k: 2,
					n: 31337,
				},
				want:    0,
				wantErr: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.JacobiSymbol(tt.args.k, tt.args.n)
				if (err != nil) != tt.wantErr {
					t.Errorf("JacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("JacobiSymbol() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func TestMain(m *testing.M) {
		result := m.Run()
		coverage := testing.Coverage()
		fmt.Fprintln(os.Stderr, testing.CoverageReport(coverage))
		os.Exit(result)
	}
	```
2024/06/19 10:03:48 $ go mod tidy
go: finding module for package github.com/stretchr/testify/require
go: finding module for package github.com/areyousurewhy/light
go: found github.com/stretchr/testify/require in github.com/stretchr/testify v1.9.0
go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
go: finding module for package github.com/areyousurewhy/light
go: light tested by
	light.test imports
	github.com/areyousurewhy/light: cannot find module providing package github.com/areyousurewhy/light: module github.com/areyousurewhy/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4d74f23b7a5dd42f2226591113891a6e6766a28af64c4dc1efbebaad03ec779b: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:03:50 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:04:09 Model "openrouter/cohere/command-r-plus" responded (18658 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"math"
		"testing"

		. "github.com/smartystreets/goconvey/convey"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		Convey("InitialiseKlarnerRadoSequence", t, func() {
			Convey("when limit is 0", func() {
				actual := initialiseKlarnerRadoSequence(0)
				So(actual, ShouldBeNil)
			})

			Convey("when limit is 10", func() {
				expected := []int{1, 3, 1, 7, 3, 9, 1, 11, 1, 13}
				actual := initialiseKlarnerRadoSequence(10)
				So(actual, ShouldResemble, expected)
			})

			Convey("when limit is 20", func() {
				expected := []int{1, 3, 1, 7, 3, 9, 1, 11, 1, 13, 3,
					17, 1, 19, 3, 21, 1, 23, 3, 25}
				actual := initialiseKlarnerRadoSequence(20)
				So(actual, ShouldResemble, expected)
			})

			Convey("when limit is 100", func() {
				expected := []int{1, 3, 1, 7, 3, 9, 1, 11, 1, 13, 3, 17, 1, 19, 3, 21, 1, 23, 3, 25, 7, 31, 1, 37, 1, 41, 3, 43, 1, 47, 3,
					53, 1, 59, 1, 61, 1, 67, 7, 73, 3, 79, 1, 83, 3, 89, 1, 97, 1, 101, 1, 103, 3, 107, 1, 109, 3, 111, 1, 127, 1,
					131, 1, 137, 3, 139, 1, 149, 3, 151, 1, 157, 3, 163, 1, 173, 3, 179, 1, 181, 3, 191, 1, 193, 3, 197, 1, 199, 3,
					211, 1, 223, 3, 227, 1, 229, 3, 233, 1, 239, 3, 251, 1, 257, 3, 263, 1, 269, 3, 271, 1, 277, 3, 283, 1, 307,
					1, 311, 7, 331, 3, 337, 1, 347, 1, 349, 3, 353, 1, 359, 3, 367, 1, 373, 3, 379, 1, 383, 3, 389, 1, 397}
				actual := initialiseKlarnerRadoSequence(100)
				So(actual, ShouldResemble, expected)
			})

			Convey("Panics", func() {
				So(func() { initialiseKlarnerRadoSequence(-1) }, ShouldPanic)
			})
		})
	}

	func ExampleInitialiseKlarnerRadoSequence() {
		sequence := initialiseKlarnerRadoSequence(10)
		fmt.Println(sequence)
		// Output: [1 3 1 7 3 9 1 11 1 13]
	}
	```
2024/06/19 10:04:09 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:04:09 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 7 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:04:09 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:04:19 Model "openrouter/cohere/command-r-plus" responded (9298 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/user/project/light"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name          string
			maxWeight     int
			items         []light.Item
			expectedValue int
		}{
			{
				name:          "Empty items",
				maxWeight:     5,
				items:         []light.Item{},
				expectedValue: 0,
			},
			{
				name:          "Single item",
				maxWeight:     5,
				items:         []light.Item{{weight: 2, value: 3}},
				expectedValue: 0,
			},
			{
				name:          "Multiple items",
				maxWeight:     5,
				items:         []light.Item{{weight: 2, value: 3}, {weight: 3, value: 4}, {weight: 1, value: 2}},
				expectedValue: 4,
			},
			{
				name:          "Large capacity",
				maxWeight:     10,
				items:         []light.Item{{weight: 4, value: 5}, {weight: 2, value: 3}, {weight: 6, value: 8}, {weight: 3, value: 4}},
				expectedValue: 13,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				actualValue := light.MaximumValue(tt.maxWeight, tt.items)
				if actualValue != tt.expectedValue {
					t.Errorf("Expected value: %d, Actual value: %d", tt.expectedValue, actualValue)
				}
			})
		}
	}
	```
2024/06/19 10:04:19 $ go mod tidy
go: finding module for package github.com/user/project/light
go: light tested by
	light.test imports
	github.com/user/project/light: cannot find module providing package github.com/user/project/light: module github.com/user/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/13900126feeab55163f466e396dad7a5882c0b2680f6447f020a6adb885a1d45: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:04:21 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:04:35 Model "openrouter/cohere/command-r-plus" responded (13856 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"testing"

		"example.com/problem-solving/golang/light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		type args struct {
			aNumber int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Negative number",
				args: args{
					aNumber: -3,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Zero",
				args: args{
					aNumber: 0,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Number 1",
				args: args{
					aNumber: 1,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Number 2",
				args: args{
					aNumber: 2,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Number 3",
				args: args{
					aNumber: 3,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Number 4",
				args: args{
					aNumber: 4,
				},
				want:    2,
				wantErr: false,
			},
			{
				name: "Number 15",
				args: args{
					aNumber: 15,
				},
				want:    5,
				wantErr: false,
			},
			{
				name: "Number 16",
				args: args{
					aNumber: 16,
				},
				want:    8,
				wantErr: false,
			},
			{
				name: "Large number",
				args: args{
					aNumber: 987654321,
				},
				want:    329218074,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.LargestProperDivisor(tt.args.aNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("LargestProperDivisor() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("LargestProperDivisor() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func ExampleLargestProperDivisor() {
		num := 25
		divisor, _ := light.LargestProperDivisor(num)
		fmt.Printf("The largest proper divisor of %d is %d", num, divisor)
		// Output: The largest proper divisor of 25 is 20
	}
	```
2024/06/19 10:04:35 $ go mod tidy
go: finding module for package example.com/problem-solving/golang/light
go: light tested by
	light.test imports
	example.com/problem-solving/golang/light: cannot find module providing package example.com/problem-solving/golang/light: unrecognized import path "example.com/problem-solving/golang/light": reading https://example.com/problem-solving/golang/light?go-get=1: 500 Internal Server Error
2024/06/19 10:04:37 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:04:54 Model "openrouter/cohere/command-r-plus" responded (16961 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestMagicSquareOdd(t *testing.T) {
		type args struct {
			base int
		}
		tests := []struct {
			name    string
			args    args
			want    [][]int
			wantErr bool
		}{
			{
				name: "Odd base above 2",
				args: args{base: 5},
				want: [][]int{
					{17, 24, 3, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 11, 19, 21, 2},
					{12, 1, 9, 18, 5},
				},
				wantErr: false,
			},
			{
				name: "Even base",
				args: args{base: 4},
				want: nil,
				wantErr: true,
			},
			{
				name: "Base less than 3",
				args: args{base: 1},
				want: nil,
				wantErr: true,
			},
			{
				name: "Base equals 3",
				args: args{base: 3},
				want: [][]int{
					{4, 9, 2},
					{3, 5, 7},
					{8, 1, 6},
				},
				wantErr: false,
			},
			{
				name: "Larger odd base",
				args: args{base: 9},
				want: [][]int{
					{36, 43, 34, 49, 32, 48, 27, 33, 42},
					{45, 24, 40, 29, 31, 18, 47, 22, 37},
					{13, 38, 7, 12, 44, 2, 39, 17, 26},
					{6, 15, 23, 1, 19, 35, 10, 5, 20},
					{46, 8, 16, 21, 41, 11, 28, 14, 9},
					{3, 25, 4, 30, 50, 26, 5, 21, 14},
					{42, 17, 39, 28, 10, 5, 23, 15, 6},
					{11, 41, 20, 9, 16, 24, 1, 12, 35},
					{27, 2, 18, 22, 7, 33, 36, 49, 30},
				},
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := magicSquareOdd(tt.args.base)
				if (err != nil) != tt.wantErr {
					t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				assert.Equal(t, tt.want, got)
			})
		}
	}
	```
2024/06/19 10:04:54 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:04:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd

DONE 0 tests, 1 error in 0.384s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:04:55 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:05:01 Model "openrouter/cohere/command-r-plus" responded (6734 ms) with:
	```golang
	package light

	import "testing"

	func TestMatchBytes(t *testing.T) {
	    type testCase struct {
	        s1 []byte
	        s2 []byte
	        expected bool
	    }

	    testCases := []testCase{
	        {[]byte("hello"), []byte("hello"), true},
	        {[]byte("HELLO"), []byte("hello"), true},
	        {[]byte("HELLo"), []byte("hello"), false},
	        {[]byte("world"), []byte("World"), true},
	        {[]byte("World"), []byte("world"), true},
	        {[]byte("WorlD"), []byte("world"), false},
	        {[]byte(""), []byte(""), true},
	        {nil, nil, true},
	        {[]byte("a"), []byte("b"), false},
	    }

	    for _, tc := range testCases {
	        actual := matchBytes(tc.s1, tc.s2)
	        if actual != tc.expected {
	            t.Errorf("matchBytes(%q, %q) = %v, expected %v", tc.s1, tc.s2, actual, tc.expected)
	        }
	    }
	}

	func TestMatchBytes_DifferentLength(t *testing.T) {
	    s1 := []byte("hello")
	    s2 := []byte("hello world")
	    if matchBytes(s1, s2) {
	        t.Errorf("matchBytes(%q, %q) = true, expected false", s1, s2)
	    }
	}
	```
2024/06/19 10:05:01 $ go mod tidy
2024/06/19 10:05:01 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestMatchBytes
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false
--- FAIL: TestMatchBytes (0.00s)
=== RUN   TestMatchBytes_DifferentLength
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false
--- FAIL: TestMatchBytes_DifferentLength (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false

=== FAIL: . TestMatchBytes_DifferentLength (0.00s)
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false

DONE 2 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:05:02 Executes tests with 2 coverage objects
2024/06/19 10:05:02 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:05:14 Model "openrouter/cohere/command-r-plus" responded (12112 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang/example/light"
	)

	func TestPascalsTriangle(t *testing.T) {
		type args struct {
			rows int
		}
		tests := []struct {
			name    string
			args    args
			want    [][]int
			wantErr bool
		}{
			{
				name: "Basic test case 1",
				args: args{
					rows: 5,
				},
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
					{1, 4, 6, 4, 1},
				},
				wantErr: false,
			},
			{
				name: "Basic test case 2",
				args: args{
					rows: 3,
				},
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
				},
				wantErr: false,
			},
			{
				name: "Negative rows input",
				args: args{
					rows: -1,
				},
				want:    nil,
				wantErr: true,
			},
			{
				name: "Zero rows input",
				args: args{
					rows: 0,
				},
				want:    nil,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.PascalTriangle(tt.args.rows)
				if (err != nil) != tt.wantErr {
					t.Errorf("PascalTriangle() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !equalArrays(got, tt.want) {
					t.Errorf("PascalTriangle() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func equalArrays(a, b [][]int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			for j := range a[i] {
				if a[i][j] != b[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/06/19 10:05:14 $ go mod tidy
go: finding module for package github.com/golang/example/light
go: downloading github.com/golang/example v0.0.0-20240205180059-32022caedd6a
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light
2024/06/19 10:05:16 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:05:27 Model "openrouter/cohere/command-r-plus" responded (11027 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/project/light"
	)

	func TestExtractDigits(t *testing.T) {
		type args struct {
			dirtyNumber string
		}
		tests := []struct {
			name    string
			args    args
			want    string
			wantErr bool
		}{
			{
				name:    "Valid number",
				args:    args{dirtyNumber: "123-45-6789"},
				want:    "123456789",
				wantErr: false,
			},
			{
				name:    "Punctuation not permitted",
				args:    args{dirtyNumber: "123-@456"},
				want:    "",
				wantErr: true,
			},
			{
				name:    "Letters not permitted",
				args:    args{dirtyNumber: "123abc456"},
				want:    "",
				wantErr: true,
			},
			{
				name:    "Invalid characters ignored",
				args:    args{dirtyNumber: "123#@$%456"},
				want:    "123456",
				wantErr: false,
			},
			{
				name:    "Spaces and punctuation ignored",
				args:    args{dirtyNumber: "  123 (456) -7890 "},
				want:    "1234567890",
				wantErr: false,
			},
			{
				name:    "Empty string",
				args:    args{dirtyNumber: ""},
				want:    "",
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ExtractDigits(tt.args.dirtyNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("ExtractDigits() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ExtractDigits() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:05:27 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:05:28 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:05:33 Model "openrouter/cohere/command-r-plus" responded (4965 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/package/light"
	)

	func TestSimpleIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case i = 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Case i != 1",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleIfElse(tt.args.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:05:33 $ go mod tidy
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:05:35 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:05:43 Model "openrouter/cohere/command-r-plus" responded (7264 ms) with:
	```golang
	package light_test

	import (
		"light"
		"testing"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Default Case",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleSwitchWithReturn(tt.args.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:05:43 $ go mod tidy
2024/06/19 10:05:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn

DONE 0 tests, 1 error in 0.161s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:05:43 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:05:53 Model "openrouter/cohere/command-r-plus" responded (9648 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/project/light"
	)

	func TestIsSorted(t *testing.T) {
		type args struct {
			a []int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "empty slice",
				args: args{
					a: []int{},
				},
				want: true,
			},
			{
				name: "single element slice",
				args: args{
					a: []int{1},
				},
				want: true,
			},
			{
				name: "sorted slice",
				args: args{
					a: []int{1, 2, 3, 4, 5},
				},
				want: true,
			},
			{
				name: "unsorted slice",
				args: args{
					a: []int{1, 3, 2, 5, 4},
				},
				want: false,
			},
			{
				name: "partially sorted slice",
				args: args{
					a: []int{1, 2, 4, 3, 5},
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.IsSorted(tt.args.a); got != tt.want {
					t.Errorf("isSorted() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:05:53 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:05:53 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:05:59 Model "openrouter/cohere/command-r-plus" responded (5676 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/example/light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name string
			x    []int
			want int
		}{
			{
				name: "First element is 123",
				x:    []int{123, 456, 789},
				want: 123,
			},
			{
				name: "First element is not 123",
				x:    []int{456, 123, 789},
				want: 3,
			},
			{
				name: "Empty array",
				x:    []int{},
				want: 3,
			},
			{
				name: "Nil array",
				x:    nil,
				want: 3,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := light.TypeArrayAccess(tt.x)
				if got != tt.want {
					t.Errorf("Got: %d, Want: %d", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:05:59 $ go mod tidy
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:06:00 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:06:08 Model "openrouter/cohere/command-r-plus" responded (8368 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name     string
			input    []int
			expected int
		}{
			{
				name:     "Case 1",
				input:    []int{0, 8},
				expected: 2,
			},
			{
				name:     "Case 2",
				input:    []int{8, 0},
				expected: 1,
			},
			{
				name:     "Case 3",
				input:    []int{1, 2},
				expected: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := typeArrayConsecutiveAccess(tt.input)
				if got != tt.expected {
					t.Errorf("got %d, want %d", got, tt.expected)
				}
			})
		}
	}
	```
2024/06/19 10:06:08 $ go mod tidy
2024/06/19 10:06:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 4 tests, 2 failures in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:09 Executes tests with 3 coverage objects
2024/06/19 10:06:09 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:06:19 Model "openrouter/cohere/command-r-plus" responded (10452 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/ forewings/light"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "Two-dimensional array with length 2",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "Two-dimensional array with length 1",
				x:    [][]int{{1}, {2, 3}},
				want: 1,
			},
			{
				name: "Empty two-dimensional array",
				x:    [][]int{},
				want: 0,
			},
			{
				name: "Nil two-dimensional array",
				x:    nil,
				want: 0,
			},
			{
				name: "Three-dimensional array",
				x:    [][]int{{{1}, {2}}, {{3}, {4}}},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := light.TypeArrayMultidimensionalArrayLength(tt.x)
				if got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:06:19 $ go mod tidy
go: light tested by
	light.test imports
	github.com/ forewings/light: malformed import path "github.com/ forewings/light": invalid char ' '
2024/06/19 10:06:19 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:06:30 Model "openrouter/cohere/command-r-plus" responded (10759 ms) with:
	```golang
	package light
	
	import (
		"testing"
	)
	
	func TestValidDate(t *testing.T) {
		type args struct {
			day   int
			month int
			year  int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Valid date",
				args: args{
					day:   15,
					month: 6,
					year:  2024,
				},
				want: true,
			},
			{
				name: "Invalid day",
				args: args{
					day:   32,
					month: 6,
					year:  2024,
				},
				want: false,
			},
			{
				name: "Invalid month",
				args: args{
					day:   15,
					month: 13,
				降伏:  2024,
				},
				want: false,
			},
			{
				name: "Invalid year",
				args: args{
					day:   15,
					month: 6,
					year:  1400,
				},
				want: false,
			},
			{
				name: "Leap year",
				args: args{
					day:   29,
					month: 2,
					year:  2024,
				},
				want: true,
			},
			{
				name: "Non-leap year",
				args: args{
					day:   29,
					month: 2,
					year:  2023,
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := validDate(tt.args.day, tt.args.month, tt.args.year); got != tt.want {
					t.Errorf("validDate() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:06:30 $ go mod tidy
2024/06/19 10:06:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light [light.test]
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args

DONE 0 tests, 1 error in 0.200s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:06:31 Evaluated model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light": encountered 23 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors

DONE 0 tests, 11 errors in 0.547s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:15:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: too many errors

DONE 0 tests, 11 errors in 0.547s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors

DONE 0 tests, 11 errors in 0.152s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:11:3: undefined: Convey
./binarySearch_test.go:13:19: undefined: light.BinarySearch
./binarySearch_test.go:14:4: undefined: So
./binarySearch_test.go:14:14: undefined: ShouldEqual
./binarySearch_test.go:17:3: undefined: Convey
./binarySearch_test.go:19:19: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:14: undefined: ShouldEqual
./binarySearch_test.go:23:3: undefined: Convey
./binarySearch_test.go:23:3: too many errors

DONE 0 tests, 11 errors in 0.152s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:13:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:19:4: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:25:14: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:31:14: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

cascadingIfElse.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

collatzCalculator.go exit status 1
# light [light.test]
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.196s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:40:13: unknown field nameStopping in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.196s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

conditionsAnd.go exit status 1
go: finding module for package github.com/your-org/light
go: light tested by
	light.test imports
	github.com/your-org/light: cannot find module providing package github.com/your-org/light: module github.com/your-org/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/aec1cef1e7eaf7f510bbf2017e1617b97396352d3de55ae405343a090fac64f7: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/light
go: light tested by
	light.test imports
	github.com/your-org/light: cannot find module providing package github.com/your-org/light: module github.com/your-org/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/aec1cef1e7eaf7f510bbf2017e1617b97396352d3de55ae405343a090fac64f7: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

equilibriumIndices.go exit status 1
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

forLoop.go exit status 1
go: finding module for package github.com/stretchr/testify/require
go: finding module for package github.com/areyousurewhy/light
go: found github.com/stretchr/testify/require in github.com/stretchr/testify v1.9.0
go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
go: finding module for package github.com/areyousurewhy/light
go: light tested by
	light.test imports
	github.com/areyousurewhy/light: cannot find module providing package github.com/areyousurewhy/light: module github.com/areyousurewhy/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4d74f23b7a5dd42f2226591113891a6e6766a28af64c4dc1efbebaad03ec779b: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/stretchr/testify/require
go: finding module for package github.com/areyousurewhy/light
go: found github.com/stretchr/testify/require in github.com/stretchr/testify v1.9.0
go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
go: finding module for package github.com/areyousurewhy/light
go: light tested by
	light.test imports
	github.com/areyousurewhy/light: cannot find module providing package github.com/areyousurewhy/light: module github.com/areyousurewhy/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4d74f23b7a5dd42f2226591113891a6e6766a28af64c4dc1efbebaad03ec779b: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

jacobiSymbol.go exit status 1
# light_test [light.test]
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 7 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:5:2: "math" imported and not used
./klarnerRadoSequence_test.go:14:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:27:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:37:14: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:42:16: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:48:14: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 7 errors in 0.142s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
go: finding module for package github.com/user/project/light
go: light tested by
	light.test imports
	github.com/user/project/light: cannot find module providing package github.com/user/project/light: module github.com/user/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/13900126feeab55163f466e396dad7a5882c0b2680f6447f020a6adb885a1d45: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/user/project/light
go: light tested by
	light.test imports
	github.com/user/project/light: cannot find module providing package github.com/user/project/light: module github.com/user/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/13900126feeab55163f466e396dad7a5882c0b2680f6447f020a6adb885a1d45: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

knapsack.go exit status 1
go: finding module for package example.com/problem-solving/golang/light
go: light tested by
	light.test imports
	example.com/problem-solving/golang/light: cannot find module providing package example.com/problem-solving/golang/light: unrecognized import path "example.com/problem-solving/golang/light": reading https://example.com/problem-solving/golang/light?go-get=1: 500 Internal Server Error

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/problem-solving/golang/light
go: light tested by
	light.test imports
	example.com/problem-solving/golang/light: cannot find module providing package example.com/problem-solving/golang/light: unrecognized import path "example.com/problem-solving/golang/light": reading https://example.com/problem-solving/golang/light?go-get=1: 500 Internal Server Error

largestProperDivisor.go exit status 1
# light_test [light.test]
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd

DONE 0 tests, 1 error in 0.384s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./magicSquareOdd_test.go:72:16: undefined: magicSquareOdd

DONE 0 tests, 1 error in 0.384s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
=== RUN   TestMatchBytes
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false
--- FAIL: TestMatchBytes (0.00s)
=== RUN   TestMatchBytes_DifferentLength
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false
--- FAIL: TestMatchBytes_DifferentLength (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false

=== FAIL: . TestMatchBytes_DifferentLength (0.00s)
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false

DONE 2 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMatchBytes
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false
--- FAIL: TestMatchBytes (0.00s)
=== RUN   TestMatchBytes_DifferentLength
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false
--- FAIL: TestMatchBytes_DifferentLength (0.00s)
FAIL
coverage: 4.3% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMatchBytes (0.00s)
    matchBytes_test.go:27: matchBytes("HELLo", "hello") = true, expected false
    matchBytes_test.go:27: matchBytes("WorlD", "world") = true, expected false

=== FAIL: . TestMatchBytes_DifferentLength (0.00s)
    matchBytes_test.go:36: matchBytes("hello", "hello world") = true, expected false

DONE 2 tests, 2 failures in 0.397s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: finding module for package github.com/golang/example/light
go: downloading github.com/golang/example v0.0.0-20240205180059-32022caedd6a
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang/example/light
go: downloading github.com/golang/example v0.0.0-20240205180059-32022caedd6a
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light

pascalsTriangle.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

phoneNumber.go exit status 1
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleIfElse.go exit status 1
# light_test [light.test]
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn

DONE 0 tests, 1 error in 0.161s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./simpleSwitchWithReturn_test.go:34:20: undefined: light.SimpleSwitchWithReturn

DONE 0 tests, 1 error in 0.161s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

simpleSwitchWithReturn.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

sort.go exit status 1
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/example/light
go: light tested by
	light.test imports
	github.com/example/light: cannot find module providing package github.com/example/light: module github.com/example/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e50baff51c349bf7dd731e0e4ae84bf60db925e00d53a161d889e6b9ca27c2d8: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

typeArrayAccess.go exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 4 tests, 2 failures in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.003s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    typeArrayConsecutiveAccess_test.go:32: got 0, want 1
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 4 tests, 2 failures in 0.410s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: light tested by
	light.test imports
	github.com/ forewings/light: malformed import path "github.com/ forewings/light": invalid char ' '

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: light tested by
	light.test imports
	github.com/ forewings/light: malformed import path "github.com/ forewings/light": invalid char ' '

typeArrayMultidimensionalArrayLength.go exit status 1
# light [light.test]
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args

DONE 0 tests, 1 error in 0.200s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:41:4: unknown field 降伏 in struct literal of type args

DONE 0 tests, 1 error in 0.200s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
2024/06/19 10:13:52 Evaluating model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:13:52 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:14:04 Model "openrouter/cohere/command-r-plus" responded (12128 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"testing"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		Convey("hasBalancedBrackets", t, func() {
			Convey("should return true for balanced brackets", func() {
				So(hasBalancedBrackets(""), ShouldBeTrue)
				So(hasBalancedBrackets("[]"), ShouldBeTrue)
				So(hasBalancedBrackets("[][]"), ShouldBeTrue)
				So(hasBalancedBrackets("[][][]"), ShouldBeTrue)
				So(hasBalancedBrackets("[][[][]]"), ShouldBeTrue)
			})

			Convey("should return false for unbalanced brackets", func() {
				So(hasBalancedBrackets("]"), ShouldBeFalse)
				So(hasBalancedBrackets("["), ShouldBeFalse)
				So(hasBalancedBrackets("]["), ShouldBeFalse)
				So(hasBalancedBrackets("[]["), ShouldBeFalse)
				So(hasBalancedBrackets("[][]]"), ShouldBeFalse)
				So(hasBalancedBrackets("[[[[[]]]]]]]]]]]"), ShouldBeFalse)
			})

			Convey("should return false for non-bracket characters", func() {
				So(hasBalancedBrackets("}"), ShouldBeFalse)
				So(hasBalancedBrackets("{]"), ShouldBeFalse)
				So(hasBalancedBrackets("{]"), ShouldBeFalse)
				So(hasBalancedBrackets("[a]"), ShouldBeFalse)
				So(hasBalancedBrackets("[123]"), ShouldBeFalse)
				So(hasBalancedBrackets("{[}]"), ShouldBeFalse)
			})
		})
	}
	```
2024/06/19 10:14:04 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:14:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors

DONE 0 tests, 11 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:14:05 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:14:11 Model "openrouter/cohere/command-r-plus" responded (6001 ms) with:
	```golang
	package light

	import "testing"

	func TestBinarySearch(t *testing.T) {
		type testCase struct {
			arr []int
			x   int
			exp int
		}

		testCases := []testCase{
			{[]int{1, 2, 3, 4, 5}, 3, 2},
			{[]int{1, 2, 3, 4, 5}, 6, -1},
			{[]int{}, 1, -1},
			{[]int{1}, 1, 0},
			{[]int{1, 2, 3, 4, 5}, 1, 0},
			{[]int{1, 2, 3, 4, 5}, 5, 4},
			{[]int{5, 4, 3, 2, 1}, 3, 2},
		}

		for _, tc := range testCases {
			act := binarySearch(tc.arr, tc.x)
			if act != tc.exp {
				t.Fatalf("Failed for %v. Expected %d, got %d", tc.arr, tc.exp, act)
			}
		}
	}
	```
2024/06/19 10:14:11 $ go mod tidy
2024/06/19 10:14:11 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestBinarySearch
--- PASS: TestBinarySearch (0.00s)
PASS
coverage: 5.2% of statements
ok  	light	0.003s	coverage: 5.2% of statements

DONE 1 tests in 0.316s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:14:11 Executes tests with 4 coverage objects
2024/06/19 10:14:11 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:14:23 Model "openrouter/cohere/command-r-plus" responded (11382 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/problem-solving/strong-light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name string
			x, y int
			want int
		}{
			{
				name: "Out of bounds",
				x:    5,
				y:    5,
				want: 0,
			},
			{
				name: "In bounds",
				x:    15,
				y:    5,
				want: 25,
			},
			{
				name: "Just right",
				x:    10,
				y:    10,
				want: 20,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := strongLight.CallLoopConditionsOftenEnough(tt.x, tt.y); got != tt.want {
					t.Errorf("CallLoopConditionsOftenEnough() = %d, want %d", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:14:23 $ go mod tidy
go: finding module for package example.com/problem-solving/strong-light
go: light tested by
	light.test imports
	example.com/problem-solving/strong-light: cannot find module providing package example.com/problem-solving/strong-light: unrecognized import path "example.com/problem-solving/strong-light": reading https://example.com/problem-solving/strong-light?go-get=1: 500 Internal Server Error
2024/06/19 10:14:25 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:14:29 Model "openrouter/cohere/command-r-plus" responded (3546 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			input  int
			expected int
		}{
			{1, 2},
			{3, 4},
			{4, 5},
			{0, 5},
			{-5, 5},
		}

		for _, test := range tests {
			actual := light.CascadingIfElse(test.input)
			if actual != test.expected {
				t.Errorf("Input: %d, Expected: %d, Actual: %d", test.input, test.expected, actual)
			}
		}
	}
	```
2024/06/19 10:14:29 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:14:30 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:14:39 Model "openrouter/cohere/command-r-plus" responded (9218 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-repository/package-light"
	)

	func TestComputeStepCount(t *testing.T) {
		type args struct {
			start int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Positive Number",
				args: args{
					start: 5,
				},
				want:    5,
				wantErr: false,
			},
			{
				name: "Zero",
				args: args{
					start: 0,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Negative Number",
				args: args{
					start: -1,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Number 1",
				args: args{
					start: 1,
				},
				want:    0,
				wantErr: false,
			},
			{
				name: "Even Number",
				args: args{
					start: 10,
				},
				want:    4,
				wantErr: false,
			},
			{
				name: "Large Number",
				args: args{
					start: 1000000,
				},
				want:    27,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ComputeStepCount(tt.args.start)
				if (err != nil) != tt.wantErr {
					t.Errorf("ComputeStepCount() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ComputeStepCount() got = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:14:39 $ go mod tidy
go: finding module for package github.com/your-repository/package-light
go: light tested by
	light.test imports
	github.com/your-repository/package-light: cannot find module providing package github.com/your-repository/package-light: module github.com/your-repository/package-light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/150fbdaa4dd7baf4a052bcdefe78ab9f52ca24dee63a2ca5b776feab303d4b18: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:14:41 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:14:48 Model "openrouter/cohere/command-r-plus" responded (7012 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestConditionsAnd(t *testing.T) {
		type args struct {
			x rune
			y rune
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Matching characters",
				args: args{
					x: 'A',
					y: 'B',
				},
				want: true,
			},
			{
				name: "Non-matching characters",
				args: args{
					x: 'A',
					y: 'C',
				},
				want: false,
			},
			{
				name: "Different first character",
				args: args{
					x: 'B',
					y: 'B',
				},
				want: false,
			},
			{
				name: "Different second character",
				args: args{
					x: 'A',
					y: 'A',
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ConditionsAnd(tt.args.x, tt.args.y); got != tt.want {
					t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:14:48 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:14:50 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:15:03 Model "openrouter/cohere/command-r-plus" responded (12912 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/project/light"
	)

	func TestEquilibriumIndicesEmptySlice(t *testing.T) {
		input := []int{}
		output := ""

		result := light.EquilibriumIndices(input)
		if result != output {
			t.Errorf("Expected %s, got %s", output, result)
		}
	}

	func TestEquilibriumIndicesSingleElement(t *testing.T) {
		input := []int{5}
		output := "0;"

		result := light.EquilibriumIndices(input)
		if result != output {
			t.Errorf("Expected %s, got %s", output, result)
		}
	}

	func TestEquilibriumIndicesNoEquilibrium(t *testing.T) {
		input := []int{1, 2, 3}
		output := ""

		result := light.EquilibriumIndices(input)
		if result != output {
			t.Errorf("Expected %s, got %s", output, result)
		}
	}

	func TestEquilibriumIndicesAllEquilibrium(t *testing.T) {
		input := []int{-7, 1, -5, 2, -6, 3}
		output := "0;1;2;3;4;5;"

		result := light.EquilibriumIndices(input)
		if result != output {
			t.Errorf("Expected %s, got %s", output, result)
		}
	}

	func TestEquilibriumIndicesPartialEquilibrium(t *testing.T) {
		input := []int{3, 10, 2, 9, 1}
		output := "1;3;4;"

		result := light.EquilibriumIndices(input)
		if result != output {
			t.Errorf("Expected %s, got %s", output, result)
		}
	}
	```
2024/06/19 10:15:03 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:15:04 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:15:16 Model "openrouter/cohere/command-r-plus" responded (12040 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestForLoop(t *testing.T) {
		t.Run("SingleIteration", func(t *testing.T) {
			got := forLoop(1)
			want := 0
			assert.Equal(t, want, got)
		})

		t.Run("MultipleIterations", func(t *testing.T) {
			got := forLoop(5)
			want := 10
			assert.Equal(t, want, got)
		})

		t.Run("ZeroInput", func(t *testing.T) {
			got := forLoop(0)
			want := 0
			assert.Equal(t, want, got)
		})

		t.Run("NegativeInput", func(t *testing.T) {
			got := forLoop(-5)
			want := 0
			assert.Equal(t, want, got)
		})
	}
	```
2024/06/19 10:15:16 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:15:16 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop

DONE 0 tests, 4 errors in 0.212s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:16 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:15:38 Model "openrouter/cohere/command-r-plus" responded (22354 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"math/rand"
		"testing"

		"github.com/stretchr/testify/require"

		"path/to/package/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		type args struct {
			k uint64
			n uint64
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Invalid k",
				args: args{
					k: 0,
					n: 7,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Invalid n",
				args: args{
					k: 5,
					n: 8,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "k is greater than n",
				args: args{
					k: 13,
					n: 5,
				},
				want:    -1,
				wantErr: false,
			},
			{
				name: "k is smaller than n",
				args: args{
					k: 5,
					n: 11,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "k is equal to n",
				args: args{
					k: 7,
					n: 7,
				},
				want:    0,
				wantErr: false,
			},
			{
				name: "random inputs",
				args: args{
					k: rand.Uint64(),
					n: rand.Uint64() + 1,
				},
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.JacobiSymbol(tt.args.k, tt.args.n)
				if (err != nil) != tt.wantErr {
					t.Errorf("JacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if tt.wantErr {
					return
				}
				if got != tt.want {
					t.Errorf("JacobiSymbol() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func TestJacobiSymbolProperties(t *testing.T) {
		// Jacobi symbol is multiplicative
		a, b := uint64(17), uint64(19)
		c, d := uint64(11), uint64(23)
		JacobiMult := func(p, a, b uint64) int {
			x, err := light.JacobiSymbol(a, p)
			if err != nil {
				t.Error(err)
			}
			y, err := light.JacobiSymbol(b, p)
			if err != nil {
				t.Error(err)
			}
			xy, err := light.JacobiSymbol(a*b, p)
			if err != nil {
				t.Error(err)
			}
			return int(x * y) % int(p) - int(xy) % int(p)
		}
		require.Zero(t, JacobiMult(a, c, d))
		require.Zero(t, JacobiMult(b, c, d))

		// Jacobi symbol is a divisor function
		primes := []uint64{3, 5, 7, 11, 13, 17, 19}
		JacobiDivisor := func(p, a uint64) int {
			x, err := light.JacobiSymbol(a, p)
			if err != nil {
				t.Error(err)
			}
			for i := uint64(2); i*i <= a; i++ {
				if a%i == 0 {
					if p%i == 0 {
						return 1
					}
					y, err := light.JacobiSymbol(i, p)
					if err != nil {
						t.Error(err)
					}
					z, err := light.JacobiSymbol(a/i, p)
					if err != nil {
						t.Error(err)
					}
					return int(y) * int(z)
				}
			}
			return int(x)
		}
		for _, p := range primes {
			for i := uint64(2); i < 100; i++ {
				require.Zero(t, JacobiDivisor(p, i))
			}
		}
	}
	```
2024/06/19 10:15:38 $ go mod tidy
2024/06/19 10:15:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light
WARN jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)

DONE 0 tests, 1 error in 0.092s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:39 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:15:52 Model "openrouter/cohere/command-r-plus" responded (13404 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		Convey("InitialiseKlarnerRadoSequence should return the correct sequence", t, func() {
			result := initialiseKlarnerRadoSequence(0)
			So(result, ShouldHaveLength, 1)
			So(result[0], ShouldEqual, 0)

			result = initialiseKlarnerRadoSequence(1)
			So(result, ShouldResemble, []int{0, 1})

			result = initialiseKlarnerRadoSequence(2)
			So(result, ShouldResemble, []int{0, 1, 3})

			result = initialiseKlarnerRadoSequence(3)
			So(result, ShouldResemble, []int{0, 1, 3, 1})

			result = initialiseKlarnerRadoSequence(4)
			So(result, ShouldResemble, []int{0, 1, 3, 1, 7})

			result = initialiseKlarnerRadoSequence(5)
			So(result, ShouldResemble, []int{0, 1, 3, 1, 7, 3})
		})
	}
	```
2024/06/19 10:15:52 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:15:52 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 6 errors in 0.157s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:15:53 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:16:23 Model "openrouter/cohere/command-r-plus" responded (30540 ms) with:
	```golang
	package light_test

	import (
		"math"
		"testing"

		"github.com/golang/example/knapsack"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name         string
			maxWeight    int
			items        []knapsack.Item
			expectedVal  int
			expectedUsed []bool
		}{
			{
				name: "Empty knapsack",
				items: []knapsack.Item{
					{weight: 2, value: 6},
					{weight: 2, value: 10},
					{weight: 3, value: 12},
				},
				expectedVal:  0,
				expectedUsed: []bool{},
			},
			{
				name: "Single item, fits perfectly",
				items: []knapsack.Item{
					{weight: 2, value: 6},
				},
				maxWeight:    2,
				expectedVal:  6,
				expectedUsed: []bool{true},
			},
			{
				name: "Single item, overweight",
				items: []knapsack.Item{
					{weight: 2, value: 6},
				},
				maxWeight:    1,
				expectedVal:  0,
				expectedUsed: []bool{},
			},
			{
				name: "Multiple items, choose best fit",
				items: []knapsack.Item{
					{weight: 2, value: 6},
					{weight: 2, value: 10},
					{weight: 3, value: 12},
				},
				maxWeight:    5,
				expectedVal:  22,
				expectedUsed: []bool{true, true, false},
			},
			{
				name: "Multiple items, fill knapsack",
				items: []knapsack.Item{
					{weight: 1, value: 2},
					{weight: 2, value: 4},
					{weight: 3, value: 7},
					{weight: 4, value: 12},
				},
				maxWeight:    5,
				expectedVal:  15,
				expectedUsed: []bool{true, true, true, false},
			},
			{
				name: "Large knapsack, large items",
				items: []knapsack.Item{
					{weight: 10, value: 60},
					{weight: 20, value: 100},
					{weight: 30, value: 120},
					{weight: 50, value: 200},
				},
				maxWeight:    60,
				expectedVal:  320,
				expectedUsed: []bool{true, true, true, false},
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				val, used := knapsack.MaximumValueWithTrace(tt.maxWeight, tt.items)
				if val != tt.expectedVal {
					t.Errorf("Expected value %d, got %d", tt.expectedVal, val)
				}
				if len(used) != len(tt.expectedUsed) {
					t.Errorf("Expected used slice length %d, got %d", len(tt.expectedUsed), len(used))
				}
				for i := range used {
					if used[i] != tt.expectedUsed[i] {
						t.Errorf("Expected item %d to be %v, got %v", i, tt.expectedUsed[i], used[i])
					}
				}
			})
		}
	}

	func TestMax(t *testing.T) {
		tests := []struct {
			name  string
			a, b  int
			want  int
			wantF float64
		}{
			{
				name:  "Both positive",
				a:     3,
				b:     4,
				want:  4,
				wantF: 4.0,
			},
			{
				name:  "Both negative",
				a:    -3,
				b:    -4,
				want: -3,
				wantF: -3.0,
			},
			{
				name:  "One zero",
				a:     0,
				b:     5,
				want:  5,
				wantF: 5.0,
			},
			{
				name:  "Equal",
				a:     5,
				b:     5,
				want:  5,
				wantF: 5.0,
			},
			{
				name:  "Fractional result",
				a:     3,
				b:     1.5,
				want:  3,
				wantF: 3.0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := knapsack.Max(tt.a, tt.b); got != tt.want {
					t.Errorf("Max() = %v, want %v", got, tt.want)
				}
				if gotF := math.Max(float64(tt.a), float64(tt.b)); gotF != tt.wantF {
					t.Errorf("math.Max() = %v, want %v", gotF, tt.wantF)
				}
			})
		}
	}
	```
2024/06/19 10:16:23 $ go mod tidy
go: finding module for package github.com/golang/example/knapsack
go: light tested by
	light.test imports
	github.com/golang/example/knapsack: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/knapsack
2024/06/19 10:16:25 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:16:34 Model "openrouter/cohere/command-r-plus" responded (9553 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/package/light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		type args struct {
			aNumber int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Even number",
				args: args{
					aNumber: 12,
				},
				want:    6,
				wantErr: false,
			},
			{
				name: "Odd number with proper divisor",
				args: args{
					aNumber: 15,
				},
				want:    5,
				wantErr: false,
			},
			{
				name: "Prime number",
				args: args{
					aNumber: 17,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Invalid argument: negative number",
				args: args{
					aNumber: -5,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Invalid argument: zero",
				args: args{
					aNumber: 0,
				},
				want:    0,
				wantErr: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.LargestProperDivisor(tt.args.aNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("LargestProperDivisor() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("LargestProperDivisor() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:16:34 $ go mod tidy
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:16:35 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:16:43 Model "openrouter/cohere/command-r-plus" responded (8445 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/smartystreets/goconvey/convey"
	)

	func TestMagicSquareOdd(t *testing.T) {
		convey.Convey("magicSquareOdd tests", t, func() {
			convey.Convey("When base is odd and > 2, it should fill the grid correctly", func() {
				grid, err := magicSquareOdd(5)
				convey.So(err, convey.ShouldBeNil)
				convey.So(grid, convey.ShouldNotBeNil)
				convey.So(grid, convey.ShouldResemble, [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 22},
					{10, 12, 19, 21, 3},
					{11, 2, 9, 18, 0},
				})
			})

			convey.Convey("When base is even, it should return an error", func() {
				grid, err := magicSquareOdd(4)
				convey.So(err, convey.ShouldNotBeNil)
				convey.So(err.Error(), convey.ShouldEqual, "base must be odd and > 2")
				convey.So(grid, convey.ShouldBeNil)
			})

			convey.Convey("When base is less than 3, it should return an error", func() {
				grid, err := magicSquareOdd(1)
				convey.So(err, convey.ShouldNotBeNil)
				conveyCoordinates("err.Error(), convey.ShouldEqual, "base must be odd and > 2")
				convey.So(grid, convey.ShouldBeNil)
			})
		})
	}
	```
2024/06/19 10:16:43 $ go mod tidy
2024/06/19 10:16:43 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light
magicSquareOdd_test.go:34:57: missing ',' in argument list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
magicSquareOdd_test.go:34:57: missing ',' in argument list

DONE 0 tests, 1 error in 0.046s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:16:44 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:16:50 Model "openrouter/cohere/command-r-plus" responded (6235 ms) with:
	```golang
	package light_test

	import (
	    "testing"
	    "github.com/golang/Assert/v2"
	)

	func TestMatchBytes(t *testing.T) {
	    type testCase struct {
	        s1 []byte
	        s2 []byte
	        expected bool
	    }

	    testCases := []testCase{
	        {[]byte("abcd"), []byte("AbCd"), true},
	        {[]byte("hello"), []byte("hello"), true},
	        {[]byte("foo"), []byte("bar"), false},
	        {[]byte("abc123"), []byte("ABC123"), true},
	        {[]byte("ABC"), []byte("abc"), false},
	        {[]byte(""), []byte(""), true},
	        {[]byte("abcdef"), []byte("abdef"), false},
	    }

	    for _, tc := range testCases {
	        actual := matchBytes(tc.s1, tc.s2)
	        Assert.Equal(t, tc.expected, actual)
	    }
	}
	```
2024/06/19 10:16:50 $ go mod tidy
go: finding module for package github.com/golang/Assert/v2
go: light tested by
	light.test imports
	github.com/golang/Assert/v2: cannot find module providing package github.com/golang/Assert/v2: module github.com/golang/Assert/v2: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/a6df46d11a201a51119897256d235bda86a4c97d255b5ef520dfc4a4bc610544: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:16:52 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:17:05 Model "openrouter/cohere/command-r-plus" responded (12626 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang/mock/gomock"
		. "github.com/smartystreets/goconvey/convey"

		"light"
	)

	func TestPascalTriangle(t *testing.T) {
		Convey("Pascal's Triangle", t, func() {
			Convey("When rows is negative", func() {
				rows := -1
				triangle, err := light.PascalTriangle(rows)

				Convey("Error should be returned", func() {
					So(err, ShouldNotEqual, nil)
					So(err.Error(), ShouldEqual, "Rows can't be negative!")
					So(triangle, ShouldBeNil)
				})
			})

			Convey("When rows is zero", func() {
				rows := 0
				triangle, err := light.PascalTriangle(rows)

				Convey("Empty triangle should be returned", func() {
					So(err, ShouldBeNil)
					So(triangle, ShouldHaveLength, 0)
				})
			})

			Convey("When rows is 1", func() {
				rows := 1
				triangle, err := light.PascalTriangle(rows)

				Convey("Triangle should have a single row with a single element 1", func() {
					So(err, ShouldBeNil)
					So(triangle, ShouldHaveLength, 1)
					So(triangle[0], ShouldHaveLength, 1)
					So(triangle[0][0], ShouldEqual, 1)
				})
			})

			Convey("When rows is 2", func() {
				rows := 2
				triangle, err := light.PascalTriangle(rows)

				Convey("Triangle should have two rows with correct elements", func() {
					So(err, ShouldBeNil)
					So(triangle, ShouldHaveLength, 2)
					So(triangle[0], ShouldResemble, []int{1})
					So(triangle[1], ShouldResemble, []int{1, 1})
				})
			})

			Convey("When rows is 5", func() {
				rows := 5
				triangle, err := light.PascalTriangle(rows)

				Convey("Triangle should have 5 rows with correct elements", func() {
					So(err, ShouldBeNil)
				Multiplier(triangle, rows)
				})
			})
		})
	}

	func Multiplier(triangle [][]int, rows int) {
		So(triangle, ShouldHaveLength, rows)
		So(triangle[0], ShouldHaveLength, 1)
		So(triangle[0][0], ShouldEqual, 1)
		So(triangle[rows-1], ShouldHaveLength, rows)

		for i := 1; i < rows; i++ {
			So(triangle[i], ShouldHaveLength, i+1)
			So(triangle[i][0], ShouldEqual, 1)
			So(triangle[i][i], ShouldEqual, 1)
		}
	}
	```
2024/06/19 10:17:05 $ go mod tidy
go: finding module for package github.com/golang/mock/gomock
go: downloading github.com/golang/mock v1.6.0
go: found github.com/golang/mock/gomock in github.com/golang/mock v1.6.0
2024/06/19 10:17:05 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle

DONE 0 tests, 6 errors in 0.271s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:17:05 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:17:19 Model "openrouter/cohere/command-r-plus" responded (13517 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestExtractDigits(t *testing.T) {
		testCases := []struct {
			name     string
			input    string
			expected string
			wantErr  bool
		}{
			{
				name:     "Valid phone number",
				input:    "123-45-6789",
				expected: "123456789",
				wantErr:  false,
			},
			{
				name:     "Invalid punctuations",
				input:    "123-@4567",
				expected: "",
				wantErr:  true,
			},
			{
				name:     "Letters not permitted",
				input:    "123abc456",
				expected: "",
				wantErr:  true,
			},
			{
				name:     "Valid number with spaces and dots",
				input:    "555. 1234",
				expected: "5551234",
				wantErr:  false,
			},
			{
				name:     "Parentheses and plus sign",
				input:    "(555) +444",
				expected: "555444",
				wantErr:  false,
			},
		}

		for _, tc := range testCases {
			t.Run(tc.name, func(t *testing.T) {
				result, err := extractDigits(tc.input)
				if tc.wantErr {
					assert.Error(t, err)
				} else {
					assert.NoError(t, err)
					assert.Equal(t, tc.expected, result)
				}
			})
		}
	}
	```
2024/06/19 10:17:19 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:17:19 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:50:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:50:19: undefined: extractDigits

DONE 0 tests, 1 error in 0.190s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:17:20 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:17:25 Model "openrouter/cohere/command-r-plus" responded (5156 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-name/light"
	)

	func TestSimpleIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case i == 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Case i != 1",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleIfElse(tt.args.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:17:25 $ go mod tidy
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:17:27 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:17:31 Model "openrouter/cohere/command-r-plus" responded (3921 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/project/light"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"Case 1", 1, 0},
			{"Default Case", 2, 1},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:17:31 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:17:31 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:17:39 Model "openrouter/cohere/command-r-plus" responded (7456 ms) with:
	```golang
	package light_test

	import (
		. "light"
		"testing"
	)

	func TestIsSorted(t *testing.T) {
		tests := []struct {
			name string
			a    []int
			want bool
		}{
			{
				name: "empty slice",
				a:    []int{},
				want: true,
			},
			{
				name: "single element slice",
				a:    []int{1},
				want: true,
			},
			{
				name: "sorted slice",
				a:    []int{1, 2, 3},
				want: true,
			},
			{
				name: "unsorted slice",
				a:    []int{2, 1, 3},
				want: false,
			},
			{
				name: "reverse sorted slice",
				a:    []int{3, 2, 1},
				want: false,
			},
			{
				name: "slice with duplicate elements",
				a:    []int{1, 2, 2, 3},
				want: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := IsSorted(tt.a); got != tt.want {
					t.Errorf("isSorted() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:17:39 $ go mod tidy
2024/06/19 10:17:39 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted

DONE 0 tests, 2 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:17:39 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:17:53 Model "openrouter/cohere/command-r-plus" responded (13412 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		type args struct {
			x []int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case 1: First element is 123",
				args: args{
					x: []int{123, 456},
				},
				want: 123,
			},
			{
				name: "Case 2: First element is not 123",
				args: args{
					x: []int{456, 123},
				},
				want: 3,
			},
			{
				name: "Case 3: Empty slice",
				args: args{
					x: []int{},
				},
				want: 3,
			},
			{
				name: "Case 4: Nil slice",
				args: args{
					x: nil,
				},
				want: 3,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.TypeArrayAccess(tt.args.x); got != tt.want {
					t.Errorf("TypeArrayAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:17:53 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:17:53 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:17:59 Model "openrouter/cohere/command-r-plus" responded (5599 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name string
			arg  []int
			want int
		}{
			{
				name: "Case 1",
				arg:  []int{0, 8},
				want: 2,
			},
			{
				name: "Case 2",
				arg:  []int{0, 9},
				want: 1,
			},
			{
				name: "Case 3",
				arg:  []int{1, 8},
				want: 1,
			},
			{
				name: "Case 4",
				arg:  []int{10, 8},
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.arg); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:17:59 $ go mod tidy
2024/06/19 10:17:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
=== RUN   TestTypeArrayConsecutiveAccess/Case_4
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 5 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:00 Executes tests with 3 coverage objects
2024/06/19 10:18:00 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:18:08 Model "openrouter/cohere/command-r-plus" responded (8122 ms) with:
	```golang
	package light_test

	import (
		. "light"
		"testing"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		testCases := []struct {
			name     string
			input    [][]int
			expected int
		}{
			{
				name:     "2x2 array",
				input:    [][]int{{1, 2}, {3, 4}},
				expected: 2,
			},
			{
				name:     "2x1 array",
				input:    [][]int{{1}, {2}},
				expected: 1,
			},
			{
				name:     "empty array",
				input:    [][]int{},
				expected: 0,
			},
			{
				name:     "nil array",
				input:    nil,
				expected: 0,
			},
		}

		for _, testCase := range testCases {
			t.Run(testCase.name, func(t *testing.T) {
				result := TypeArrayMultidimensionalArrayLength(testCase.input)
				if result != testCase.expected {
					t.Errorf("Expected %d, but got %d", testCase.expected, result)
				}
			})
		}
	}
	```
2024/06/19 10:18:08 $ go mod tidy
2024/06/19 10:18:08 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:18:08 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:18:18 Model "openrouter/cohere/command-r-plus" responded (9618 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/package/light"
	)

	func TestValidDate(t *testing.T) {
		type args struct {
			day   int
			month int
			year  int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Valid date",
				args: args{
					day:   31,
					month: 12,
					year:  2020,
				},
				want: true,
			},
			{
				name: "Invalid day",
				args: args{
					day:   32,
					month: 12,
					year:  2020,
				},
				want: false,
			},
			{
				name: "Invalid month",
				args: args{
					day:   31,
					month: 13,
					year:  2020,
				},
				want: false,
			},
			{
				name: "Invalid year",
				args: args{
					day:   31,
					month: 12,
					year:  1582,
				},
				want: false,
			},
			{
				name: "Leap year",
				args: args{
					day:   29,
					month: 2,
					year:  2020,
				},
				want: true,
			},
			{
				name: "Non-leap year",
				args: args{
					day:   29,
					month: 2,
					year:  2021,
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ValidDate(tt.args.day, tt.args.month, tt.args.year); got != tt.want {
					t.Errorf("ValidDate() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:18:18 $ go mod tidy
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:18:19 Evaluated model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light": encountered 22 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors

DONE 0 tests, 11 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:11:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:12:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:13:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:14:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:15:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:19:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:20:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:21:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:22:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: undefined: hasBalancedBrackets
./balancedBrackets_test.go:23:7: too many errors

DONE 0 tests, 11 errors in 0.162s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
go: finding module for package example.com/problem-solving/strong-light
go: light tested by
	light.test imports
	example.com/problem-solving/strong-light: cannot find module providing package example.com/problem-solving/strong-light: unrecognized import path "example.com/problem-solving/strong-light": reading https://example.com/problem-solving/strong-light?go-get=1: 500 Internal Server Error

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/problem-solving/strong-light
go: light tested by
	light.test imports
	example.com/problem-solving/strong-light: cannot find module providing package example.com/problem-solving/strong-light: unrecognized import path "example.com/problem-solving/strong-light": reading https://example.com/problem-solving/strong-light?go-get=1: 500 Internal Server Error

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

cascadingIfElse.go exit status 1
go: finding module for package github.com/your-repository/package-light
go: light tested by
	light.test imports
	github.com/your-repository/package-light: cannot find module providing package github.com/your-repository/package-light: module github.com/your-repository/package-light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/150fbdaa4dd7baf4a052bcdefe78ab9f52ca24dee63a2ca5b776feab303d4b18: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-repository/package-light
go: light tested by
	light.test imports
	github.com/your-repository/package-light: cannot find module providing package github.com/your-repository/package-light: module github.com/your-repository/package-light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/150fbdaa4dd7baf4a052bcdefe78ab9f52ca24dee63a2ca5b776feab303d4b18: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

collatzCalculator.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

conditionsAnd.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

equilibriumIndices.go exit status 1
# light_test [light.test]
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop

DONE 0 tests, 4 errors in 0.212s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./forLoop_test.go:11:10: undefined: forLoop
./forLoop_test.go:17:10: undefined: forLoop
./forLoop_test.go:23:10: undefined: forLoop
./forLoop_test.go:29:10: undefined: forLoop

DONE 0 tests, 4 errors in 0.212s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

forLoop.go exit status 1
# light
WARN jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)

DONE 0 tests, 1 error in 0.092s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light
WARN jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)
invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
jacobiSymbol_test.go:10:2: package path/to/package/light is not in std (/home/ubuntu/.eval-dev-quality/go/src/path/to/package/light)

DONE 0 tests, 1 error in 0.092s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 6 errors in 0.157s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:14:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:20:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:23:12: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:26:12: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 6 errors in 0.157s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
go: finding module for package github.com/golang/example/knapsack
go: light tested by
	light.test imports
	github.com/golang/example/knapsack: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/knapsack

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang/example/knapsack
go: light tested by
	light.test imports
	github.com/golang/example/knapsack: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/knapsack

knapsack.go exit status 1
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

largestProperDivisor.go exit status 1
# light
magicSquareOdd_test.go:34:57: missing ',' in argument list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
magicSquareOdd_test.go:34:57: missing ',' in argument list

DONE 0 tests, 1 error in 0.046s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light
magicSquareOdd_test.go:34:57: missing ',' in argument list
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
magicSquareOdd_test.go:34:57: missing ',' in argument list

DONE 0 tests, 1 error in 0.046s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

magicSquareOdd.go exit status 1
go: finding module for package github.com/golang/Assert/v2
go: light tested by
	light.test imports
	github.com/golang/Assert/v2: cannot find module providing package github.com/golang/Assert/v2: module github.com/golang/Assert/v2: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/a6df46d11a201a51119897256d235bda86a4c97d255b5ef520dfc4a4bc610544: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang/Assert/v2
go: light tested by
	light.test imports
	github.com/golang/Assert/v2: cannot find module providing package github.com/golang/Assert/v2: module github.com/golang/Assert/v2: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/a6df46d11a201a51119897256d235bda86a4c97d255b5ef520dfc4a4bc610544: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

matchBytes.go exit status 1
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle

DONE 0 tests, 6 errors in 0.271s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:16:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:27:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:37:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:49:27: undefined: light.PascalTriangle
./pascalsTriangle_test.go:61:27: undefined: light.PascalTriangle

DONE 0 tests, 6 errors in 0.271s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:50:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:50:19: undefined: extractDigits

DONE 0 tests, 1 error in 0.190s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:50:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:50:19: undefined: extractDigits

DONE 0 tests, 1 error in 0.190s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleIfElse.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleSwitchWithReturn.go exit status 1
# light_test [light.test]
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted

DONE 0 tests, 2 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./sort_test.go:4:2: "light" imported and not used
./sort_test.go:48:14: undefined: IsSorted

DONE 0 tests, 2 errors in 0.132s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

sort.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

typeArrayAccess.go exit status 1
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
=== RUN   TestTypeArrayConsecutiveAccess/Case_4
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 5 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/Case_1
=== RUN   TestTypeArrayConsecutiveAccess/Case_2
=== RUN   TestTypeArrayConsecutiveAccess/Case_3
=== RUN   TestTypeArrayConsecutiveAccess/Case_4
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
--- FAIL: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_1 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/Case_3 (0.00s)
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
FAIL
coverage: 2.8% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestTypeArrayConsecutiveAccess/Case_4 (0.00s)
    typeArrayConsecutiveAccess_test.go:36: typeArrayConsecutiveAccess() = 1, want 0
    --- FAIL: TestTypeArrayConsecutiveAccess/Case_4 (0.00s)

=== FAIL: . TestTypeArrayConsecutiveAccess (0.00s)

DONE 5 tests, 2 failures in 0.346s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:4:2: "light" imported and not used
./typeArrayMultidimensionalArrayLength_test.go:38:14: undefined: TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.134s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayMultidimensionalArrayLength.go exit status 1
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

validateDate.go]
2024/06/19 10:24:38 Evaluating model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:24:38 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:24:45 Model "openrouter/cohere/command-r-plus" responded (6588 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		Convey("hasBalancedBrackets tests", t, func() {
			Convey("Test empty input", func() {
				So(light.HasBalancedBrackets(""), ShouldBeTrue)
			})
			Convey("Test simple balanced brackets", func() {
				So(light.HasBalancedBrackets("[]"), ShouldBeTrue)
			})
			Convey("Test nested balanced brackets", func() {
				So(light.HasBalancedBrackets("[[[]]]"), ShouldBeTrue)
			})
			Convey("Test unbalanced brackets", func() {
				So(light.HasBalancedBrackets("[[]]"), ShouldBeFalse)
			})
			Convey("Test non-bracket characters", func() {
				So(light.HasBalancedBrackets("[]abc[]"), ShouldBeFalse)
			})
			Convey("Test closing bracket before opening", func() {
				So(light.HasBalancedBrackets("]"), ShouldBeFalse)
				So(light.HasBalancedBrackets("]]]]]]"), ShouldBeFalse)
			})
		})
	}
	```
2024/06/19 10:24:45 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:24:45 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets

DONE 0 tests, 8 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:24:45 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:24:58 Model "openrouter/cohere/command-r-plus" responded (12835 ms) with:
	```golang
	package light_test

	import (
		. "testing"
		"github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestBinarySearch(t *T) {
		Convey("BinarySearch tests", t, func() {
			var a []int
			var x int
			var expected int

			a = []int{1, 3, 5, 7, 9}
			x = 3
			expected = 1
			Convey("Should return correct index for a sorted array", func() {
				actual := light.BinarySearch(a, x)
				So(actual, ShouldEqual, expected)
			})

			a = []int{1, 3, 5, 7, 9}
			x = 6
			expected = -1
			Convey("Should return -1 for an unsorted array", func() {
				actual := light.BinarySearch(a, x)
				So(actual, ShouldEqual, expected)
			})

			a = []int{}
			x = 6
			expected = -1
			Convey("Should return -1 for an empty array", func() {
				actual := light.BinarySearch(a, x)
				So(actual, ShouldEqual, expected)
			})

			a = []int{1}
			x = 1
			expected = 0
			Convey("Should return correct index for a single element array", func() {
				actual := light.BinarySearch(a, x)
				So(actual, ShouldEqual, expected)
			})

			a = []int{1, 2, 2, 2, 3}
			x = 2
			expected = 1
			Convey("Should return the first occurrence of the target value", func() {
				actual := light.BinarySearch(a, x)
				So(actual, ShouldEqual, expected)
			})
		})
	}
	```
2024/06/19 10:24:58 $ go mod tidy
2024/06/19 10:24:58 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors

DONE 0 tests, 11 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:24:58 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:25:06 Model "openrouter/cohere/command-r-plus" responded (8213 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name       string
			x, y, want int
		}{
			{
				name: "Both conditions not met",
				x:    15,
				y:    10,
				want: 25,
			},
			{
				name: "First condition met",
				x:    5,
				y:    10,
				want: 0,
			},
			{
				name: "Second condition met",
				x:    15,
				y:    25,
				want: 35,
			},
			{
				name: "Both conditions met",
				x:    5,
				y:    25,
				want: 0,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing. T) {
				if got := light.callLoopConditionsOftenEnough(test.x, test.y); got != test.want {
					t.Errorf("callLoopConditionsOftenEnough(%d, %d) = %d, want %d", test.x, test.y, got, test.want)
				}
			})
		}
	}
	```
2024/06/19 10:25:06 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:25:07 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:25:12 Model "openrouter/cohere/command-r-plus" responded (5129 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "Case i = 1",
				i:    1,
				want: 2,
			},
			{
				name: "Case i = 3",
				i:    3,
				want: 4,
			},
			{
				name: "Default Case",
				i:    2,
				want: 5,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.CascadingIfElse(tt.i); got != tt.want {
					t.Errorf("cascadingIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:25:12 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:25:12 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:25:21 Model "openrouter/cohere/command-r-plus" responded (8756 ms) with:
	```golang
	package light

	import "testing"

	func TestComputeStepCount(t *testing.T) {
		type args struct {
			start int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "PositiveEvenNumber",
				args: args{
					start: 4,
				},
				want:    2,
				wantErr: false,
			},
			{
				name: "PositiveOddNumber",
				args: args{
					start: 7,
				},
				want:    17,
				wantErr: false,
			},
			{
				name: "Zero",
				args: args{
					start: 0,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "NegativeNumber",
				args: args{
					start: -3,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "One",
				args: args{
					start: 1,
				},
				want:    0,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := computeStepCount(tt.args.start)
				if (err != nil) != tt.wantErr {
					t.Errorf("computeStepCount() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("computeStepCount() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:25:21 $ go mod tidy
2024/06/19 10:25:21 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/PositiveEvenNumber
=== RUN   TestComputeStepCount/PositiveOddNumber
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
=== RUN   TestComputeStepCount/Zero
=== RUN   TestComputeStepCount/NegativeNumber
=== RUN   TestComputeStepCount/One
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/PositiveEvenNumber (0.00s)
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)
    --- PASS: TestComputeStepCount/Zero (0.00s)
    --- PASS: TestComputeStepCount/NegativeNumber (0.00s)
    --- PASS: TestComputeStepCount/One (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/PositiveOddNumber (0.00s)
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 2 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:25:22 Executes tests with 6 coverage objects
2024/06/19 10:25:22 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:25:29 Model "openrouter/cohere/command-r-plus" responded (7156 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-repo/light"
	)

	func TestConditionsAnd(t *testing.T) {
		type args struct {
			x rune
			y rune
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "AB characters",
				args: args{
					x: 'A',
					y: 'B',
				},
				want: true,
			},
			{
				name: "AA characters",
				args: args{
					x: 'A',
					y: 'A',
				},
				want: false,
			},
			{
				name: "BB characters",
				args: args{
					x: 'B',
					y: 'B',
				},
				want: false,
			},
			{
				name: "Random characters",
				args: args{
					x: 'C',
					y: 'D',
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ConditionsAnd(tt.args.x, tt.args.y); got != tt.want {
					t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:25:29 $ go mod tidy
go: finding module for package github.com/your-repo/light
go: light tested by
	light.test imports
	github.com/your-repo/light: cannot find module providing package github.com/your-repo/light: module github.com/your-repo/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/710e642ab3f137e021bca28cf51eda348adcb1d52f2b23524c2adc19d8757054: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:25:31 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:25:36 Model "openrouter/cohere/command-r-plus" responded (5006 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"light"
	)

	func EquilibriumIndices(sequence []int) string {
		return light.EquilibriumIndices(sequence)
	}

	func TestEquilibriumIndices(t *testing.T) {
		Convey("EquilibriumIndices should return correct indices", t, func() {
			So(EquilibriumIndices([]int{}), ShouldEqual, "")
			So(EquilibriumIndices([]int{1}), ShouldEqual, "")
			So(EquilibriumIndices([]int{1, 1}), ShouldEqual, "0;")
			So(EquilibriumIndices([]int{-7, 1, -4, 2, 1}), ShouldEqual, "1;3;")
			So(EquilibriumIndices([]int{1, -1, -1, 1}), ShouldEqual, "0;2;")
		})
	}
	```
2024/06/19 10:25:36 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:25:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:25:36 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:25:40 Model "openrouter/cohere/command-r-plus" responded (3743 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-name/light"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			input    int
			expected int
		}{
			{0, 0},
			{1, 1},
			{2, 3},
			{3, 6},
			{4, 10},
		}

		for _, test := range tests {
			actual := light.ForLoop(test.input)
			if actual != test.expected {
				t.Errorf("Expected %d, but got %d for input %d", test.expected, actual, test.input)
			}
		}
	}
	```
2024/06/19 10:25:40 $ go mod tidy
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:25:41 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:25:54 Model "openrouter/cohere/command-r-plus" responded (12799 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/stretchr/testify/assert"
	)

	func TestJacobiSymbol(t *testing.T) {
	    type args struct {
	        k uint64
	        n uint64
	    }
	    type testData struct {
	        args    args
	        want    int
	        wantErr bool
	    }

	    tests := []testData{
	        {args{1, 7}, 1, false},
	        {args{2, 7}, -1, false},
	        {args{3, 7}, -1, false},
	        {args{4, 7}, 1, false},
	        {args{5, 7}, 1, false},
	        {args{6, 7}, -1, false},
	        {args{7, 7}, 0, true},
	        {args{8, 7}, 0, true},
	        {args{9, 7}, 1, false},
	        {args{10, 7}, -1, false},
	        {args{3, 1}, 0, true},
	        {args{5, 4}, 0, true},
	        {args{0, 7}, 0, true},
	        {args{7, 2}, 0, true},
	        {args{1, 1}, 0, true},
	        {args{5, 239}, 1, false},
	    }
	    for _, tt := range tests {
	        got, err := jacobiSymbol(tt.args.k, tt.args.n)
	        if (err != nil) != tt.wantErr {
	            t.Errorf("jacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
	            continue
	        }
	        if got != tt.want {
	            t.Errorf("jacobiSymbol() = %v, want %v", got, tt.want)
	        }
	    }
	}
	```
2024/06/19 10:25:54 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:25:54 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol

DONE 0 tests, 2 errors in 0.170s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:25:54 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:26:02 Model "openrouter/cohere/command-r-plus" responded (7809 ms) with:
	```golang
	package light_test

	import (
		"reflect"
		"testing"

		"github.com/CuriosityMusic/mathsamplers/light"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		tests := []struct {
			name string
			want []int
		}{
			{
				name: "Initial values",
				want: []int{1, 1},
			},
			{
				name: "First few values",
				want: []int{1, 1, 3, 1, 7, 1, 5, 3, 13, 1},
			},
			{
				name: "Limit 10",
				want: []int{1, 1, 3, 1, 7, 1, 5, 3, 13, 1, 29},
			},
			{
				name: "Limit 20",
				want: []int{1, 1, 3, 1, 7, 1, 5, 3, 13, 1, 29, 1, 61, 1, 43, 3, 179, 1, 133, 5, 443},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.InitialiseKlarnerRadoSequence(tt.want[len(tt.want)-1]); !reflect.DeepEqual(got, tt.want) {
					t.Errorf("initialiseKlarnerRadoSequence() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:26:02 $ go mod tidy
go: finding module for package github.com/CuriosityMusic/mathsamplers/light
go: light tested by
	light.test imports
	github.com/CuriosityMusic/mathsamplers/light: cannot find module providing package github.com/CuriosityMusic/mathsamplers/light: module github.com/CuriosityMusic/mathsamplers/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3537b0c82b3885ea336708fbcc4b84a6bb0a865c7666b56a619a2d96d2d5a8d3: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:26:04 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:26:13 Model "openrouter/cohere/command-r-plus" responded (9122 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/userName/projectName/light"
	)

	func TestMaximumValue(t *testing.T) {
	    type args struct {
	        maxWeight int
	        items     []light.Item
	    }
	    tests := []struct {
	        name string
	        args args
	        want int
	    }{
	        {
	            name: "Empty items",
	            args: args{
	                maxWeight: 5,
	                items:     []light.Item{},
	            },
	            want: 0,
	        },
	        {
	            name: "Single item",
	            args: args{
	                maxWeight: 5,
	                items:     []light.Item{{weight: 2, value: 3}},
	            },
	            want: 3,
	        },
	        {
	            name: "Multiple items",
	            args: args{
	                maxWeight: 5,
	                items: []light.Item{
	                    {weight: 2, value: 4},
	                    {weight: 3, value: 5},
	                    {weight: 1, value: 2},
	                },
	            },
	            want: 7,
	        },
	        {
	            name: "Large knapsack",
	            args: args{
	                maxWeight: 10,
	                items: []light.Item{
	                    {weight: 3, value: 5},
	                    {weight: 4, value: 8},
	                    {weight: 2, value: 3},
	                },
	            },
	            want: 13,
	        },
	        {
	            name: "Items exceed max weight",
	            args: args{
	                maxWeight: 5,
	                items: []light.Item{
	                    {weight: 3, value: 1},
	                    {weight: 3, value: 3},
	                    {weight: 2, value: 2},
	                },
	            },
	            want: 4,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := light.MaximumValue(tt.args.maxWeight, tt.args.items); got != tt.want {
	                t.Errorf("maximumValue() = %v, want %v", got, tt.want)
	            }
	        })
	    }
	}
	```
2024/06/19 10:26:13 $ go mod tidy
go: finding module for package github.com/userName/projectName/light
go: light tested by
	light.test imports
	github.com/userName/projectName/light: cannot find module providing package github.com/userName/projectName/light: module github.com/userName/projectName/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/25a1b3a154c844848698158539dbfe755d3decc076c885fea51f8f6ed739f85e: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:26:15 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:26:26 Model "openrouter/cohere/command-r-plus" responded (10618 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		type args struct {
			aNumber int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name:    "Negative number",
				args:    args{aNumber: -3},
				want:    0,
				wantErr: true,
			},
			{
				name:    "Zero",
				args:    args{aNumber: 0},
				want:    0,
				wantErr: true,
			},
			{
				name:    "One",
				args:    args{aNumber: 1},
				want:    0,
				wantErr: false,
			},
			{
				name:    "Even number",
				args:    args{aNumber: 10},
				want:    5,
				wantErr: false,
			},
			{
				name:    "Odd number with small divisor",
				args:    args{aNumber: 9},
				want:    3,
				wantErr: false,
			},
			{
				name:    "Odd number with large divisor",
				args:    args{aNumber: 17},
				want:    1,
				wantErr: false,
			},
			{
				name:    "Perfect square number",
				args:    args{aNumber: 25},
				want:    5,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.LargestProperDivisor(tt.args.aNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("LargestProperDivisor() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("LargestProperDivisor() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:26:26 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:26:26 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:26:38 Model "openrouter/cohere/command-r-plus" responded (12011 ms) with:
	```golang
	package light

	import (
		"errors"
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			base    int
			want    [][]int
			wantErr error
		}{
			{
				base: 3,
				want: [][]int{
					{8, 1, 6},
					{3, 5, 7},
					{4, 9, 2},
				},
				wantErr: nil,
			},
			{
				base: 5,
				want: [][]int{
					{16, 2, 7, 18, 15},
					{17, 4, 14, 12, 9},
					{5, 13, 8, 6, 11},
					{3, 10, 19, 20, 1},
					{21, 25, 24, 22, 23},
				},
				wantErr: nil,
			},
			{
				base:    2,
				want:    nil,
				wantErr: errors.New("base must be odd and > 2"),
			},
			{
				base:    4,
				want:    nil,
				wantErr: errors.New("base must be odd and > 2"),
			},
		}

		for _, tt := range tests {
			got, err := magicSquareOdd(tt.base)
			if !errors.Is(err, tt.wantErr) {
				t.Errorf("magicSquareOdd(%d) error = %v, wantErr %v", tt.base, err, tt.wantErr)
				continue
			}

			if err != nil {
				continue
			}

			if len(got) != len(tt.want) {
				t.Errorf("magicSquareOdd(%d) length = %d, want %d", tt.base, len(got), len(tt.want))
				continue
			}

			for i := range got {
				if len(got[i]) != len(tt.want[i]) {
					t.Errorf("magicSquareOdd(%d)[%d] length = %d, want %d", tt.base, i, len(got[i]), len(tt.want[i]))
					continue
				}

				for j := range got[i] {
					if got[i][j] != tt.want[i][j] {
						t.Errorf("magicSquareOdd(%d)[%d][%d] = %d, want %d", tt.base, i, j, got[i][j], tt.want[i][j])
					}
				}
			}
		}
	}
	```
2024/06/19 10:26:38 $ go mod tidy
2024/06/19 10:26:38 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2

DONE 1 tests, 1 failure in 0.429s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:26:39 Executes tests with 8 coverage objects
2024/06/19 10:26:39 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:26:58 Model "openrouter/cohere/command-r-plus" responded (18985 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/YourRepository/light"
	)

	func TestMatchBytes(t *testing.T) {
		type args struct {
			s1 []byte
			s2 []byte
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Equal bytes",
				args: args{
					s1: []byte("Hello"),
					s2: []byte("Hello"),
				},
				want: true,
			},
			{
				name: "Equal bytes different case",
				args: args{
					s1: []byte("Hello"),
					s2: []byte("hELLO"),
				},
				want: true,
			},
			{
				name: "Different bytes",
				args: args{
					s1: []byte("Hello"),
					s2: []byte("World"),
				},
				want: false,
			},
			{
				name: "Bytes with non-ASCII characters",
				args: args{
					s1: []byte("Hëllô"),
					s2: []byte("hELLO"),
				},
			-	want: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.MatchBytes(tt.args.s1, tt.args.s2); got != tt.want {
					t.Errorf("matchBytes() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:26:58 $ go mod tidy
go: finding module for package github.com/YourRepository/light
go: light tested by
	light.test imports
	github.com/YourRepository/light: cannot find module providing package github.com/YourRepository/light: module github.com/YourRepository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/7777188657ac5b1be286b94a74d916a25cf6eff8249a46e7315d21ce09022ab5: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:27:00 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:27:17 Model "openrouter/cohere/command-r-plus" responded (17174 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang/mock/gomock"
		. "github.com/smartystreets/goconvey/convey"
		"github.com/stretchr/testify/assert"
	)

	func TestPascalTriangle(t *testing.T) {
		Convey("Pascal's Triangle", t, func() {
			Convey("When the number of rows is 0", func() {
				rows := 0
				triangle, err := pascalsTriangle(rows)

				Convey("Should return an empty triangle and no error", func() {
					So(triangle, assert.ShouldHaveSameTypeAs, [][]int{})
					So(err, ShouldBeNil)
				})
			})

			Convey("When the number of rows is positive", func() {
				rows := 5
				triangle, err := pascalsTriangle(rows)

				Convey("Should return the correct Pascal's triangle and no error", func() {
					expectedTriangle := [][]int{{}, {1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}}
					So(triangle, ShouldResemble, expectedTriangle)
					So(err, ShouldBeNil)
				})
			})

			Convey("When the number of rows is negative", func() {
				rows := -1
				triangle, err := pascalsTriangle(rows)

				Convey("Should return nil triangle and an error", func() {
					So(triangle, ShouldBeNil)
					So(err, ShouldNotBeNil)
					So(err.Error(), ShouldEqual, "Rows can't be negative!")
				})
			})
		})
	}
	```
2024/06/19 10:27:17 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: finding module for package github.com/smartystreets/goconvey/convey
go: finding module for package github.com/golang/mock/gomock
go: found github.com/golang/mock/gomock in github.com/golang/mock v1.6.0
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:27:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle

DONE 0 tests, 5 errors in 0.177s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:27:17 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:27:28 Model "openrouter/cohere/command-r-plus" responded (10881 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/shopspring/decimal"
		"github.com/stretchr/testify/assert"
	)

	func TestExtractDigits(t *testing.T) {
		testCases := []struct {
			name        string
			input       string
			expected    string
			expectedErr error
		}{
			{
				name:        "Valid input with punctuations",
				input:       "123-456-7890",
				expected:    "1234567890",
				expectedErr: nil,
			},
			{
				name:        "Invalid input with letters",
				input:       "123-abc-7890",
				expected:    "",
				expectedErr: errors.New("letters not permitted"),
			},
			{
				name:        "Invalid input with punctuations",
				input:       "123-@#$-7890",
				expected:    "",
				expectedErr: errors.New("punctuations not permitted"),
			},
			{
				name:        "Valid input with spaces and dots",
				input:       "123.456.7890",
				expected:    "1234567890",
				expectedErr: nil,
			},
			{
				name:        "Valid input with parentheses and hyphens",
				input:       "(123)-456-7890",
				expected:    "1234567890",
				expectedErr: nil,
			},
			{
				name:        "Empty input",
				input:       "",
				expected:    "",
				expectedErr: nil,
			},
			{
				name:        "Input with plus sign",
				input:       "+1 (234) 567-8901",
				expected:    "12345678901",
				expectedErr: nil,
			},
		}

		for _, testCase := range testCases {
			t.Run(testCase.name, func(t *testing.T) {
				actual, err := extractDigits(testCase.input)
				assert.Equal(t, testCase.expected, actual)
				assert.Equal(t, testCase.expectedErr, err)
			})
		}
	}
	```
2024/06/19 10:27:28 $ go mod tidy
go: finding module for package github.com/shopspring/decimal
go: downloading github.com/shopspring/decimal v1.4.0
go: found github.com/shopspring/decimal in github.com/shopspring/decimal v1.4.0
2024/06/19 10:27:28 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits

DONE 0 tests, 4 errors in 0.556s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:27:29 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:27:32 Model "openrouter/cohere/command-r-plus" responded (3136 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleIfElse(t *testing.T) {
		tests := []struct {
			input  int
			expected int
		}{
			{1, 0},
			{2, 1},
			{0, 1},
			{-1, 1},
			{10, 1},
		}

		for _, test := range tests {
			actual := simpleIfElse(test.input)
			if actual != test.expected {
				t.Errorf("Input: %d, Expected: %d, Actual: %d\n", test.input, test.expected, actual)
			}
		}
	}
	```
2024/06/19 10:27:32 $ go mod tidy
2024/06/19 10:27:32 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestSimpleIfElse
--- PASS: TestSimpleIfElse (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.005s	coverage: 1.4% of statements

DONE 1 tests in 0.351s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:27:33 Executes tests with 2 coverage objects
2024/06/19 10:27:33 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:27:42 Model "openrouter/cohere/command-r-plus" responded (9401 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/package/light"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Default case",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleSwitchWithReturn(tt.args.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:27:42 $ go mod tidy
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:27:43 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:27:59 Model "openrouter/cohere/command-r-plus" responded (16441 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-name/light"
	)

	func TestIsSorted(t *testing.T) {
		type args struct {
			a []int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Empty slice",
				args: args{
					a: []int{},
				},
				want: true,
			},
			{
				name: "Single element slice",
				args: args{
					a: []int{1},
				},
				want: true,
			},
			{
				name: "Sorted slice",
				args: args{
					a: []int{1, 2, 3},
				},
				want: true,
			},
			{
				name: "Unsorted slice",
				args: args{
					a: []int{2, 1, 3},
				},
			ęp: false,
			},
			{
				name: "Reverse sorted slice",
				args: args{
					a: []int{3, 2, 1},
				},
				want: false,
			},
			{
				name: "Slice with duplicate elements",
				args: args{
					a: []int{1, 2, 2, 3},
				},
				want: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.IsSorted(tt.args.a); got != tt.want {
					t.Errorf("isSorted() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:27:59 $ go mod tidy
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:28:00 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:28:14 Model "openrouter/cohere/command-r-plus" responded (13868 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/problem-solving/ gó/light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name     string
			arg      []int
			want     int
			expected bool
		}{
			{
				name:     "Case 1",
				arg:      []int{123},
				want:     123,
				expected: true,
			},
			{
				name:     "Case 2",
				arg:      []int{456},
				want:     3,
				expected: true,
			},
			{
				name:     "Case 3",
				arg:      []int{},
				want:     3,
				expected: true,
			},
			{
				name:     "Case 4",
				arg:      []int{123, 456},
				want:     3,
				expected: true,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := light.TypeArrayAccess(tt.arg)
				if got != tt.want {
					t.Errorf("got %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:28:14 $ go mod tidy
go: light tested by
	light.test imports
	example.com/problem-solving/ gó/light: malformed import path "example.com/problem-solving/ gó/light": invalid char ' '
2024/06/19 10:28:14 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:28:23 Model "openrouter/cohere/command-r-plus" responded (8942 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		Convey("typeArrayConsecutiveAccess should return 2 for [0, 8]", t, func() {
			input := []int{0, 8}
			result := light.TypeArrayConsecutiveAccess(input)
			So(result, ShouldEqual, 2)
		})

		Convey("typeArrayConsecutiveAccess should return 1 for [0, 7]", t, func() {
			input := []int{0, 7}
			result := light.TypeArrayConsecutiveAccess(input)
			So(result, ShouldEqual, 1)
		})

		Convey("typeArrayConsecutiveAccess should return 0 for [1, 7]", t, func() {
			input := []int{1, 7}
			result := light.TypeArrayConsecutiveAccess(input)
			So(result, ShouldEqual, 0)
		})

		Convey("typeArrayConsecutiveAccess should return 1 for [0, 8, 0]", t, func() {
			input := []int{0, 8, 0}
			result := light.TypeArrayConsecutiveAccess(input)
			So(result, ShouldEqual, 1)
		})
	}
	```
2024/06/19 10:28:23 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:28:23 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess

DONE 0 tests, 5 errors in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:28:23 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:28:30 Model "openrouter/cohere/command-r-plus" responded (6799 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"

		"light"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    [][]int
			want int
		}{
			{
				name: "Two by two array",
				x:    [][]int{{1, 2}, {3, 4}},
				want: 2,
			},
			{
				name: "Two by one array",
				x:    [][]int{{1}, {2}},
				want: 2,
			},
			{
				name: "One by two array",
				x:    [][]int{{1, 2}},
				want: 1,
			},
			{
				name: "Empty array",
				x:    [][]int{},
				want: 0,
			},
			{
				name: "Nil array",
				x:    nil,
				want: 0,
			},
			{
				name: "Three dimensional array",
				x:    [][]int{{{1}, {2}}, {{3}, {4}}},
				want: 0,
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				got := light.TypeArrayMultidimensionalArrayLength(tc.x)
				assert.Equal(t, tc.want, got)
			})
		}
	}
	```
2024/06/19 10:28:30 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:28:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.172s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:28:31 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:29:10 Model "openrouter/cohere/command-r-plus" responded (39141 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/stretchr/testify/assert"
	)

	func TestValidDate(t *testing.T) {
	    assert := assert.New(t)

	    // Invalid year
	    assert.False(validDate(1, 1, 1582), "Year 1582 should be invalid")
	    assert.False(validDate(1, 1, 0), "Year 0 should be invalid")
	    assert.True(validDate(1, 1, 1583), "Year 1583 should be valid")

	    // Invalid month
	    assert.False(validDate(1, 0, 1583), "Month 0 should be invalid")
	    assert.False(validDate(1, 13, 1583), "Month 13 should be invalid")
	    assert.True(validDate(1, 1, 1583), "Month 1 should be valid")
	    assert.True(validDate(1, 12, 1583), "Month 12 should be valid")

	    // Invalid day
	    assert.False(validDate(0, 1, 1583), "Day 0 should be invalid")

	    // February - non-leap year
	    assert.False(validDate(29, 2, 1583), "Feb 29, 1583 should be invalid")
	    assert.True(validDate(28, 2, 1583), "Feb 28, 1583 should be valid")

	    // February - leap year
	    assert.True(validDate(29, 2, 1600), "Feb 29, 1600 should be valid")
	    assert.True(validDate(29, 2, 2000), "Feb 29, 2000 should be valid")
	    assert.False(validDate(29, 2, 1999), "Feb 29, 1999 should be invalid")

	    // 30-day months
	    assert.True(validDate(30, 4, 2000), "Apr 30, 2000 should be valid")
	    assert.True(validDate(30, 6, 2000), "Jun 30, 2000 should be valid")
	    assert.True(validDate(30, 9, 2000), "Sep 30, 2000 should be valid")
	    assert.True(validDate(30, 11, 2000), "Nov 30, 2000 should be valid")
	    assert.False(validDate(31, 4, 2000), "Apr 31, 2000 should be invalid")
	    assert.False(validDate(31, 6, 2000), "Jun 31, 2000 should be invalid")
	    assert.False(validDate(31, 9, 2000), "Sep 31, 2000 should be invalid")
	    assert.False(validDate(31, 11, 2000), "Nov 31, 2000 should be invalid")

	    // 31-day months
	    assert.True(validDate(31, 1, 2000), "Jan 31, 2000 should be valid")
	    assert.True(validDate(31, 3, 2000), "Mar 31, 2000 should be valid")
	    assert.True(validDate(31, 5, 2000), "May 31, 2000 should be valid")
	    assert.True(validDate(31, 7, 2000), "Jul 31, 2000 should be valid")
	    assert.True(validDate(31, 8, 2000), "Aug 31, 2000 should be valid")
	    assert.True(validDate(31, 10, 2000), "Oct 31, 2000 should be valid")
	    assert.True(validDate(31, 12, 2000), "Dec 31, 2000 should be valid")
	    assert.False(validDate(32, 1, 2000), "Jan 32, 2000 should be invalid")
	    assert.False(validDate(32, 3, 2000), "Mar 32, 2000 should be invalid")
	    assert.False(validDate(32, 5, 2000), "May 32, 2000 should be invalid")
	    assert.False(validDate(32, 7, 2000), "Jul 32, 2000 should be invalid")
	    assert.False(validDate(32, 8, 2000), "Aug 32, 2000 should be invalid")
	    assert.False(validDate(32, 10, 2000), "Oct 32, 2000 should be invalid")
	    assert.False(validDate(32, 12, 2000), "Dec 32, 2000 should be invalid")
	}
	```
2024/06/19 10:29:10 $ go mod tidy
2024/06/19 10:29:10 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors

DONE 0 tests, 11 errors in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:29:10 Evaluated model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light": encountered 22 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets

DONE 0 tests, 8 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:11:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:14:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:23:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:26:13: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:27:13: undefined: light.HasBalancedBrackets

DONE 0 tests, 8 errors in 0.122s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors

DONE 0 tests, 11 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:10:2: undefined: Convey
./binarySearch_test.go:18:3: undefined: Convey
./binarySearch_test.go:19:20: undefined: light.BinarySearch
./binarySearch_test.go:20:4: undefined: So
./binarySearch_test.go:20:15: undefined: ShouldEqual
./binarySearch_test.go:26:3: undefined: Convey
./binarySearch_test.go:27:20: undefined: light.BinarySearch
./binarySearch_test.go:28:4: undefined: So
./binarySearch_test.go:28:15: undefined: ShouldEqual
./binarySearch_test.go:34:3: undefined: Convey
./binarySearch_test.go:34:3: too many errors

DONE 0 tests, 11 errors in 0.138s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

cascadingIfElse.go exit status 1
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/PositiveEvenNumber
=== RUN   TestComputeStepCount/PositiveOddNumber
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
=== RUN   TestComputeStepCount/Zero
=== RUN   TestComputeStepCount/NegativeNumber
=== RUN   TestComputeStepCount/One
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/PositiveEvenNumber (0.00s)
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)
    --- PASS: TestComputeStepCount/Zero (0.00s)
    --- PASS: TestComputeStepCount/NegativeNumber (0.00s)
    --- PASS: TestComputeStepCount/One (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/PositiveOddNumber (0.00s)
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 2 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestComputeStepCount
=== RUN   TestComputeStepCount/PositiveEvenNumber
=== RUN   TestComputeStepCount/PositiveOddNumber
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
=== RUN   TestComputeStepCount/Zero
=== RUN   TestComputeStepCount/NegativeNumber
=== RUN   TestComputeStepCount/One
--- FAIL: TestComputeStepCount (0.00s)
    --- PASS: TestComputeStepCount/PositiveEvenNumber (0.00s)
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)
    --- PASS: TestComputeStepCount/Zero (0.00s)
    --- PASS: TestComputeStepCount/NegativeNumber (0.00s)
    --- PASS: TestComputeStepCount/One (0.00s)
FAIL
coverage: 5.2% of statements
FAIL	light	0.005s

=== Failed
=== FAIL: . TestComputeStepCount/PositiveOddNumber (0.00s)
    collatzCalculator_test.go:64: computeStepCount() = 16, want 17
    --- FAIL: TestComputeStepCount/PositiveOddNumber (0.00s)

=== FAIL: . TestComputeStepCount (0.00s)

DONE 6 tests, 2 failures in 0.330s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: finding module for package github.com/your-repo/light
go: light tested by
	light.test imports
	github.com/your-repo/light: cannot find module providing package github.com/your-repo/light: module github.com/your-repo/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/710e642ab3f137e021bca28cf51eda348adcb1d52f2b23524c2adc19d8757054: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-repo/light
go: light tested by
	light.test imports
	github.com/your-repo/light: cannot find module providing package github.com/your-repo/light: module github.com/your-repo/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/710e642ab3f137e021bca28cf51eda348adcb1d52f2b23524c2adc19d8757054: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

conditionsAnd.go exit status 1
# light_test [light.test]
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:9:15: undefined: light.EquilibriumIndices
./equilibriumIndices_test.go:12:32: undefined: testing

DONE 0 tests, 2 errors in 0.137s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

forLoop.go exit status 1
# light_test [light.test]
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol

DONE 0 tests, 2 errors in 0.170s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./jacobiSymbol_test.go:6:5: "github.com/stretchr/testify/assert" imported and not used
./jacobiSymbol_test.go:39:21: undefined: jacobiSymbol

DONE 0 tests, 2 errors in 0.170s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

jacobiSymbol.go exit status 1
go: finding module for package github.com/CuriosityMusic/mathsamplers/light
go: light tested by
	light.test imports
	github.com/CuriosityMusic/mathsamplers/light: cannot find module providing package github.com/CuriosityMusic/mathsamplers/light: module github.com/CuriosityMusic/mathsamplers/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3537b0c82b3885ea336708fbcc4b84a6bb0a865c7666b56a619a2d96d2d5a8d3: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/CuriosityMusic/mathsamplers/light
go: light tested by
	light.test imports
	github.com/CuriosityMusic/mathsamplers/light: cannot find module providing package github.com/CuriosityMusic/mathsamplers/light: module github.com/CuriosityMusic/mathsamplers/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3537b0c82b3885ea336708fbcc4b84a6bb0a865c7666b56a619a2d96d2d5a8d3: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

klarnerRadoSequence.go exit status 1
go: finding module for package github.com/userName/projectName/light
go: light tested by
	light.test imports
	github.com/userName/projectName/light: cannot find module providing package github.com/userName/projectName/light: module github.com/userName/projectName/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/25a1b3a154c844848698158539dbfe755d3decc076c885fea51f8f6ed739f85e: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/userName/projectName/light
go: light tested by
	light.test imports
	github.com/userName/projectName/light: cannot find module providing package github.com/userName/projectName/light: module github.com/userName/projectName/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/25a1b3a154c844848698158539dbfe755d3decc076c885fea51f8f6ed739f85e: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

knapsack.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

largestProperDivisor.go exit status 1
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2

DONE 1 tests, 1 failure in 0.429s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMagicSquareOdd
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2
--- FAIL: TestMagicSquareOdd (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.004s

=== Failed
=== FAIL: . TestMagicSquareOdd (0.00s)
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][0] = 17, want 16
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][1] = 24, want 2
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][2] = 1, want 7
    magicSquareOdd_test.go:70: magicSquareOdd(5)[0][3] = 8, want 18
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][0] = 23, want 17
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][1] = 5, want 4
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][2] = 7, want 14
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][3] = 14, want 12
    magicSquareOdd_test.go:70: magicSquareOdd(5)[1][4] = 16, want 9
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][0] = 4, want 5
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][1] = 6, want 13
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][2] = 13, want 8
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][3] = 20, want 6
    magicSquareOdd_test.go:70: magicSquareOdd(5)[2][4] = 22, want 11
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][0] = 10, want 3
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][1] = 12, want 10
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][3] = 21, want 20
    magicSquareOdd_test.go:70: magicSquareOdd(5)[3][4] = 3, want 1
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][0] = 11, want 21
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][1] = 18, want 25
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][2] = 25, want 24
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][3] = 2, want 22
    magicSquareOdd_test.go:70: magicSquareOdd(5)[4][4] = 9, want 23
    magicSquareOdd_test.go:49: magicSquareOdd(2) error = base must be odd and > 2, wantErr base must be odd and > 2
    magicSquareOdd_test.go:49: magicSquareOdd(4) error = base must be odd and > 2, wantErr base must be odd and > 2

DONE 1 tests, 1 failure in 0.429s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
go: finding module for package github.com/YourRepository/light
go: light tested by
	light.test imports
	github.com/YourRepository/light: cannot find module providing package github.com/YourRepository/light: module github.com/YourRepository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/7777188657ac5b1be286b94a74d916a25cf6eff8249a46e7315d21ce09022ab5: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/YourRepository/light
go: light tested by
	light.test imports
	github.com/YourRepository/light: cannot find module providing package github.com/YourRepository/light: module github.com/YourRepository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/7777188657ac5b1be286b94a74d916a25cf6eff8249a46e7315d21ce09022ab5: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

matchBytes.go exit status 1
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle

DONE 0 tests, 5 errors in 0.177s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./pascalsTriangle_test.go:6:2: "github.com/golang/mock/gomock" imported and not used
./pascalsTriangle_test.go:15:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:18:25: undefined: assert.ShouldHaveSameTypeAs
./pascalsTriangle_test.go:25:21: undefined: pascalsTriangle
./pascalsTriangle_test.go:36:21: undefined: pascalsTriangle

DONE 0 tests, 5 errors in 0.177s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

pascalsTriangle.go exit status 1
# light_test [light.test]
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits

DONE 0 tests, 4 errors in 0.556s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./phoneNumber_test.go:6:2: "github.com/shopspring/decimal" imported and not used
./phoneNumber_test.go:27:17: undefined: errors
./phoneNumber_test.go:33:17: undefined: errors
./phoneNumber_test.go:63:19: undefined: extractDigits

DONE 0 tests, 4 errors in 0.556s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

phoneNumber.go exit status 1
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleSwitchWithReturn.go exit status 1
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

sort.go exit status 1
go: light tested by
	light.test imports
	example.com/problem-solving/ gó/light: malformed import path "example.com/problem-solving/ gó/light": invalid char ' '

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: light tested by
	light.test imports
	example.com/problem-solving/ gó/light: malformed import path "example.com/problem-solving/ gó/light": invalid char ' '

typeArrayAccess.go exit status 1
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess

DONE 0 tests, 5 errors in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:8:40: undefined: testing
./typeArrayConsecutiveAccess_test.go:11:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:17:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:23:19: undefined: light.TypeArrayConsecutiveAccess
./typeArrayConsecutiveAccess_test.go:29:19: undefined: light.TypeArrayConsecutiveAccess

DONE 0 tests, 5 errors in 0.154s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.172s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayMultidimensionalArrayLength_test.go:44:19: invalid composite literal type int
./typeArrayMultidimensionalArrayLength_test.go:51:17: undefined: light.TypeArrayMultidimensionalArrayLength

DONE 0 tests, 2 errors in 0.172s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayMultidimensionalArrayLength.go exit status 1
# light_test [light.test]
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors

DONE 0 tests, 11 errors in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./validateDate_test.go:13:18: undefined: validDate
./validateDate_test.go:14:18: undefined: validDate
./validateDate_test.go:15:17: undefined: validDate
./validateDate_test.go:18:18: undefined: validDate
./validateDate_test.go:19:18: undefined: validDate
./validateDate_test.go:20:17: undefined: validDate
./validateDate_test.go:21:17: undefined: validDate
./validateDate_test.go:24:18: undefined: validDate
./validateDate_test.go:27:18: undefined: validDate
./validateDate_test.go:28:17: undefined: validDate
./validateDate_test.go:28:17: too many errors

DONE 0 tests, 11 errors in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
2024/06/19 10:37:39 Evaluating model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:37:39 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:37:44 Model "openrouter/cohere/command-r-plus" responded (4541 ms) with:
	```golang
	package light_test

	import (
	    "testing"
	    "github.com/stretchr/testify/assert"
	)

	func TestHasBalancedBrackets(t *testing.T) {
	    var tests = []struct {
	        input    string
	        expected bool
	    }{
	        {"", true},
	        {"[]", true},
	        {"[[]]", true},
	        {"[][]", true},
	        {"][", false},
	        {"][][]", false},
	        {"[", false},
	        {"]", false},
	        {"[[][]]", false},
	        {"abc", false},
	        {"[a]", false},
	        {"[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]", true},
	    }

	    for _, test := range tests {
	        actual := hasBalancedBrackets(test.input)
	        assert.Equal(t, test.expected, actual, "Input: %s", test.input)
	    }
	}
	```
2024/06/19 10:37:44 $ go mod tidy
2024/06/19 10:37:44 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.175s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:37:44 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:37:55 Model "openrouter/cohere/command-r-plus" responded (10882 ms) with:
	```golang
	package light_test

	import (
		. "light"
		"testing"
	)

	func TestBinarySearch(t *testing.T) {
		cases := []struct {
			name   string
			arr    []int
			target int
			want   int
		}{
			{
				name:   "Found",
				arr:    []int{1, 2, 3, 4, 5},
				target: 3,
				want:   2,
			},
			{
				name:   "Not Found",
				arr:    []int{1, 2, 3, 4, 5},
				target: 6,
				want:   -1,
			},
			{
				name:   "Single Element",
				arr:    []int{5},
				target: 5,
				want:   0,
			},
			{
				name:   "Empty Slice",
				arr:    []int{},
				target: 5,
				want:   -1,
			},
			{
				name:   "Multiple Occurrences",
				arr:    []int{1, 3, 3, 5, 7, 9},
				target: 3,
				want:   1,
			},
		}

		for _, tc := range cases {
			t.Run(tc.name, func(t *testing.T) {
				got := BinarySearch(tc.arr, tc.target)
				if got != tc.want {
					t.Errorf("BinarySearch(%v, %d) = %d, want %d", tc.arr, tc.target, got, tc.want)
				}
			})
		}
	}
	```
2024/06/19 10:37:55 $ go mod tidy
2024/06/19 10:37:55 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch

DONE 0 tests, 2 errors in 0.185s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:37:56 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:38:04 Model "openrouter/cohere/command-r-plus" responded (7980 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		tests := []struct {
			name string
			x    int
			y    int
			want int
		}{
			{
				name: "Invalid x value: below 10",
				x:    5,
				y:    10,
				want: 0,
			},
			{
				name: "Invalid x value: above 20",
				x:    25,
				y:    10,
				want: 0,
			},
			{
				name: "Valid x value: within range",
				x:    15,
				y:    5,
				want: 25,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.CallLoopConditionsOftenEnough(tt.x, tt.y); got != tt.want {
					t.Errorf("CallLoopConditionsOftenEnough(%v, %v) = %v, want %v", tt.x, tt.y, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:38:04 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:38:06 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:38:12 Model "openrouter/cohere/command-r-plus" responded (6044 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "Case i = 1",
				i:    1,
				want: 2,
			},
			{
				name: "Case i = 3",
				i:    3,
				want: 4,
			},
			{
				name: "Default Case",
				i:    2,
				want: 5,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.CascadingIfElse(tt.i); got != tt.want {
					t.Errorf("cascadingIfElse(%v) = %v, want %v", tt.i, got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:38:12 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:38:12 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:38:23 Model "openrouter/cohere/command-r-plus" responded (10688 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang/example/light"
	)

	func TestComputeStepCount(t *testing.T) {
		type args struct {
			start int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name:    "negative number",
				args:    args{start: -5},
				want:    0,
				wantErr: true,
			},
			{
				name:    "zero",
				args:    args{start: 0},
				want:    0,
				wantErr: true,
			},
			{
				name:    "one",
				args:    args{start: 1},
				want:    0,
				wantErr: false,
			},
			{
				name:    "simple even number",
				args:    args{start: 4},
				want:    2,
				wantErr: false,
			},
			{
				name:    "simple odd number",
				args:    args{start: 5},
				want:    5,
				wantErr: false,
			},
			{
				name:    "bigger even number",
				args:    args{start: 16},
				want:    15,
				wantErr: false,
			},
			{
				name:    "bigger odd number",
				args:    args{start: 17},
				want:    16,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ComputeStepCount(tt.args.start)
				if (err != nil) != tt.wantErr {
					t.Errorf("ComputeStepCount() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ComputeStepCount() got = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:38:23 $ go mod tidy
go: finding module for package github.com/golang/example/light
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light
2024/06/19 10:38:25 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:38:35 Model "openrouter/cohere/command-r-plus" responded (10101 ms) with:
	```golang
	package light

	import "testing"

	func TestConditionsAnd(t *testing.T) {
	    type args struct {
	        x rune
	        y rune
	    }
	    tests := []struct {
	        name string
	        args args
	        want bool
	    }{
	        {
	            name: "Should return true for 'A' and 'B'",
	            args: args{
	                x: 'A',
	                y: 'B',
	            },
	            want: true,
	        },
	        {
	            name: "Should return false for 'A' and 'C'",
	            args: args{
	                x: 'A',
	                y: 'C',
	            },
	            want: false,
	        },
	        {
	            nameichetta: "Should return false for 'D' and 'B'",
	            args: args{
	                x: 'D',
	                y: 'B',
	            },
	            want: false,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := conditionsAnd(tt.args.x, tt.args.y); got != tt.want {
	                t.Errorf("conditionsAnd() = %v, want %v", got, tt.want)
	            }
	        })
	    }
	}
	```
2024/06/19 10:38:35 $ go mod tidy
2024/06/19 10:38:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light [light.test]
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.158s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:38:35 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:38:41 Model "openrouter/cohere/command-r-plus" responded (5448 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/stretchr/testify/assert"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tests := []struct {
			name     string
			sequence []int
			want     string
		}{
			{
				name:     "No equilibrium index",
				sequence: []int{1, 2, 3},
				want:     "",
			},
			{
				name:     "Single equilibrium index",
				sequence: []int{1, 3, 5, 2, 2},
				want:     "3;",
			},
			{
				name:     "Multiple equilibrium indices",
				sequence: []int{3, 10, 6, 2, 1, 5},
				want:     "1;4;",
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := equilibriumIndices(tt.sequence)
				assert.Equal(t, tt.want, got)
			})
		}
	}
	```
2024/06/19 10:38:41 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
2024/06/19 10:38:41 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:38:43 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:38:55 Model "openrouter/cohere/command-r-plus" responded (11520 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/ampire/light"
	)

	func TestForLoop(t *testing.T) {
		tests := []struct {
			name string
			s    int
			want int
		}{
			{
				name: "Zero",
				s:    0,
				want: 0,
			},
			{
				name: "Positive",
				s:    10,
				want: 45,
			},
			{
				name: "Negative",
				s:    -10,
				want: 45,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ForLoop(tt.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:38:55 $ go mod tidy
go: finding module for package github.com/ampire/light
go: light tested by
	light.test imports
	github.com/ampire/light: cannot find module providing package github.com/ampire/light: module github.com/ampire/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e0d168b42bb583b9336b10ed37b8de57a7a48b83ea44660c53de0303dc637751: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:38:57 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:39:14 Model "openrouter/cohere/command-r-plus" responded (16932 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"testing"

		"example.com/problem-solving/gocowin/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		type args struct {
			k uint64
			n uint64
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Simple positive test case",
				args: args{
					k: 3,
					n: 9,
				},
				want:    -1,
				wantErr: false,
			},
			{
				name: "Invalid negative k",
				args: args{
					k: 31,
					n: 10,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Invalid even n",
				args: args{
					k: 3,
					n: 8,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Even k",
				args: args{
					k: 12,
					n: 21,
				},
				want:    -1,
				wantErr: false,
			},
			{
				name: "k > n",
				args: args{
					k: 99,
					n: 3,
				},
				want:    1,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.JacobiSymbol(tt.args.k, tt.args.n)
				if (err != nil) != tt.wantErr {
					t.Errorf("JacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("JacobiSymbol() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:39:14 $ go mod tidy
go: finding module for package example.com/problem-solving/gocowin/light
go: light tested by
	light.test imports
	example.com/problem-solving/gocowin/light: cannot find module providing package example.com/problem-solving/gocowin/light: unrecognized import path "example.com/problem-solving/gocowin/light": reading https://example.com/problem-solving/gocowin/light?go-get=1: 500 Internal Server Error
2024/06/19 10:39:16 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:39:40 Model "openrouter/cohere/command-r-plus" responded (24010 ms) with:
	```golang
	package light_test

	import (
		"math"
		"testing"

		"github.com/golang/mock/gomock"
		. "github.com/smartystreets/goconvey/convey"

		"github.com/your/project/light"
	)

	func TestInitializeKlarnerRadoSequence(t *testing.T) {
		Convey("Given the Klarner-Rado sequence calculation function", t, func() {
			Convey("When the limit is 0", func() {
				result := light.InitializeKlarnerRadoSequence(0)

				Convey("The function should return an empty sequence", func() {
					So(result, ShouldBeEmpty)
				})
			})

			Convey("When the limit is 1", func() {
				result := light.InitializeKlarnerRadoSequence(1)

				Convey("The function should return the sequence [1]", func() {
					So(result, ShouldResemble, []int{1})
				})
			})

			Convey("When the limit is 2", func() {
				result := light.InitializeKlarnerRadoSequence(2)

				Convey("The function should return the sequence [1, 1]", func() {
					So(result, ShouldResemble, []int{1, 1})
				})
			})

			Convey("When the limit is 3", func() {
				result := light.InitializeKlarnerRadoSequence(3)

				Convey("The function should return the sequence [1, 1, 3]", func() {
					So(result, ShouldResemble, []int{1, 1, 3})
				})
			})

			Convey("When the limit is 4", func() {
				result := light.InitializeKlarnerRadoSequence(4)

				Convey("The function should return the sequence [1, 1, 3, 1]", func() {
					So(result, ShouldResemble, []int{1, 1, 3, 1})
				})
			})

			Convey("When the limit is 5", func() {
				result := light.InitializeKlarnerRadoSequence(5)

				Convey("The function should return the sequence [1, 1, 3, 1, 7]", func() {
					So(result, ShouldResemble, []int{1, 1, 3, 1, 7})
				})
			})
		})
	}

	func TestInitializeKlarnerRadoSequenceWithMock(t *testing.T) {
		ctrl := gomock.NewController(t)
		defer ctrl.Finish()

		mockMath := NewMockMath(ctrl)

		Convey("Given a mock Math dependency", t, func() {
			Convey("When Min is mocked to return specific values", func() {
				mockMath.EXPECT().Min(gomock.Any(), gomock.Any()).Return(1, 2, 3, 4, 5, 6).Times(6)

				Convey("And the Klarner-Rado sequence is calculated", func() {
					light.Math = mockMath
					result := light.InitializeKlarnerRadoSequence(6)

					Convey("The function should return the sequence [1, 1, 3, 1, 7, 1]", func() {
						So(result, ShouldResemble, []int{1, 1, 3, 1, 7, 1})
					})
				})
			})
		})
	}
	```
2024/06/19 10:39:40 $ go mod tidy
go: finding module for package github.com/golang/mock/gomock
go: finding module for package github.com/smartystreets/goconvey/convey
go: finding module for package github.com/your/project/light
go: found github.com/golang/mock/gomock in github.com/golang/mock v1.6.0
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:39:42 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:39:53 Model "openrouter/cohere/command-r-plus" responded (10704 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/project/light"
	)

	func TestMaximumValue(t *testing.T) {
		tests := []struct {
			name           string
			maxWeight      int
			items          []light.Item
			expectedResult int
		}{
			{
				name:           "Empty items",
				maxWeight:      5,
				items:          []light.Item{},
				expectedResult: 0,
			},
			{
				name:           "Single item",
				maxWeight:      5,
				items:          []light.Item{{weight: 2, value: 6}},
				expectedResult: 6,
			},
			{
				name:           "Multiple items",
				maxWeight:      5,
				items:          []light.Item{{weight: 2, value: 6}, {weight: 2, value: 10}, {weight: 1, value: 12}},
				expectedResult: 22,
			},
			{
				name:           "Large weight items",
				maxWeight:      10,
				items:          []light.Item{{weight: 7, value: 13}, {weight: 4, value: 7}, {weight: 3, value: 8}},
				expectedResult: 21,
			},
			{
				name:           "Zero max weight",
				maxWeight:      0,
				items:          []light.Item{{weight: 2, value: 6}, {weight: 3, value: 9}, {weight: 1, value: 4}},
				expectedResult: 0,
			},
			{
				name:           "Negative max weight",
				maxWeight:      -5,
				items:          []light.Item{{weight: 3, value: 7}, {weight: 2, value: 3}, {weight: 1, value: 5}},
				expectedResult: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				result := light.MaximumValue(tt.maxWeight, tt.items)
				if result != tt.expectedResult {
					t.Errorf("Expected result: %d, Got: %d", tt.expectedResult, result)
				}
			})
		}
	}
	```
2024/06/19 10:39:53 $ go mod tidy
go: finding module for package github.com/your-org/project/light
go: light tested by
	light.test imports
	github.com/your-org/project/light: cannot find module providing package github.com/your-org/project/light: module github.com/your-org/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/6cff71ca64bb6a65572b233ec60d5f5ce3202db15ffeff0506da006de6d272fd: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:39:55 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:40:09 Model "openrouter/cohere/command-r-plus" responded (14004 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/project/light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		type args struct {
			aNumber int
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name:    "Invalid Argument - Negative Number",
				args:    args{aNumber: -5},
				want:    0,
				wantErr: true,
			},
			{
				name:    "Invalid Argument - Zero",
				args:    args{aNumber: 0},
				want:    0,
				wantErr: true,
			},
			{
				name:    "Even Number",
				args:    args{aNumber: 12},
				want:    6,
				wantErr: false,
			},
			{
				name:    "Odd Number with Proper Factors",
				args:    args{aNumber: 15},
				want:    5,
				wantErr: false,
			},
			{
				name:    "Odd Number - Prime",
				args:    args{aNumber: 23},
				want:    1,
				wantErr: false,
			},
			{
				name:    "Large Number with Proper Factors",
				args:    args{aNumber: 1001},
				want:    39,
				wantErr: false,
			},
			{
				name:    "Perfect Square",
				args:    args{aNumber: 16},
				want:    4,
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.LargestProperDivisor(tt.args.aNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("largestProperDivisor() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("largestProperDivisor() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:40:09 $ go mod tidy
go: finding module for package example.com/project/light
go: light tested by
	light.test imports
	example.com/project/light: cannot find module providing package example.com/project/light: unrecognized import path "example.com/project/light": reading https://example.com/project/light?go-get=1: 500 Internal Server Error
2024/06/19 10:40:11 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:40:34 Model "openrouter/cohere/command-r-plus" responded (22494 ms) with:
	```golang
	package light

	import (
		"testing"
	)

	func TestMagicSquareOdd(t *testing.T) {
		type args struct {
			base int
		}
		tests := []struct {
			name    string
			args    args
			want    [][]int
			wantErr bool
		}{
			{
				name: "Odd base",
				args: args{
					base: 5,
				},
				want: [][]int{
					{17, 24, 1, 8, 15},
					{23, 5, 7, 14, 16},
					{4, 6, 13, 20, 2},
					{10, 12, 19, 3, 9},
					{11, 18, 21, 22, 25},
				},
				wantErr: false,
			},
			{
				name: "Even base",
				args: args{
					base: 4,
				},
				want:    nil,
				wantErr: true,
			},
			{
				name: "Base less than 3",
				args: args{
					base: 2,
				},
				want:    nil,
				wantErr: true,
			},
			{
				name: "Base greater than 3",
				args: args{
					base: 7,
				},
				want: [][]int{
					{1, 8, 15, 22, 29, 6, 13},
					{30, 11, 18, 25, 4, 10, 17},
					{23, 2, 9, 16, 24, 31, 5},
					{7, 14, 20, 27, 3, 12, 26},
					{21, 28, 35, 32, 19, 8, 1},
					{34, 33, 29, 22, 15, 7, 12},
					{6, 13, 26, 18, 11, 24, 30},
				},
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := magicSquareOdd(tt.args.base)
				if (err != nil) != tt.wantErr {
					t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !tt.wantErr && !equal(got, tt.want) {
					t.Errorf("magicSquareOdd() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func equal(a, b [][]int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			for j := range a[i] {
				if a[i][j] != b[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/06/19 10:40:34 $ go mod tidy
2024/06/19 10:40:34 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/Odd_base
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
=== RUN   TestMagicSquareOdd/Even_base
=== RUN   TestMagicSquareOdd/Base_less_than_3
=== RUN   TestMagicSquareOdd/Base_greater_than_3
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
--- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)
    --- PASS: TestMagicSquareOdd/Even_base (0.00s)
    --- PASS: TestMagicSquareOdd/Base_less_than_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.012s

=== Failed
=== FAIL: . TestMagicSquareOdd/Odd_base (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)

=== FAIL: . TestMagicSquareOdd/Base_greater_than_3 (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 5 tests, 3 failures in 0.603s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:40:35 Executes tests with 8 coverage objects
2024/06/19 10:40:35 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:40:46 Model "openrouter/cohere/command-r-plus" responded (11521 ms) with:
	```golang
	package light
	
	import "testing"
	
	func TestMatchBytes(t *testing.T) {
		type args struct {
			s1 []byte
			s2 []byte
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "Matching strings",
				args: args{
					s1: []byte("abcdef"),
					s2: []byte("abcdef"),
				},
				want: true,
			},
			{
				name: "Not matching strings",
				args: args{
					s1: []byte("abcdef"),
					s2: []byte("abcef"),
				},
				want: false,
			},
			{
				name: "Matching with different cases",
				args: args{
					s1: []byte("abcdef"),
					s2: []byte("AbCdEf"),
				},
			 Provisioning...
				want: true,
			},
			{
				name: "Not matching due to out of range characters",
				args: args{
					s1: []byte("abcdef"),
					s2: []byte("abCDEFg"),
				},
				want: false,
			},
			{
				name: "Empty strings",
				args: args{
					s1: []byte(""),
					s2: []byte(""),
				},
				want: true,
			},
			{
				name: "Different lengths",
				args: args{
					s1: []byte("abcd"),
					s2: []byte("abcdef"),
				},
				want: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := matchBytes(tt.args.s1, tt.args.s2); got != tt.want {
					t.Errorf("matchBytes() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:40:46 $ go mod tidy
2024/06/19 10:40:46 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light
matchBytes_test.go:37:16: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:37:16: missing ',' in composite literal

DONE 0 tests, 1 error in 0.044s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:40:46 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:40:58 Model "openrouter/cohere/command-r-plus" responded (12046 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/psmarcin/clesiastes/light"
	)

	func TestPascalTriangle(t *testing.T) {
		type args struct {
			rows int
		}
		tests := []struct {
			name    string
			args    args
			want    [][]int
			wantErr bool
		}{
			{
				name: "Positive number of rows",
				args: args{
					rows: 5,
				},
				want: [][]int{
					{1},
					{1, 1},
					{1, 2, 1},
					{1, 3, 3, 1},
					{1, 4, 6, 4, 1},
				},
				wantErr: false,
			},
			{
				name: "Zero rows",
				args: args{
					rows: 0,
				},
				want:    nil,
				wantErr: false,
			},
			{
				name: "Negative number of rows",
				args: args{
					rows: -1,
				},
				want:    nil,
				wantErr: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.PascalTriangle(tt.args.rows)
				if (err != nil) != tt.wantErr {
					t.Errorf("PascalTriangle() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !compareSlices(got, tt.want) {
					t.Errorf("PascalTriangle() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func compareSlices(a, b [][]int) bool {
		if len(a) != len(b) {
			return false
		}
		for i := range a {
			if len(a[i]) != len(b[i]) {
				return false
			}
			for j := range a[i] {
				if a[i][j] != b[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/06/19 10:40:58 $ go mod tidy
go: finding module for package github.com/psmarcin/clesiastes/light
go: light tested by
	light.test imports
	github.com/psmarcin/clesiastes/light: cannot find module providing package github.com/psmarcin/clesiastes/light: module github.com/psmarcin/clesiastes/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4c3df2dc6ac8cc6fe450c42aceed23835eef0572a61f65b2a9adfc510166e2a9: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:41:01 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:41:21 Model "openrouter/cohere/command-r-plus" responded (20316 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/ ךמד/light"
	)

	func TestExtractDigits(t *testing.T) {
		type args struct {
			dirtyNumber string
		}
		tests := []struct {
			name    string
			args    args
			want    string
			wantErr bool
		}{
			{
				name: "Basic",
				args: args{
					dirtyNumber: "123-456-7890",
				},
				want:    "1234567890",
				wantErr: false,
			},
			{
				name: "LettersNotPermitted",
				args: args{
					dirtyNumber: "123-abc-7890",
				},
				want:    "",
				wantErr: true,
			},
			{
				name: "PunctuationsNotPermitted",
				args: args{
					dirtyNumber: "123-456-789@",
				},
				want:    "",
				wantErr: true,
			},
			{
				name: " SpacesAndDots",
				args: args{
					dirtyNumber: "123 . 456.7890",
				},
				want:    "1234567890",
				wantErr: false,
			},
			{
				name: "Parentheses",
				args: args{
					dirtyNumber: "123 (456) 7890",
				},
				want:    "1234567890",
				wantErr: false,
			},
			{
				name: "PlusAndHyphen",
				args: args{
					dirtyNumber: "+123-456-7890",
				},
				want:    "1234567890",
				wantErr: false,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ExtractDigits(tt.args.dirtyNumber)
				if (err != nil) != tt.wantErr {
					t.Errorf("ExtractDigits() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("ExtractDigits() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:21 $ go mod tidy
go: light tested by
	light.test imports
	github.com/ ךמד/light: malformed import path "github.com/ ךמד/light": invalid char ' '
2024/06/19 10:41:21 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:41:26 Model "openrouter/cohere/command-r-plus" responded (5289 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/package/light"
	)

	func TestSimpleIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case i == 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Case i != 1",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleIfElse(tt.args.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:26 $ go mod tidy
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:41:29 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:41:35 Model "openrouter/cohere/command-r-plus" responded (5686 ms) with:
	```golang
	package light

	import "testing"

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{"case 1", 1, 0},
			{"default", 2, 1},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := simpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:35 $ go mod tidy
2024/06/19 10:41:35 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestSimpleSwitchWithReturn
=== RUN   TestSimpleSwitchWithReturn/case_1
=== RUN   TestSimpleSwitchWithReturn/default
--- PASS: TestSimpleSwitchWithReturn (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/case_1 (0.00s)
    --- PASS: TestSimpleSwitchWithReturn/default (0.00s)
PASS
coverage: 1.4% of statements
ok  	light	0.003s	coverage: 1.4% of statements

DONE 3 tests in 0.384s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:41:36 Executes tests with 3 coverage objects
2024/06/19 10:41:36 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:41:45 Model "openrouter/cohere/command-r-plus" responded (9290 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/yourname/pkg/light"
	)

	func TestIsSorted(t *testing.T) {
		type args struct {
			a []int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{
				name: "empty array",
				args: args{
					a: []int{},
				},
				want: true,
			},
			{
				name: "single element array",
				args: args{
					a: []int{1},
				},
				want: true,
			},
			{
				name: "sorted array",
				args: args{
					a: []int{1, 2, 3},
				},
				want: true,
			},
			{
				name: "unsorted array",
				args: args{
					a: []int{2, 1, 3},
				},
				want: false,
			},
			{
				name: "repeated elements",
				args: args{
					a: []int{1, 1, 1},
				},
				want: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.IsSorted(tt.args.a); got != tt.want {
					t.Errorf("isSorted() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:45 $ go mod tidy
go: finding module for package github.com/yourname/pkg/light
go: light tested by
	light.test imports
	github.com/yourname/pkg/light: cannot find module providing package github.com/yourname/pkg/light: module github.com/yourname/pkg/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/bc03f95a1342593c699fce7a90575cc3cb60f9461954b8941f7b7a2545786a6f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:41:47 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:41:54 Model "openrouter/cohere/command-r-plus" responded (6415 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		tests := []struct {
			name string
			x    []int
			want int
		}{
			{
				name: "First element is 123",
				x:    []int{123, 456, 789},
				want: 123,
			},
			{
				name: "First element is not 123",
				x:    []int{456, 789, 123},
				want: 3,
			},
			{
				name: "Empty array",
				x:    []int{},
				want: 3,
			},
			{
				name: "Nil array",
				x:    nil,
				want: 3,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got := light.TypeArrayAccess(tt.x)
				if got != tt.want {
					t.Errorf("got %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:54 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:41:54 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:41:59 Model "openrouter/cohere/command-r-plus" responded (4710 ms) with:
	```golang
	package light_test

	import (
		. "light"
		"testing"
	)

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name string
			args []int
			want int
		}{
			{"case1", []int{0, 8}, 2},
			{"case2", []int{1, 8}, 1},
			{"case3", []int{0, 9}, 1},
			{"case4", []int{1, 9}, 0},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := TypeArrayConsecutiveAccess(tt.args); got != tt.want {
					t.Errorf("TypeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:41:59 $ go mod tidy
2024/06/19 10:41:59 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess

DONE 0 tests, 2 errors in 0.148s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:42:00 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:42:09 Model "openrouter/cohere/command-r-plus" responded (8869 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang-collections/collections/array"
		"github.com/stretchr/testify/assert"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name     string
			input    [][]int
			expected int
		}{
			{
				name:     "Two-dimensional array with size 2x2",
				input:    array.Must2DFromArrays([]int{1, 2}, []int{3, 4}),
				expected: 2,
			},
			{
				name:     "Two-dimensional array with size 2x1",
				input:    array.Must2DFromArrays([]int{1}, []int{2}),
				expected: 1,
			},
			{
				name:     "Two-dimensional array with size 1x2",
				input:    array.Must2DFromArrays([][]int{{1, 2}}),
				expected: 2,
			},
			{
				name:     "Two-dimensional array with size 1x1",
				input:    array.Must2DFromArrays([][]int{{1}}),
				expected: 1,
			},
			{
				name:     "Empty two-dimensional array",
				input:    array.Must2DFromArrays(),
				expected: 0,
			},
			{
				name:     "Nil two-dimensional array",
				input:    nil,
				expected: 0,
			},
			{
				name:     "Three-dimensional array",
				input:    array.Must3DFromArrays([][]int{{1}, {2}}),
				expected: 0,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				result := typeArrayMultidimensionalArrayLength(test.input)
				assert.Equal(t, test.expected, result)
			})
		}
	}
	```
2024/06/19 10:42:09 $ go mod tidy
go: finding module for package github.com/golang-collections/collections/array
go: finding module for package github.com/stretchr/testify/assert
go: downloading github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/array
go: light tested by
	light.test imports
	github.com/golang-collections/collections/array: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/array
2024/06/19 10:42:10 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:42:17 Model "openrouter/cohere/command-r-plus" responded (6821 ms) with:
	```golang
	package light
	
	import "testing"
	
	func TestValidDate(t *testing.T) {
		type args struct {
			day   int
			month int
			year  int
		}
		tests := []struct {
			name string
			args args
			want bool
		}{
			{"ValidDate", args{1, 1, 1583}, true},
			{"InValidMonth", args{1, 13, 1583}, false},
			{"InValidDay", args{0, 1, 1583}, false},
			{"February29OnNonLeap", args{29, 2, 1900}, false},
			{"February29OnLeap", args{29, 2, 2000}, true},
			{"ValidLastDayOfMonth", args{31, 1, 2023}, true},
			{"InvalidLastDayOfMonth", args{32, 1, 2023}, false},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := validDate(tt.args.day, tt.args.month, tt.args.year); got != tt.want {
					t.Errorf("validDate() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:42:17 $ go mod tidy
2024/06/19 10:42:17 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestValidDate
=== RUN   TestValidDate/ValidDate
=== RUN   TestValidDate/InValidMonth
=== RUN   TestValidDate/InValidDay
=== RUN   TestValidDate/February29OnNonLeap
    validateDate_test.go:27: validDate() = true, want false
=== RUN   TestValidDate/February29OnLeap
    validateDate_test.go:27: validDate() = false, want true
=== RUN   TestValidDate/ValidLastDayOfMonth
=== RUN   TestValidDate/InvalidLastDayOfMonth
--- FAIL: TestValidDate (0.00s)
    --- PASS: TestValidDate/ValidDate (0.00s)
    --- PASS: TestValidDate/InValidMonth (0.00s)
    --- PASS: TestValidDate/InValidDay (0.00s)
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)
    --- FAIL: TestValidDate/February29OnLeap (0.00s)
    --- PASS: TestValidDate/ValidLastDayOfMonth (0.00s)
    --- PASS: TestValidDate/InvalidLastDayOfMonth (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.011s

=== Failed
=== FAIL: . TestValidDate/February29OnNonLeap (0.00s)
    validateDate_test.go:27: validDate() = true, want false
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)

=== FAIL: . TestValidDate/February29OnLeap (0.00s)
    validateDate_test.go:27: validDate() = false, want true
    --- FAIL: TestValidDate/February29OnLeap (0.00s)

=== FAIL: . TestValidDate (0.00s)

DONE 8 tests, 3 failures in 0.876s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:42:19 Executes tests with 7 coverage objects
2024/06/19 10:42:19 Evaluated model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light": encountered 22 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.175s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:28:19: undefined: hasBalancedBrackets

DONE 0 tests, 1 error in 0.175s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
# light_test [light.test]
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch

DONE 0 tests, 2 errors in 0.185s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./binarySearch_test.go:4:2: "light" imported and not used
./binarySearch_test.go:49:11: undefined: BinarySearch

DONE 0 tests, 2 errors in 0.185s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

binarySearch.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

cascadingIfElse.go exit status 1
go: finding module for package github.com/golang/example/light
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang/example/light
go: light tested by
	light.test imports
	github.com/golang/example/light: module github.com/golang/example@latest found (v0.0.0-20240205180059-32022caedd6a), but does not contain package github.com/golang/example/light

collatzCalculator.go exit status 1
# light [light.test]
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.158s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light [light.test]
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:32:13: unknown field nameichetta in struct literal of type struct{name string; args args; want bool}

DONE 0 tests, 1 error in 0.158s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

conditionsAnd.go exit status 1
# light_test [light.test]
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./equilibriumIndices_test.go:34:11: undefined: equilibriumIndices

DONE 0 tests, 1 error in 0.313s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

equilibriumIndices.go exit status 1
go: finding module for package github.com/ampire/light
go: light tested by
	light.test imports
	github.com/ampire/light: cannot find module providing package github.com/ampire/light: module github.com/ampire/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e0d168b42bb583b9336b10ed37b8de57a7a48b83ea44660c53de0303dc637751: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/ampire/light
go: light tested by
	light.test imports
	github.com/ampire/light: cannot find module providing package github.com/ampire/light: module github.com/ampire/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/e0d168b42bb583b9336b10ed37b8de57a7a48b83ea44660c53de0303dc637751: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

forLoop.go exit status 1
go: finding module for package example.com/problem-solving/gocowin/light
go: light tested by
	light.test imports
	example.com/problem-solving/gocowin/light: cannot find module providing package example.com/problem-solving/gocowin/light: unrecognized import path "example.com/problem-solving/gocowin/light": reading https://example.com/problem-solving/gocowin/light?go-get=1: 500 Internal Server Error

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/problem-solving/gocowin/light
go: light tested by
	light.test imports
	example.com/problem-solving/gocowin/light: cannot find module providing package example.com/problem-solving/gocowin/light: unrecognized import path "example.com/problem-solving/gocowin/light": reading https://example.com/problem-solving/gocowin/light?go-get=1: 500 Internal Server Error

jacobiSymbol.go exit status 1
go: finding module for package github.com/golang/mock/gomock
go: finding module for package github.com/smartystreets/goconvey/convey
go: finding module for package github.com/your/project/light
go: found github.com/golang/mock/gomock in github.com/golang/mock v1.6.0
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang/mock/gomock
go: finding module for package github.com/smartystreets/goconvey/convey
go: finding module for package github.com/your/project/light
go: found github.com/golang/mock/gomock in github.com/golang/mock v1.6.0
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

klarnerRadoSequence.go exit status 1
go: finding module for package github.com/your-org/project/light
go: light tested by
	light.test imports
	github.com/your-org/project/light: cannot find module providing package github.com/your-org/project/light: module github.com/your-org/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/6cff71ca64bb6a65572b233ec60d5f5ce3202db15ffeff0506da006de6d272fd: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/project/light
go: light tested by
	light.test imports
	github.com/your-org/project/light: cannot find module providing package github.com/your-org/project/light: module github.com/your-org/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/6cff71ca64bb6a65572b233ec60d5f5ce3202db15ffeff0506da006de6d272fd: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

knapsack.go exit status 1
go: finding module for package example.com/project/light
go: light tested by
	light.test imports
	example.com/project/light: cannot find module providing package example.com/project/light: unrecognized import path "example.com/project/light": reading https://example.com/project/light?go-get=1: 500 Internal Server Error

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/project/light
go: light tested by
	light.test imports
	example.com/project/light: cannot find module providing package example.com/project/light: unrecognized import path "example.com/project/light": reading https://example.com/project/light?go-get=1: 500 Internal Server Error

largestProperDivisor.go exit status 1
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/Odd_base
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
=== RUN   TestMagicSquareOdd/Even_base
=== RUN   TestMagicSquareOdd/Base_less_than_3
=== RUN   TestMagicSquareOdd/Base_greater_than_3
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
--- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)
    --- PASS: TestMagicSquareOdd/Even_base (0.00s)
    --- PASS: TestMagicSquareOdd/Base_less_than_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.012s

=== Failed
=== FAIL: . TestMagicSquareOdd/Odd_base (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)

=== FAIL: . TestMagicSquareOdd/Base_greater_than_3 (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 5 tests, 3 failures in 0.603s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestMagicSquareOdd
=== RUN   TestMagicSquareOdd/Odd_base
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
=== RUN   TestMagicSquareOdd/Even_base
=== RUN   TestMagicSquareOdd/Base_less_than_3
=== RUN   TestMagicSquareOdd/Base_greater_than_3
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
--- FAIL: TestMagicSquareOdd (0.00s)
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)
    --- PASS: TestMagicSquareOdd/Even_base (0.00s)
    --- PASS: TestMagicSquareOdd/Base_less_than_3 (0.00s)
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)
FAIL
coverage: 11.4% of statements
FAIL	light	0.012s

=== Failed
=== FAIL: . TestMagicSquareOdd/Odd_base (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 22] [10 12 19 21 3] [11 18 25 2 9]], want [[17 24 1 8 15] [23 5 7 14 16] [4 6 13 20 2] [10 12 19 3 9] [11 18 21 22 25]]
    --- FAIL: TestMagicSquareOdd/Odd_base (0.00s)

=== FAIL: . TestMagicSquareOdd/Base_greater_than_3 (0.00s)
    magicSquareOdd_test.go:72: magicSquareOdd() = [[30 39 48 1 10 19 28] [38 47 7 9 18 27 29] [46 6 8 17 26 35 37] [5 14 16 25 34 36 45] [13 15 24 33 42 44 4] [21 23 32 41 43 3 12] [22 31 40 49 2 11 20]], want [[1 8 15 22 29 6 13] [30 11 18 25 4 10 17] [23 2 9 16 24 31 5] [7 14 20 27 3 12 26] [21 28 35 32 19 8 1] [34 33 29 22 15 7 12] [6 13 26 18 11 24 30]]
    --- FAIL: TestMagicSquareOdd/Base_greater_than_3 (0.00s)

=== FAIL: . TestMagicSquareOdd (0.00s)

DONE 5 tests, 3 failures in 0.603s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
 exit status 1
# light
matchBytes_test.go:37:16: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:37:16: missing ',' in composite literal

DONE 0 tests, 1 error in 0.044s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light
matchBytes_test.go:37:16: missing ',' in composite literal
WARN invalid TestEvent: FAIL	light [setup failed]
bad output from test2json: FAIL	light [setup failed]

=== Errors
matchBytes_test.go:37:16: missing ',' in composite literal

DONE 0 tests, 1 error in 0.044s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

matchBytes.go exit status 1
go: finding module for package github.com/psmarcin/clesiastes/light
go: light tested by
	light.test imports
	github.com/psmarcin/clesiastes/light: cannot find module providing package github.com/psmarcin/clesiastes/light: module github.com/psmarcin/clesiastes/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4c3df2dc6ac8cc6fe450c42aceed23835eef0572a61f65b2a9adfc510166e2a9: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/psmarcin/clesiastes/light
go: light tested by
	light.test imports
	github.com/psmarcin/clesiastes/light: cannot find module providing package github.com/psmarcin/clesiastes/light: module github.com/psmarcin/clesiastes/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/4c3df2dc6ac8cc6fe450c42aceed23835eef0572a61f65b2a9adfc510166e2a9: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

pascalsTriangle.go exit status 1
go: light tested by
	light.test imports
	github.com/ ךמד/light: malformed import path "github.com/ ךמד/light": invalid char ' '

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: light tested by
	light.test imports
	github.com/ ךמד/light: malformed import path "github.com/ ךמד/light": invalid char ' '

phoneNumber.go exit status 1
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleIfElse.go exit status 1
go: finding module for package github.com/yourname/pkg/light
go: light tested by
	light.test imports
	github.com/yourname/pkg/light: cannot find module providing package github.com/yourname/pkg/light: module github.com/yourname/pkg/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/bc03f95a1342593c699fce7a90575cc3cb60f9461954b8941f7b7a2545786a6f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/yourname/pkg/light
go: light tested by
	light.test imports
	github.com/yourname/pkg/light: cannot find module providing package github.com/yourname/pkg/light: module github.com/yourname/pkg/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/bc03f95a1342593c699fce7a90575cc3cb60f9461954b8941f7b7a2545786a6f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

sort.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

typeArrayAccess.go exit status 1
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess

DONE 0 tests, 2 errors in 0.148s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./typeArrayConsecutiveAccess_test.go:4:2: "light" imported and not used
./typeArrayConsecutiveAccess_test.go:21:14: undefined: TypeArrayConsecutiveAccess

DONE 0 tests, 2 errors in 0.148s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

typeArrayConsecutiveAccess.go exit status 1
go: finding module for package github.com/golang-collections/collections/array
go: finding module for package github.com/stretchr/testify/assert
go: downloading github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/array
go: light tested by
	light.test imports
	github.com/golang-collections/collections/array: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/array

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/golang-collections/collections/array
go: finding module for package github.com/stretchr/testify/assert
go: downloading github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/array
go: light tested by
	light.test imports
	github.com/golang-collections/collections/array: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/array

typeArrayMultidimensionalArrayLength.go exit status 1
=== RUN   TestValidDate
=== RUN   TestValidDate/ValidDate
=== RUN   TestValidDate/InValidMonth
=== RUN   TestValidDate/InValidDay
=== RUN   TestValidDate/February29OnNonLeap
    validateDate_test.go:27: validDate() = true, want false
=== RUN   TestValidDate/February29OnLeap
    validateDate_test.go:27: validDate() = false, want true
=== RUN   TestValidDate/ValidLastDayOfMonth
=== RUN   TestValidDate/InvalidLastDayOfMonth
--- FAIL: TestValidDate (0.00s)
    --- PASS: TestValidDate/ValidDate (0.00s)
    --- PASS: TestValidDate/InValidMonth (0.00s)
    --- PASS: TestValidDate/InValidDay (0.00s)
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)
    --- FAIL: TestValidDate/February29OnLeap (0.00s)
    --- PASS: TestValidDate/ValidLastDayOfMonth (0.00s)
    --- PASS: TestValidDate/InvalidLastDayOfMonth (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.011s

=== Failed
=== FAIL: . TestValidDate/February29OnNonLeap (0.00s)
    validateDate_test.go:27: validDate() = true, want false
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)

=== FAIL: . TestValidDate/February29OnLeap (0.00s)
    validateDate_test.go:27: validDate() = false, want true
    --- FAIL: TestValidDate/February29OnLeap (0.00s)

=== FAIL: . TestValidDate (0.00s)

DONE 8 tests, 3 failures in 0.876s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:125
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
=== RUN   TestValidDate
=== RUN   TestValidDate/ValidDate
=== RUN   TestValidDate/InValidMonth
=== RUN   TestValidDate/InValidDay
=== RUN   TestValidDate/February29OnNonLeap
    validateDate_test.go:27: validDate() = true, want false
=== RUN   TestValidDate/February29OnLeap
    validateDate_test.go:27: validDate() = false, want true
=== RUN   TestValidDate/ValidLastDayOfMonth
=== RUN   TestValidDate/InvalidLastDayOfMonth
--- FAIL: TestValidDate (0.00s)
    --- PASS: TestValidDate/ValidDate (0.00s)
    --- PASS: TestValidDate/InValidMonth (0.00s)
    --- PASS: TestValidDate/InValidDay (0.00s)
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)
    --- FAIL: TestValidDate/February29OnLeap (0.00s)
    --- PASS: TestValidDate/ValidLastDayOfMonth (0.00s)
    --- PASS: TestValidDate/InvalidLastDayOfMonth (0.00s)
FAIL
coverage: 6.6% of statements
FAIL	light	0.011s

=== Failed
=== FAIL: . TestValidDate/February29OnNonLeap (0.00s)
    validateDate_test.go:27: validDate() = true, want false
    --- FAIL: TestValidDate/February29OnNonLeap (0.00s)

=== FAIL: . TestValidDate/February29OnLeap (0.00s)
    validateDate_test.go:27: validDate() = false, want true
    --- FAIL: TestValidDate/February29OnLeap (0.00s)

=== FAIL: . TestValidDate (0.00s)

DONE 8 tests, 3 failures in 0.876s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
]
2024/06/19 10:49:02 Evaluating model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light"
2024/06/19 10:49:02 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "balancedBrackets.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func hasBalancedBrackets(charArray string) bool {
		brackets := 0
		for _, ch := range charArray {
			if ch == '[' {
				brackets++
			} else if ch == ']' {
				brackets--
			} else {
				return false // Non-bracket characters.
			}
		}

		if brackets < 0 { // Closing bracket before opening bracket.
			return false
		}

		return brackets == 0
	}
	```
2024/06/19 10:49:19 Model "openrouter/cohere/command-r-plus" responded (17573 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"light"
	)

	func TestHasBalancedBrackets(t *testing.T) {
		Convey("hasBalancedBrackets should return true for balanced bracket strings", t, func() {
			So(light.HasBalancedBrackets("[]"), ShouldBeTrue)
			So(light.HasBalancedBrackets("[][]"), ShouldBeTrue)
			So(light.HasBalancedBrackets("[[[]]]"), ShouldBeTrue)
			So(light.HasBalancedBrackets("[][][]"), ShouldBeTrue)
		})

		Convey("hasBalancedBrackets should return false for unbalanced bracket strings", t, func() {
			So(light.HasBalancedBrackets("["), ShouldBeFalse)
			So(light.HasBalancedBrackets("]"), ShouldBeFalse)
			So(light.HasBalancedBrackets("]][]["), ShouldBeFalse)
			So(light.HasBalancedBrackets("[]]"), ShouldBeFalse)
			So(light.HasBalancedBrackets("[[]]"), ShouldBeFalse)
		})

		Convey("hasBalancedBrackets should return false for non-bracket strings", t, func() {
			So(light.HasBalancedBrackets(""), ShouldBeFalse)
			So(light.HasBalancedBrackets("abcd"), ShouldBeFalse)
			So(light.HasBalancedBrackets("]a["), ShouldBeFalse)
		})
	}
	```
2024/06/19 10:49:19 $ go mod tidy
go: finding module for package github.com/smartystreets/goconvey/convey
go: found github.com/smartystreets/goconvey/convey in github.com/smartystreets/goconvey v1.8.1
2024/06/19 10:49:19 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors

DONE 0 tests, 11 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:49:20 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "binarySearch.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func binarySearch(a []int, x int) int {
		index := -1

		min := 0
		max := len(a) - 1

		for index == -1 && min <= max {
			m := (min + max) / 2

			if x == a[m] {
				index = m
			} else if x < a[m] {
				max = m - 1
			} else {
				min = m + 1
			}
		}

		return index
	}
	```
2024/06/19 10:49:28 Model "openrouter/cohere/command-r-plus" responded (8711 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/your/project/light"
	)

	func TestBinarySearch(t *testing.T) {
	    type args struct {
	        a []int
	        x int
	    }
	    tests := []struct {
	        name string
	        args args
	        want int
	    }{
	        {
	            name: "element found",
	            args: args{
	                a: []int{1, 2, 3, 4, 5},
	                x: 3,
	            },
	            want: 2,
	        },
	        {
	            name: "element not found",
	            args: args{
	                a: []int{1, 2, 3, 4, 5},
	                x: 6,
	            },
	            want: -1,
	        },
	        {
	            name: "empty slice",
	            args: args{
	                a: []int{},
	                x: 1,
	            },
	            want: -1,
	        },
	        {
	            name: "single element slice",
	            args: args{
	                a: []int{5},
	                x: 5,
	            },
	            want: 0,
	        },
	        {
	            name: "two element slice",
	            args: args{
	                a: []int{1, 3},
	                x: 3,
	            },
	            want: 1,
	        },
	        {
	            name: "first element",
	            args: args{
	                a: []int{-1, 2, 3, 4},
	                x: -1,
	            },
	            want: 0,
	        },
	        {
	            name: "last element",
	            args: args{
	                a: []int{1, 2, 3, 9},
	                x: 9,
	            },
	            want: 3,
	        },
	    }
	    for _, tt := range tests {
	        t.Run(tt.name, func(t *testing.T) {
	            if got := light.BinarySearch(tt.args.a, tt.args.x); got != tt.want {
	                t.Errorf("binarySearch() = %v, want %v", got, tt.want)
	            }
	        })
	    }
	}
	```
2024/06/19 10:49:28 $ go mod tidy
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:49:29 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "callLoopConditionsOftenEnough.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func callLoopConditionsOftenEnough(x, y int) int {
		if x < 10 || x > 20 {
			return 0
		}

		for i := 0; i < y; i++ {
			if i > 20 {
				x++ // This needs to be executed more than 10 times
			}
		}

		if x > 20 { // This block needs to be reached for full coverage
			x = x / 2
		}

		return x
	}
	```
2024/06/19 10:49:36 Model "openrouter/cohere/command-r-plus" responded (7614 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/smartystreets/goconvey/convey"
	)

	func TestCallLoopConditionsOftenEnough(t *testing.T) {
		convey.Convey("callLoopConditionsOftenEnough executes the desired logic", t, func() {
			x, y := 15, 50
			result := callLoopConditionsOftenEnough(x, y)
			convey.So(result, convey.ShouldEqual, 21)

			x, y = 15, 10
			result = callLoopConditionsOftenEnough(x, y)
			convey.So(result, convey.ShouldEqual, 15)

			x, y = 25, 50
			result = callLoopConditionsOftenEnough(x, y)
			convey.So(result, convey.ShouldEqual, 23)

			x, y = 5, 50
			result = callLoopConditionsOftenEnough(x, y)
			convey.So(result, convey.ShouldEqual, 0)
		})
	}
	```
2024/06/19 10:49:36 $ go mod tidy
2024/06/19 10:49:36 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.144s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:49:40 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "cascadingIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func cascadingIfElse(i int) int {
		if i == 1 {
			return 2
		} else if i == 3 {
			return 4
		} else {
			return 5
		}
	}
	```
2024/06/19 10:49:45 Model "openrouter/cohere/command-r-plus" responded (4954 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/light"
	)

	func TestCascadingIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{"Basic test", args{1}, 2},
			{"Second basic test", args{3}, 4},
			{"Else case", args{2}, 5},
			{"Negative number", args{-1}, 5},
			{"Zero", args{0}, 5},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.CascadingIfElse(tt.args.i); got != tt.want {
					t.Errorf("cascadingIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:49:45 $ go mod tidy
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found
2024/06/19 10:49:46 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "collatzCalculator.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func computeStepCount(start int) (int, error) {
		if start <= 0 {
			return 0, errors.New("Only positive integers are allowed")
		}
		if start == 1 {
			return 0, nil
		}
		var next int

		if start%2 == 0 {
			next = start / 2
		} else {
			next = 3*start + 1
		}

		n, err := computeStepCount(next)
		if err != nil {
			return 0, err
		}

		return 1 + n, nil
	}
	```
2024/06/19 10:49:56 Model "openrouter/cohere/command-r-plus" responded (10306 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your/repository/light"
	)

	func TestComputeStepCountPositiveNumber(t *testing.T) {
		tests := []struct {
			name  string
			start int
			want  int
		}{
			{"PositiveNumber", 5, 5},
			{"EvenNumber", 6, 9},
			{"OddNumber", 11, 16},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.ComputeStepCount(tt.start)
				if err != nil {
					t.Errorf("Got unexpected error: %v", err)
				}
				if got != tt.want {
					t.Errorf("ComputeStepCount(%d) = %d, want %d", tt.start, got, tt.want)
				}
			})
		}
	}

	func TestComputeStepCountZero(t *testing.T) {
		_, err := light.ComputeStepCount(0)
		if err == nil {
			t.Errorf("Expected error for ComputeStepCount(0), but got none")
		}
	}

	func TestComputeStepCountNegativeNumber(t *testing.T) {
		negativeNumber := -5
		_, err := light.ComputeStepCount(negativeNumber)
		if err == nil {
			t.Errorf("Expected error for ComputeStepCount(%d), but got none", negativeNumber)
		}
	}

	func TestComputeStepCountOne(t *testing.T) {
		got, err := light.ComputeStepCount(1)
		if err != nil {
			t.Errorf("Got unexpected error: %v", err)
		}
		if got != 0 {
			t.Errorf("ComputeStepCount(1) = %d, want %d", got, 0)
		}
	}
	```
2024/06/19 10:49:56 $ go mod tidy
go: finding module for package github.com/your/repository/light
go: light tested by
	light.test imports
	github.com/your/repository/light: cannot find module providing package github.com/your/repository/light: module github.com/your/repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3a3c740c3db4b13eb51c5e28d9f8b33c627a0041a7cd0c88eeaac4bdb5fd6458: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:49:58 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "conditionsAnd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func conditionsAnd(x rune, y rune) bool {
		if x == 'A' && y == 'B' {
			return true
		}

		return false
	}
	```
2024/06/19 10:50:04 Model "openrouter/cohere/command-r-plus" responded (5953 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/smartystreets/goconvey/convey"
	)

	func TestConditionsAnd(t *testing.T) {
	    convey.Convey("conditionsAnd tests", t, func() {
	        convey.Convey("when x is 'A' and y is 'B'", func() {
	            result := conditionsAnd('A', 'B')
	            convey.So(result, convey.ShouldEqual, true)
	        })

	        convey.Convey("when x is not 'A'", func() {
	            result := conditionsAnd('C', 'B')
	            convey.So(result, convey.ShouldEqual, false)
	        })

	        convey.Convey("when y is not 'B'", func() {
	            result := conditionsAnd('A', 'C')
	            convey.So(result, convey.ShouldEqual, false)
	        })

	        convey.Convey("when both conditions are not met", func() {
	            result := conditionsAnd('C', 'D')
	            convey.So(result, convey.ShouldEqual, false)
	        })
	    })
	}
	```
2024/06/19 10:50:04 $ go mod tidy
2024/06/19 10:50:04 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd

DONE 0 tests, 4 errors in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:50:04 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "equilibriumIndices.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "strconv"

	func equilibriumIndices(sequence []int) (indexList string) {
		// Determine total sum.
		var totalSum int
		for _, n := range sequence {
			totalSum += n
		}
		// Compare running sum to remaining sum to find equilibrium indices.
		var runningSum int
		for i, n := range sequence {
			if totalSum-runningSum-n == runningSum {
				indexList += strconv.Itoa(i) + ";"
			}
			runningSum += n
		}

		return indexList
	}
	```
2024/06/19 10:50:22 Model "openrouter/cohere/command-r-plus" responded (17940 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/amoondust/gtest"
		"github.com/amoondust/gtest/assert"
	)

	func TestEquilibriumIndices(t *testing.T) {
		tt := gtest.New(t)

		example1 := []int{3, 1, 5, 2, 2, 1}
		tt.When("sequence has equilibrium indices", func(t *gtest.T) {
			t.Specify("It returns a string of indices", func() {
				result := equilibriumIndices(example1)
				assert.Equal(t, "1;3;4", result)
			})
		}).AndWhen("sequence has no equilibrium indices", func(t *gtest.T) {
			t.Given([]int{1, 2, 3, 4, 5})
			t.Specify("It returns an empty string", func() {
				result := equilibriumIndices(t.Input().([]int))
				assert.Equal(t, "", result)
			})
		}).AndWhen("sequence has only one element", func(t *gtest.T) {
			t.Given([]int{7})
			t.Specify("It returns an empty string", func() {
				result := equilibriumIndices(t.Input().([]int))
				assert.Equal(t, "", result)
			})
		}).AndWhen("sequence is empty", func(t *gtest.T) {
			t.Given([]int{})
			tIterations(t)
		})
	}

	func iIterations(t *gtest.T) {
		t.Specify("It returns an empty string", func() {
			result := equilibriumIndices(t.Input().([]int))
			assert.Equal(t, "", result)
		})
	}
	```
2024/06/19 10:50:22 $ go mod tidy
go: finding module for package github.com/amoondust/gtest/assert
go: finding module for package github.com/amoondust/gtest
go: light tested by
	light.test imports
	github.com/amoondust/gtest: cannot find module providing package github.com/amoondust/gtest: module github.com/amoondust/gtest: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
go: light tested by
	light.test imports
	github.com/amoondust/gtest/assert: cannot find module providing package github.com/amoondust/gtest/assert: module github.com/amoondust/gtest/assert: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:50:24 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "forLoop.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func forLoop(s int) int {
		sum := 0
		for i := 0; i < s; i++ {
			sum = sum + i
		}
		for i := 0; i < s; i++ {
			sum = sum + i
		}

		return sum
	}
	```
2024/06/19 10:50:33 Model "openrouter/cohere/command-r-plus" responded (8520 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestForLoop(t *testing.T) {
		type args struct {
			s int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Simple test",
				args: args{
					s: 5,
				},
				want: 20,
			},
			{
				name: "Zero test",
				args: args{
					s: 0,
				},
				want: 0,
			},
			{
				name: "Negative number test",
				args: args{
					s: -3,
				},
				want: 0,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.ForLoop(tt.args.s); got != tt.want {
					t.Errorf("forLoop() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:50:33 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:50:35 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "jacobiSymbol.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import (
		"fmt"
	)

	func jacobiSymbol(k, n uint64) (int, error) {
		if k < 0 || n%2 == 0 {
			return 0, fmt.Errorf("Invalid value. k = %d, n = %d", k, n)
		}
		k %= n
		jacobi := 1
		for k > 0 {
			for k%2 == 0 {
				k /= 2
				r := n % 8
				if r == 3 || r == 5 {
					jacobi = -jacobi
				}
			}
			temp := n
			n = k
			k = temp
			if k%4 == 3 && n%4 == 3 {
				jacobi = -jacobi
			}
			k %= n
		}
		if n == 1 {
			return jacobi, nil
		}
		return 0, nil
	}
	```
2024/06/19 10:51:00 Model "openrouter/cohere/command-r-plus" responded (24423 ms) with:
	```golang
	package light_test

	import (
		"fmt"
		"testing"

		"github.com/stretchr/testify/assert"

		"github.com/golang-collections/collections/set"

		"github.com/your/package/light"
	)

	func TestJacobiSymbol(t *testing.T) {
		type args struct {
			k uint64
			n uint64
		}
		tests := []struct {
			name    string
			args    args
			want    int
			wantErr bool
		}{
			{
				name: "Jacobi symbol of 3 with respect to 37",
				args: args{
					k: 3,
					n: 37,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 5 with respect to 9",
				args: args{
					k: 5,
					n: 9,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 2 with respect to 4",
				args: args{
					k: 2,
					n: 4,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of 10 with respect to 49",
				args: args{
					k: 10,
					n: 49,
				},
				want:    -1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 7 with respect to 7",
				args: args{
					k: 7,
					n: 7,
				},
				want:    1,
				wantErr: false,
			},
			{
				name: "Jacobi symbol of 9 with respect to 11",
				args: args{
					k: 9,
					n: 11,
				},
			 Assunção:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of 0 with respect to 9",
				args: args{
					k: 0,
					n: 9,
				},
				want:    0,
				wantErr: true,
			},
			{
				name: "Jacobi symbol of negative number with respect to 23",
				args: args{
					k: 49,
					n: 23,
				},
				want:    0,
				wantErr: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.JacobiSymbol(tt.args.k, tt.args.n)
				if (err != nil) != tt.wantErr {
					t.Errorf("JacobiSymbol() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if got != tt.want {
					t.Errorf("JacobiSymbol() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func TestJacobiComputations(t *testing.T) {
		type args struct {
			k uint64
			n uint64
		}
		tests := []struct {
			name string
			args args
		}{
			{
				name: "Jacobi computations test 1",
				args: args{
					k: 4294967297,
					n: 17,
				},
			},
			{
				name: "Jacobi computations test 2",
				args: args{
					k: 4294967163,
					n: 13,
				},
			},
			{
				name: "Jacobi computations test 3",
				args: args{
					k: 2,
					n: 4096,
				},
			},
			{
				name: "Jacobi computations test 4",
				args: args{
					k: 3,
					n: 65537,
				},
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				k := tt.args.k
				n := tt.args.n

				for i := uint64(1); k > 0 && i*i <= k; i++ {
					if k%(2*i) == 0 {
						t.Logf("k = %d, n = %d, i = %d", k, n, i)
						got, err := light.JacobiSymbol(i, n)
						assert.NoError(t, err)
						assert.Equal(t, 1, got)

						got, err = light.JacobiSymbol(k/i, n)
						assert.NoError(t, err)
						assert.Equal(t, got, light.JacobiSymbol(i, n)*light.JacobiSymbol(k/i, n))
					}
				}
			})
		}
	}
	```
2024/06/19 10:51:00 $ go mod tidy
go: finding module for package github.com/your/package/light
go: finding module for package github.com/golang-collections/collections/set
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/golang-collections/collections/set in github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:51:01 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "klarnerRadoSequence.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	func initialiseKlarnerRadoSequence(limit int) []int {
		result := make([]int, limit+1)
		i2, i3 := 1, 1
		m2, m3 := 1, 1

		for i := 1; i <= limit; i++ {
			minimum := int(math.Min(float64(m2), float64(m3)))
			result[i] = minimum
			if m2 == minimum {
				m2 = result[i2]*2 + 1
				i2 += 1
			}
			if m3 == minimum {
				m3 = result[i3]*3 + 1
				i3 += 1
			}
		}

		return result
	}
	```
2024/06/19 10:51:12 Model "openrouter/cohere/command-r-plus" responded (10444 ms) with:
	```golang
	package light_test

	import (
		. "github.com/smartystreets/goconvey/convey"
		"testing"
	)

	func TestInitialiseKlarnerRadoSequence(t *testing.T) {
		Convey("InitialiseKlarnerRadoSequence should return the correct sequence", t, func() {
			result := initialiseKlarnerRadoSequence(5)
			So(result, ShouldResemble, []int{1, 1, 1, 3, 1})
		})
	}

	func TestInitialiseKlarnerRadoSequenceLarge(t *testing.T) {
		Convey("InitialiseKlarnerRadoSequence should return the correct sequence for large input", t, func() {
			result := initialiseKlarnerRadoSequence(1000)
			So(result[999], ShouldEqual, 662492353186128)
		})
	}

	func TestInitialiseKlarnerRadoSequenceEdgeCases(t *testing.T) {
		Convey("InitialiseKlarnerRadoSequence should handle edge cases correctly", t, func() {
			So(initialiseKlarnerRadoSequence(0), ShouldResemble, []int{})
			So(initialiseKlarnerRadoSequence(-1), ShouldResemble, []int{})
		})
	}
	```
2024/06/19 10:51:12 $ go mod tidy
2024/06/19 10:51:12 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 4 errors in 0.206s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:51:12 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "knapsack.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "math"

	type Item struct {
		weight int
		value  int
	}

	func maximumValue(maximumWeight int, items []Item) int {
		knapsack := make([][]int, len(items)+1)
		for item := range knapsack {
			knapsack[item] = make([]int, maximumWeight+1)
			for weight := range knapsack[item] {
				knapsack[item][weight] = 0 // Return 0 if not filled
			}
		}

		for item := 0; item <= len(items); item++ {
			for weight := 0; weight <= maximumWeight; weight++ {
				if item == 0 || weight == 0 {
					knapsack[item][weight] = 0
				} else if items[item-1].weight > weight {
					knapsack[item][weight] = knapsack[item-1][weight]
				} else {
					itemValue := items[item-1].value
					itemWeight := items[item-1].weight
					knapsack[item][weight] = int(math.Max(float64(itemValue+knapsack[item-1][weight-itemWeight]), float64(knapsack[item-1][weight])))
				}
			}
		}

		return knapsack[len(items)][maximumWeight]
	}
	```
2024/06/19 10:51:23 Model "openrouter/cohere/command-r-plus" responded (11270 ms) with:
	```golang
	package light_test

	import (
		. "light"
		"testing"
	)

	func TestMaximumValue(t *testing.T) {
		items := []Item{
			{weight: 2, value: 6},
			{weight: 2, value: 10},
			{weight: 3, value: 12},
		}

		if val := MaximumValue(4, items); val != 22 {
			t.Error("Expected maximum value of 22, got:", val)
		}

		if val := MaximumValue(3, items); val != 12 {
			t.Error("Expected maximum value of 12, got:", val)
		}

		if val := MaximumValue(10, items); val != 28 {
			t.Error("Expected maximum value of 28, got:", val)
		}

		if val := MaximumValue(0, items); val != 0 {
			t.Error("Expected maximum value of 0, got:", val)
		}

		items = []Item{
			{weight: 1, value: 1},
		}

		if val := MaximumValue(1, items); val != 1 {
			t.Error("Expected maximum value of 1, got:", val)
		}
	}
	```
2024/06/19 10:51:23 $ go mod tidy
2024/06/19 10:51:24 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
# light_test [light.test]
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors

DONE 0 tests, 11 errors in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:51:26 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "largestProperDivisor.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "fmt"

	func largestProperDivisor(aNumber int) (int, error) {
		if aNumber < 1 {
			return 0, fmt.Errorf("Argument must be >= 1: %d", aNumber)
		}

		if (aNumber & 1) == 0 {
			return aNumber >> 1, nil
		}

		for p := 3; p*p <= aNumber; p += 2 {
			if aNumber%p == 0 {
				return aNumber / p, nil
			}
		}

		return 1, nil
	}
	```
2024/06/19 10:51:38 Model "openrouter/cohere/command-r-plus" responded (11717 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"example.com/yourpackage/light"
	)

	func TestLargestProperDivisor(t *testing.T) {
		tests := []struct {
			name      string
			input     int
			wantDiv   int
			wantError bool
		}{
			{
				name:      "Zero input",
				input:     0,
				wantDiv:   0,
				wantError: true,
			},
			{
				name:      "Negative input",
				input:     -5,
				wantDiv:   0,
				wantError: true,
			},
			{
				name:      "Input 1",
				input:     1,
				wantDiv:   1,
				wantError: false,
			},
			{
				name:      "Input 2",
				input:     2,
				wantDiv:   1,
				wantError: false,
			},
			{
				nameargmax_of_functions:3
				name:      "Even number",
				input:     4,
				wantDiv:   2,
				wantError: false,
			},
			{
				name:      "Odd number with prime factor",
				input:     9,
				wantDiv:   3,
				wantError: false,
			},
			{
				name:      "Number with non-prime factor",
				input:     15,
				wantDiv:   5,
				wantError: false,
			},
			{
				name:      "Large number",
				input:     123456,
				wantDiv:   41152,
				wantError: false,
			},
		}

		for _, test := range tests {
			t.Run(test.name, func(t *testing.T) {
				gotDiv, err := light.LargestProperDivisor(test.input)
				if err != nil && !test.wantError {
					t.Fatalf("Did not expect error but got: %v", err)
				}
				if err == nil && test.wantError {
					t.Fatalf("Expected error but got none")
				}
				if gotDiv != test.wantDiv {
					t.Fatalf("Expected largest proper divisor to be %d, got %d", test.wantDiv, gotDiv)
				}
			})
		}
	}
	```
2024/06/19 10:51:38 $ go mod tidy
go: finding module for package example.com/yourpackage/light
go: light tested by
	light.test imports
	example.com/yourpackage/light: cannot find module providing package example.com/yourpackage/light: unrecognized import path "example.com/yourpackage/light": reading https://example.com/yourpackage/light?go-get=1: 500 Internal Server Error
2024/06/19 10:51:40 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "magicSquareOdd.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func magicSquareOdd(base int) ([][]int, error) {
		if base%2 == 0 || base < 3 {
			return nil, errors.New("base must be odd and > 2")
		}

		grid := make([][]int, base)
		for i := range grid {
			grid[i] = make([]int, base)
		}
		r, number := 0, 0
		size := base * base

		c := base / 2
		for number < size {
			number++
			grid[r][c] = number
			if r == 0 {
				if c == base-1 {
					r++
				} else {
					r = base - 1
					c++
				}
			} else {
				if c == base-1 {
					r--
					c = 0
				} else {
					if grid[r-1][c+1] == 0 {
						r--
						c++
					} else {
						r++
					}
				}
			}
		}

		return grid, nil
	}
	```
2024/06/19 10:52:10 Model "openrouter/cohere/command-r-plus" responded (29918 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/kaniini/go-codeclinic/code-snippets/internal/light"
	)

	func TestMagicSquareOdd(t *testing.T) {
		tests := []struct {
			name    string
			base    int
			want    [][]int
			wantErr bool
		}{
			{
				name:    "Base is odd and > 2",
				base:    5,
				want:    [][]int{{17, 24, 1, 8, 15}, {23, 5, 7, 14, 16}, {4, 6, 13, 20, 22}, {10, 12, 19, 21, 3}, {11, 18, 2, 9, 25}},
				wantErr: false,
			},
			{
				name:    "Base is even",
				base:    4,
				want:    nil,
				wantErr: true,
			},
			{
				name:    "Base is odd and = 2",
				base:    3,
				want:    nil,
				wantErr: true,
			},
			{
				name:    "Base is 1",
				base:    1,
				want:    nil,
				wantErr: true,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				got, err := light.MagicSquareOdd(tt.base)
				if (err != nil) != tt.wantErr {
					t.Errorf("magicSquareOdd() error = %v, wantErr %v", err, tt.wantErr)
					return
				}
				if !tt.wantErr && !compareGrids(got, tt.want) {
					t.Errorf("magicSquareOdd() = %v, want %v", got, tt.want)
				}
			})
		}
	}

	func compareGrids(g1, g2 [][]int) bool {
		if len(g1) != len(g2) {
			return false
		}
		for i := range g1 {
			if len(g1[i]) != len(g2[i]) {
				return false
			}
			for j := range g1[i] {
				if g1[i][j] != g2[i][j] {
					return false
				}
			}
		}
		return true
	}
	```
2024/06/19 10:52:10 $ go mod tidy
go: finding module for package github.com/kaniini/go-codeclinic/code-snippets/internal/light
go: light tested by
	light.test imports
	github.com/kaniini/go-codeclinic/code-snippets/internal/light: cannot find module providing package github.com/kaniini/go-codeclinic/code-snippets/internal/light: module github.com/kaniini/go-codeclinic/code-snippets/internal/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/1e69b2455c9bb786dd15a784b7f07344f9629cc71ad4696828eca3b294cde578: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:52:12 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "matchBytes.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func matchBytes(s1 []byte, s2 []byte) bool {
		for i := 0; i < len(s1); i++ {
			c1 := s1[i]
			c2 := s2[i]

			if c1 != c2 {
				c1 |= 'a' - 'A'
				c2 |= 'a' - 'A'

				if c1 != c2 || c1 < 'a' || c1 > 'z' {
					return false
				}
			}
		}

		return true
	}
	```
2024/06/19 10:52:20 Model "openrouter/cohere/command-r-plus" responded (7490 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/smartystreets/assertions"
	    "github.com/smartystreets/assertions/should"
	)

	func TestMatchBytes(t *testing.T) {
	    assertions.New(t)

	    cases := []struct {
	        s1       []byte
	        s2       []byte
	        expected bool
	    }{
	        {[]byte("hello"), []byte("hello"), true},
	        {[]byte("HELLO"), []byte("hello"), true},
	        {[]byte("HeLLo"), []byte("hello"), true},
	        {[]byte("HELP"), []byte("hello"), false},
	        {[]byte(""), []byte(""), true},
	        {[]byte("world"), []byte("World"), true},
	        {[]byte("World"), []byte("world"), true},
	        {[]byte("foo"), []byte("bar"), false},
	        {[]byte("123"), []byte("123"), true},
	        {[]byte("!@#$%^&*()"), []byte("!@#$%^&*()"), true},
	        {[]byte("abc123"), []byte("abc123"), true},
	        {[]byte("abcXYZ"), []byte("abcxyz"), true},
	        {[]byte("ABCxyz"), []byte("abcxyz"), true},
	        {[]byte("abc!@#"), []byte("abc!@#"), true},
	        {[]byte("qwerty"), []byte("QWERTY"), true},
	    }

	    for _, tc := range cases {
	        actual := matchBytes(tc.s1, tc.s2)
	        assertions.So(actual, should.Equal, tc.expected)
	    }
	}
	```
2024/06/19 10:52:20 $ go mod tidy
go: finding module for package github.com/smartystreets/assertions/should
go: finding module for package github.com/smartystreets/assertions
go: downloading github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions in github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions/should in github.com/smartystreets/assertions v1.16.0
go: light tested by
	light.test imports
	github.com/smartystreets/assertions: github.com/smartystreets/assertions@v1.16.0: parsing go.mod:
	module declares its path as: github.com/smarty/assertions
	        but was required as: github.com/smartystreets/assertions
2024/06/19 10:52:22 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "pascalsTriangle.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func pascalsTriangle(rows int) ([][]int, error) {
		if rows < 0 {
			return nil, errors.New("Rows can't be negative!")
		}

		triangle := make([][]int, rows)

		for i := 0; i < rows; i++ {
			triangle[i] = make([]int, i+1)
			triangle[i][0] = 1
			for j := 1; j < i; j++ {
				triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j]
			}
			triangle[i][i] = 1
		}
		return triangle, nil
	}
	```
2024/06/19 10:52:33 Model "openrouter/cohere/command-r-plus" responded (10863 ms) with:
	```golang
	package light

	import "testing"

	func TestPascalTriangle(t *testing.T) {
		tests := []struct {
			rows    int
			want    [][]int
			wantErr bool
		}{
			{
				rows: 0,
				want:    [][]int{},
				wantErr: false,
			},
			{
				rows: 1,
				want:    [][]int{{1}},
				wantErr: false,
			},
			{
				rows: 2,
				want:    [][]int{{1}, {1, 1}},
				wantErr: false,
			},
			{
				rows: 3,
				want:    [][]int{{1}, {1, 1}, {1, 2, 1}},
				wantErr: false,
			},
			{
				rows:    -1,
				want:    nil,
				wantErr: true,
			},
		}

		for _, tc := range tests {
			got, err := pascalsTriangle(tc.rows)
			if err != nil {
				if !tc.wantErr {
					t.Errorf("pascalsTriangle(%d) got unexpected error: %v", tc.rows, err)
				}
				continue
			}
			if len(got) != len(tc.want) {
				t.Errorf("pascalsTriangle(%d) got %d rows, want %d rows", tc.rows, len(got), len(tc.want))
				continue
			}
			for i := range got {
				if len(got[i]) != len(tc.want[i]) {
					t.Errorf("pascalsTriangle(%d) row %d got %d cols, want %d cols", tc.rows, i, len(got[i]), len(tc.want[i]))
					continue
				}
				for j := range got[i] {
					if got[i][j] != tc.want[i][j] {
						t.Errorf("pascalsTriangle(%d) row %d col %d got %d, want %d", tc.rows, i, j, got[i][j], tc.want[i][j])
					}
				}
			}
		}
	}
	```
2024/06/19 10:52:33 $ go mod tidy
2024/06/19 10:52:33 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestPascalTriangle
--- PASS: TestPascalTriangle (0.00s)
PASS
coverage: 4.7% of statements
ok  	light	0.004s	coverage: 4.7% of statements

DONE 1 tests in 0.329s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:52:33 Executes tests with 4 coverage objects
2024/06/19 10:52:33 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "phoneNumber.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	import "errors"

	func extractDigits(dirtyNumber string) (cleanNumber string, err error) {
		for _, c := range dirtyNumber {
			if c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' || c == '+' {
				// Remove spaces, dots, parentheses, hyphens and pluses.
				continue
			}
			if c == '-' || c == '@' || c == ':' || c == '!' {
				return "", errors.New("punctuations not permitted")
			}
			if c < '0' || c > '9' {
				return "", errors.New("letters not permitted")
			}
			cleanNumber += string(c)
		}

		return cleanNumber, nil
	}
	```
2024/06/19 10:52:51 Model "openrouter/cohere/command-r-plus" responded (17538 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang-collections/collections/string"
		"github.com/stretchr/testify/assert"
	)

	func TestExtractDigits(t *testing.T) {
		tests := []struct {
			name        string
			input       string
			expected    string
			expectedErr error
		}{
			{
				name:     "Valid input with punctuations",
				input:    "123-456-7890",
				expected: "1234567890",
			},
			{
				name:     "Valid input with spaces",
				input:    "123 456 7890",
				expected: "1234567890",
			},
			{
				name:     "Valid input with random case",
				input:    "123AbC456.@#$7890",
				expected: "1234567890",
			},
			{
				name:        "Invalid input with letters",
				input:       "123abc7890",
				expectedErr: errors.New("letters not permitted"),
			},
			{
				name:        "Invalid input with punctuations",
				input:       "123-@456-7890",
				expectedErr: errors.New("punctuations not permitted"),
			},
			{
				name:        "Invalid input with plus sign",
				input:       "+1234567890",
				expectedErr: errors.New("punctuations not permitted"),
			},
			{
				name:     "Empty input",
				input:    "",
				expected: "",
			},
		}

		for _, tc := range tests {
			t.Run(tc.name, func(t *testing.T) {
				output, err := extractDigits(tc.input)
				if tc.expectedErr != nil {
					assert.EqualError(t, err, tc.expectedErr.Error())
				} else {
					assert.NoError(t, err)
					assert.Equal(t, tc.expected, output)
				}
			})
		}
	}
	```
2024/06/19 10:52:51 $ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: finding module for package github.com/golang-collections/collections/string
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/string
go: light tested by
	light.test imports
	github.com/golang-collections/collections/string: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/string
2024/06/19 10:52:53 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleIfElse.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleIfElse(i int) int {
		if i == 1 {
			return 0
		} else {
			return 1
		}
	}
	```
2024/06/19 10:52:58 Model "openrouter/cohere/command-r-plus" responded (4692 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-repository/light"
	)

	func TestSimpleIfElse(t *testing.T) {
		type args struct {
			i int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "Case i == 1",
				args: args{
					i: 1,
				},
				want: 0,
			},
			{
				name: "Case i != 1",
				args: args{
					i: 2,
				},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleIfElse(tt.args.i); got != tt.want {
					t.Errorf("simpleIfElse() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:52:58 $ go mod tidy
go: finding module for package github.com/your-repository/light
go: light tested by
	light.test imports
	github.com/your-repository/light: cannot find module providing package github.com/your-repository/light: module github.com/your-repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/53c0dc6c4be2a093fcfbba5fac3d783f22c4da6814fa639fa0743b0412a37b7f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:53:01 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "simpleSwitchWithReturn.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func simpleSwitchWithReturn(i int) int {
		switch i {
		case 1:
			return 0
		default:
			return 1
		}
	}
	```
2024/06/19 10:53:05 Model "openrouter/cohere/command-r-plus" responded (4353 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/your-org/your-project/light"
	)

	func TestSimpleSwitchWithReturn(t *testing.T) {
		tests := []struct {
			name string
			i    int
			want int
		}{
			{
				name: "Case 1",
				i:    1,
				want: 0,
			},
			{
				name: "Default Case",
				i:    2,
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.SimpleSwitchWithReturn(tt.i); got != tt.want {
					t.Errorf("simpleSwitchWithReturn() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:53:05 $ go mod tidy
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:53:06 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "sort.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func isSorted(a []int) bool {
		i := 0
		for i < len(a)-1 && a[i] <= a[i+1] {
			i++
		}

		return i == len(a)-1
	}
	```
2024/06/19 10:53:14 Model "openrouter/cohere/command-r-plus" responded (7756 ms) with:
	```golang
	package light_test

	import (
	    "testing"

	    "github.com/your-name/light"
	)

	func TestIsSorted(t *testing.T) {
	    type testCase struct {
	        input    []int
	        expected bool
	    }

	    testCases := []testCase{
	        {[]int{}, true},
	        {[]int{1}, true},
	        {[]int{1, 2}, true},
	        {[]int{2, 1}, false},
	        {[]int{1, 2, 3}, true},
	        {[]int{1, 3, 2}, false},
	        {[]int{3, 2, 1}, false},
	        {[]int{1, 2, 3, 4}, true},
	        {[]int{1, 2, 4, 3}, false},
	        {[]int{1, 3, 2, 4}, false},
	        {[]int{2, 1, 3, 4}, false},
	        {[]int{1, 2, 3, 4, 5}, true},
	        {[]int{5, 4, 3, 2, 1}, false},
	        {[]int{1, 1, 2, 3}, true},
	        {[]int{1, 2, 2, 3}, true},
	    }

	    for _, tc := range testCases {
	        actual := light.IsSorted(tc.input)
	        if actual != tc.expected {
	            t.Errorf("Input: %v, expected: %v, actual: %v", tc.input, tc.expected, actual)
	        }
	    }
	}
	```
2024/06/19 10:53:14 $ go mod tidy
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:53:16 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayAccess(x []int) int {
		if x[0] == 123 {
			return x[0]
		}

		return 3
	}
	```
2024/06/19 10:53:23 Model "openrouter/cohere/command-r-plus" responded (7392 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/example/project/light"
	)

	func TestTypeArrayAccess(t *testing.T) {
		type args struct {
			x []int
		}
		tests := []struct {
			name string
			args args
			want int
		}{
			{
				name: "first element is 123",
				args: args{
					x: []int{123, 456},
				},
				want: 123,
			},
			{
				name: "first element is not 123",
				args: args{
					x: []int{456, 123},
				},
				want: 3,
			},
			{
				name: "empty array",
				args: args{
					x: []int{},
				},
				want: 3,
			},
			{
				name: "nil array",
				args: args{
					x: nil,
				},
				want: 3,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := light.TypeArrayAccess(tt.args.x); got != tt.want {
					t.Errorf("typeArrayAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:53:23 $ go mod tidy
go: finding module for package github.com/example/project/light
go: light tested by
	light.test imports
	github.com/example/project/light: cannot find module providing package github.com/example/project/light: module github.com/example/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/48e4a55da23b18d4dd53d568f6a9a78ee3195ecd4c570168b7f17b2d37a13a26: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
2024/06/19 10:53:25 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayConsecutiveAccess.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayConsecutiveAccess(input []int) int {
		cnt := 0
		if input[0] == 0 {
			cnt++
		}
		if input[1] == 8 {
			cnt++
		}
		return cnt
	}
	```
2024/06/19 10:53:30 Model "openrouter/cohere/command-r-plus" responded (4995 ms) with:
	```golang
	package light

	import "testing"

	func TestTypeArrayConsecutiveAccess(t *testing.T) {
		tests := []struct {
			name string
			arg  []int
			want int
		}{
			{
				name: "case1",
				arg:  []int{0, 8},
				want: 2,
			},
			{
				name: "case2",
				arg:  []int{0, 3},
				want: 1,
			},
			{
				name: "case3",
				arg:  []int{2, 8},
				want: 1,
			},
		}
		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayConsecutiveAccess(tt.arg); got != tt.want {
					t.Errorf("typeArrayConsecutiveAccess() = %v, want %v", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:53:30 $ go mod tidy
2024/06/19 10:53:30 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
=== RUN   TestTypeArrayConsecutiveAccess
=== RUN   TestTypeArrayConsecutiveAccess/case1
=== RUN   TestTypeArrayConsecutiveAccess/case2
=== RUN   TestTypeArrayConsecutiveAccess/case3
--- PASS: TestTypeArrayConsecutiveAccess (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/case1 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/case2 (0.00s)
    --- PASS: TestTypeArrayConsecutiveAccess/case3 (0.00s)
PASS
coverage: 2.8% of statements
ok  	light	0.007s	coverage: 2.8% of statements

DONE 4 tests in 0.748s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 10:53:31 Executes tests with 3 coverage objects
2024/06/19 10:53:31 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "typeArrayMultidimensionalArrayLength.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func typeArrayMultidimensionalArrayLength(x [][]int) int {
		if len(x) == 2 {
			if len(x[0]) == 2 {
				return 2
			}

			return 1
		}

		return 0
	}
	```
2024/06/19 10:53:42 Model "openrouter/cohere/command-r-plus" responded (10220 ms) with:
	```golang
	package light_test

	import (
		"testing"

		"github.com/golang-collections/collections/heap/ pâque"
	)

	func TestTypeArrayMultidimensionalArrayLength(t *testing.T) {
		tests := []struct {
			name string
			x    pâque.TypeArray
			want int
		}{
			{
				name: "2x2 array",
				x: pâque.TypeArray{
					pâque.TypeArray{1, 2},
					pâque.TypeArray{3, 4},
				},
				want: 2,
			},
			{
				name: "2x1 array",
				x: pâque.TypeArray{
					pâque.TypeArray{1},
					pâque.TypeArray{2},
				},
				want: 1,
			},
			{
				name: "3x1 array",
				x: pâque.TypeArray{
					pâque.TypeArray{1},
					pâque.TypeArray{2},
					pâque.TypeArray{3},
				},
				want: 0,
			},
			{
				name: "empty array",
				x:    pâque.TypeArray{},
				want: 0,
			},
			{
				name: "nil array",
				x:    nil,
				want: 0,
			},
		}

		for _, tt := range tests {
			t.Run(tt.name, func(t *testing.T) {
				if got := typeArrayMultidimensionalArrayLength(tt.x); got != tt.want {
					t.Errorf("typeArrayMultidimensionalArrayLength() = %d, want %d", got, tt.want)
				}
			})
		}
	}
	```
2024/06/19 10:53:42 $ go mod tidy
go: light tested by
	light.test imports
	github.com/golang-collections/collections/heap/ pâque: malformed import path "github.com/golang-collections/collections/heap/ pâque": invalid char ' '
2024/06/19 10:53:42 Querying model "openrouter/cohere/command-r-plus" with:
	Given the following Go code file "validateDate.go" with package "light", provide a test file for this code.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```golang
	package light

	func validDate(day int, month int, year int) bool {
		monthDays := []int{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}

		if year < 1583 {
			return false
		}
		if month < 1 || month > 12 {
			return false
		}
		if day < 1 {
			return false
		}
		if month == 2 {
			if (year%400) != 0 && (year%4) == 0 {
				if day > 29 {
					return false
				}
			} else {
				if day > 28 {
					return false
				}
			}
		} else {
			if day > monthDays[month-1] {
				return false
			}
		}

		return true
	}
	```
2024/06/19 10:53:49 Model "openrouter/cohere/command-r-plus" responded (7667 ms) with:
	```golang
	package light

	import "testing"

	func TestValidDate(t *testing.T) {
		// Invalid inputs (expect false)
		if validDate(0, 1, 1583) {
			t.Error("Invalid day, expected false")
		}
		if validDate(1, 0, 1583) {
			t.Error("Invalid month, expected false")
		}
		if validDate(1, 1, 1582) {
			t.Error("Invalid year, expected false")
		}
		if validDate(30, 2, 1900) {
			t.Error("Non-leap year Feb, expected false")
		}
		if validDate(30, 4, 2024) {
			t.Error("30 days in April, expected false")
		}

		// Valid inputs (expect true)
		if !validDate(1, 1, 1583) {
			t.Error("Valid date, expected true")
		}
		if !validDate(1, 12, 1583) {
			t.Error("Valid date, expected true")
		}
		if !validDate(29, 2, 1600) {
			t.Error("Leap year Feb 29th, expected true")
		}
		if !validDate(31, 1, 2024) {
			t.Error("31 days in January, expected true")
		}
		if !validDate(30, 4, 2023) {
			t.Error("30 days in April, expected true")
		}
	}```
2024/06/19 10:53:49 $ go mod tidy
2024/06/19 10:53:49 $ symflower test --language golang --workspace /tmp/eval-dev-quality1835233948/light --coverage-file /tmp/eval-dev-quality1835233948/light/coverage.json
validateDate_test.go:1:1: expected 'package', found golang

=== Errors
validateDate_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1
2024/06/19 10:53:50 Evaluated model "openrouter/cohere/command-r-plus" on task "write-tests" using language "golang" and repository "golang/light": encountered 21 problems: [exit status 1
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors

DONE 0 tests, 11 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./balancedBrackets_test.go:8:33: undefined: testing
./balancedBrackets_test.go:10:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:11:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:12:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:13:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:17:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:18:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:19:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:20:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: undefined: light.HasBalancedBrackets
./balancedBrackets_test.go:21:12: too many errors

DONE 0 tests, 11 errors in 0.130s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

balancedBrackets.go exit status 1
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/project/light
go: light tested by
	light.test imports
	github.com/your/project/light: cannot find module providing package github.com/your/project/light: module github.com/your/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0a941a7b995dc2c4892a2d63a52d8bc65285dd6aca7e74051ae37709169ed8c4: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

binarySearch.go exit status 1
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.144s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./callLoopConditionsOftenEnough_test.go:12:13: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:16:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:20:12: undefined: callLoopConditionsOftenEnough
./callLoopConditionsOftenEnough_test.go:24:12: undefined: callLoopConditionsOftenEnough

DONE 0 tests, 4 errors in 0.144s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

callLoopConditionsOftenEnough.go exit status 1
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/light
go: light tested by
	light.test imports
	example.com/light: cannot find module providing package example.com/light: unrecognized import path "example.com/light": reading https://example.com/light?go-get=1: 404 Not Found

cascadingIfElse.go exit status 1
go: finding module for package github.com/your/repository/light
go: light tested by
	light.test imports
	github.com/your/repository/light: cannot find module providing package github.com/your/repository/light: module github.com/your/repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3a3c740c3db4b13eb51c5e28d9f8b33c627a0041a7cd0c88eeaac4bdb5fd6458: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/repository/light
go: light tested by
	light.test imports
	github.com/your/repository/light: cannot find module providing package github.com/your/repository/light: module github.com/your/repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/3a3c740c3db4b13eb51c5e28d9f8b33c627a0041a7cd0c88eeaac4bdb5fd6458: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

collatzCalculator.go exit status 1
# light_test [light.test]
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd

DONE 0 tests, 4 errors in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./conditionsAnd_test.go:12:23: undefined: conditionsAnd
./conditionsAnd_test.go:17:23: undefined: conditionsAnd
./conditionsAnd_test.go:22:23: undefined: conditionsAnd
./conditionsAnd_test.go:27:23: undefined: conditionsAnd

DONE 0 tests, 4 errors in 0.192s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

conditionsAnd.go exit status 1
go: finding module for package github.com/amoondust/gtest/assert
go: finding module for package github.com/amoondust/gtest
go: light tested by
	light.test imports
	github.com/amoondust/gtest: cannot find module providing package github.com/amoondust/gtest: module github.com/amoondust/gtest: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
go: light tested by
	light.test imports
	github.com/amoondust/gtest/assert: cannot find module providing package github.com/amoondust/gtest/assert: module github.com/amoondust/gtest/assert: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/amoondust/gtest/assert
go: finding module for package github.com/amoondust/gtest
go: light tested by
	light.test imports
	github.com/amoondust/gtest: cannot find module providing package github.com/amoondust/gtest: module github.com/amoondust/gtest: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.
go: light tested by
	light.test imports
	github.com/amoondust/gtest/assert: cannot find module providing package github.com/amoondust/gtest/assert: module github.com/amoondust/gtest/assert: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/394a12c5fb9103422b82cf6e9b43ef76ca039b9874e39949d6301125641d4764: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

equilibriumIndices.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

forLoop.go exit status 1
go: finding module for package github.com/your/package/light
go: finding module for package github.com/golang-collections/collections/set
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/golang-collections/collections/set in github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your/package/light
go: finding module for package github.com/golang-collections/collections/set
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/golang-collections/collections/set in github.com/golang-collections/collections v0.0.0-20130729185459-604e922904d3
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/your/package/light
go: light tested by
	light.test imports
	github.com/your/package/light: cannot find module providing package github.com/your/package/light: module github.com/your/package/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/ede1b321abaa1b224e62b534653a65d90588f27984f330415401420b55fcd626: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

jacobiSymbol.go exit status 1
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 4 errors in 0.206s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./klarnerRadoSequence_test.go:10:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:17:13: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:24:6: undefined: initialiseKlarnerRadoSequence
./klarnerRadoSequence_test.go:25:6: undefined: initialiseKlarnerRadoSequence

DONE 0 tests, 4 errors in 0.206s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

klarnerRadoSequence.go exit status 1
# light_test [light.test]
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors

DONE 0 tests, 11 errors in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
# light_test [light.test]
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors
WARN invalid TestEvent: FAIL	light [build failed]
bad output from test2json: FAIL	light [build failed]

=== Errors
./knapsack_test.go:10:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:10:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:11:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:4: unknown field weight in struct literal of type struct{weight int; value int}
./knapsack_test.go:12:15: unknown field value in struct literal of type struct{weight int; value int}
./knapsack_test.go:15:12: undefined: MaximumValue
./knapsack_test.go:19:12: undefined: MaximumValue
./knapsack_test.go:23:12: undefined: MaximumValue
./knapsack_test.go:27:12: undefined: MaximumValue
./knapsack_test.go:27:12: too many errors

DONE 0 tests, 11 errors in 0.123s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

knapsack.go exit status 1
go: finding module for package example.com/yourpackage/light
go: light tested by
	light.test imports
	example.com/yourpackage/light: cannot find module providing package example.com/yourpackage/light: unrecognized import path "example.com/yourpackage/light": reading https://example.com/yourpackage/light?go-get=1: 500 Internal Server Error

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package example.com/yourpackage/light
go: light tested by
	light.test imports
	example.com/yourpackage/light: cannot find module providing package example.com/yourpackage/light: unrecognized import path "example.com/yourpackage/light": reading https://example.com/yourpackage/light?go-get=1: 500 Internal Server Error

largestProperDivisor.go exit status 1
go: finding module for package github.com/kaniini/go-codeclinic/code-snippets/internal/light
go: light tested by
	light.test imports
	github.com/kaniini/go-codeclinic/code-snippets/internal/light: cannot find module providing package github.com/kaniini/go-codeclinic/code-snippets/internal/light: module github.com/kaniini/go-codeclinic/code-snippets/internal/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/1e69b2455c9bb786dd15a784b7f07344f9629cc71ad4696828eca3b294cde578: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/kaniini/go-codeclinic/code-snippets/internal/light
go: light tested by
	light.test imports
	github.com/kaniini/go-codeclinic/code-snippets/internal/light: cannot find module providing package github.com/kaniini/go-codeclinic/code-snippets/internal/light: module github.com/kaniini/go-codeclinic/code-snippets/internal/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/1e69b2455c9bb786dd15a784b7f07344f9629cc71ad4696828eca3b294cde578: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

magicSquareOdd.go exit status 1
go: finding module for package github.com/smartystreets/assertions/should
go: finding module for package github.com/smartystreets/assertions
go: downloading github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions in github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions/should in github.com/smartystreets/assertions v1.16.0
go: light tested by
	light.test imports
	github.com/smartystreets/assertions: github.com/smartystreets/assertions@v1.16.0: parsing go.mod:
	module declares its path as: github.com/smarty/assertions
	        but was required as: github.com/smartystreets/assertions

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/smartystreets/assertions/should
go: finding module for package github.com/smartystreets/assertions
go: downloading github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions in github.com/smartystreets/assertions v1.16.0
go: found github.com/smartystreets/assertions/should in github.com/smartystreets/assertions v1.16.0
go: light tested by
	light.test imports
	github.com/smartystreets/assertions: github.com/smartystreets/assertions@v1.16.0: parsing go.mod:
	module declares its path as: github.com/smarty/assertions
	        but was required as: github.com/smartystreets/assertions

matchBytes.go exit status 1
go: finding module for package github.com/stretchr/testify/assert
go: finding module for package github.com/golang-collections/collections/string
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/string
go: light tested by
	light.test imports
	github.com/golang-collections/collections/string: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/string

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/stretchr/testify/assert
go: finding module for package github.com/golang-collections/collections/string
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.9.0
go: finding module for package github.com/golang-collections/collections/string
go: light tested by
	light.test imports
	github.com/golang-collections/collections/string: module github.com/golang-collections/collections@latest found (v0.0.0-20130729185459-604e922904d3), but does not contain package github.com/golang-collections/collections/string

phoneNumber.go exit status 1
go: finding module for package github.com/your-repository/light
go: light tested by
	light.test imports
	github.com/your-repository/light: cannot find module providing package github.com/your-repository/light: module github.com/your-repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/53c0dc6c4be2a093fcfbba5fac3d783f22c4da6814fa639fa0743b0412a37b7f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-repository/light
go: light tested by
	light.test imports
	github.com/your-repository/light: cannot find module providing package github.com/your-repository/light: module github.com/your-repository/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/53c0dc6c4be2a093fcfbba5fac3d783f22c4da6814fa639fa0743b0412a37b7f: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleIfElse.go exit status 1
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-org/your-project/light
go: light tested by
	light.test imports
	github.com/your-org/your-project/light: cannot find module providing package github.com/your-org/your-project/light: module github.com/your-org/your-project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/0238d5e5bf35c8f529107419b1a5b208f802db8711e914000fb354bc47491bc0: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

simpleSwitchWithReturn.go exit status 1
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/your-name/light
go: light tested by
	light.test imports
	github.com/your-name/light: cannot find module providing package github.com/your-name/light: module github.com/your-name/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/30099ff5ee19084f44cc8f7390c3881bb8f5012afac76638b20e500c40279e86: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

sort.go exit status 1
go: finding module for package github.com/example/project/light
go: light tested by
	light.test imports
	github.com/example/project/light: cannot find module providing package github.com/example/project/light: module github.com/example/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/48e4a55da23b18d4dd53d568f6a9a78ee3195ecd4c570168b7f17b2d37a13a26: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: finding module for package github.com/example/project/light
go: light tested by
	light.test imports
	github.com/example/project/light: cannot find module providing package github.com/example/project/light: module github.com/example/project/light: git ls-remote -q origin in /home/ubuntu/go/pkg/mod/cache/vcs/48e4a55da23b18d4dd53d568f6a9a78ee3195ecd4c570168b7f17b2d37a13a26: exit status 128:
	fatal: could not read Username for 'https://github.com': terminal prompts disabled
Confirm the import path was entered correctly.
If this is a private repository, see https://golang.org/doc/faq#git_https for additional information.

typeArrayAccess.go exit status 1
go: light tested by
	light.test imports
	github.com/golang-collections/collections/heap/ pâque: malformed import path "github.com/golang-collections/collections/heap/ pâque": invalid char ' '

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:92
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:102
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
go: light tested by
	light.test imports
	github.com/golang-collections/collections/heap/ pâque: malformed import path "github.com/golang-collections/collections/heap/ pâque": invalid char ' '

typeArrayMultidimensionalArrayLength.go exit status 1
validateDate_test.go:1:1: expected 'package', found golang

=== Errors
validateDate_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/golang.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/golang/language.go:128
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
validateDate_test.go:1:1: expected 'package', found golang

=== Errors
validateDate_test.go:1:1: expected 'package', found golang

DONE 0 tests, 1 error in 0.030s
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: execution failed: exit status 1

validateDate.go]
