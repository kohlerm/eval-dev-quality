2024/06/19 08:48:36 Evaluating model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light"
2024/06/19 08:48:36 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/19 08:48:42 Model "openrouter/google/gemini-pro-1.5" responded (6820 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testHasBalancedBrackets_EmptyString() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("".toCharArray()));
	    }

	    @Test
	    void testHasBalancedBrackets_SingleBracketPair() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[]".toCharArray()));
	    }

	    @Test
	    void testHasBalancedBrackets_MultipleBracketPairs() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[][]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[][][]]".toCharArray()));
	    }

	    @Test
	    void testHasBalancedBrackets_UnbalancedBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("][".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[[[".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("]]]".toCharArray()));
	    }

	    @Test
	    void testHasBalancedBrackets_InvalidCharacters() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("a".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[a]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("123".toCharArray()));
	    }
	}
	```
2024/06/19 08:48:42 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn13213994157966937782resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.268 s
[INFO] Finished at: 2024-06-19T08:48:52Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:48:52 Executes tests with 14 coverage objects
2024/06/19 08:48:52 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/19 08:49:02 Model "openrouter/google/gemini-pro-1.5" responded (9994 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BinarySearchTest {

	    @Test
	    void testBinarySearchFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 11;
	        int expectedIndex = 4;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchNotFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 9;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchEmptyArray() {
	        int[] a = {};
	        int x = 5;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchFirstElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 2;
	        int expectedIndex = 0;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchLastElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 12;
	        int expectedIndex = 5;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	}
	```
2024/06/19 08:49:02 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16061090614861309737resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.419 s
[INFO] Finished at: 2024-06-19T08:49:12Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:49:12 Executes tests with 15 coverage objects
2024/06/19 08:49:12 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/19 08:49:18 Model "openrouter/google/gemini-pro-1.5" responded (6475 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void testCallLoopConditionsOftenEnough_LessThan10() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 10);
	        assertEquals(0, result);
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_GreaterThan20() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 10);
	        assertEquals(0, result);
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_LessThan20Iterations() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 10);
	        assertEquals(15, result);
	    }

	    @Test
	    void testCallLoopConditionsOftenEnough_MoreThan20Iterations() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 30);
	        assertEquals(20, result);
	    }
	}
	```
2024/06/19 08:49:18 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15417105716295410611resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.938 s
[INFO] Finished at: 2024-06-19T08:49:30Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:49:30 Executes tests with 13 coverage objects
2024/06/19 08:49:30 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/19 08:49:34 Model "openrouter/google/gemini-pro-1.5" responded (4446 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElse_One() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElse_Three() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElse_Other() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	    }
	}
	```
2024/06/19 08:49:34 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn18336199649706262563resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.547 s
[INFO] Finished at: 2024-06-19T08:49:43Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:49:44 Executes tests with 8 coverage objects
2024/06/19 08:49:44 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/19 08:49:50 Model "openrouter/google/gemini-pro-1.5" responded (6623 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class CollatzCalculatorTest {

	    @Test
	    void testComputeStepCountWithOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }

	    @Test
	    void testComputeStepCountWithEvenNumber() {
	        assertEquals(4, CollatzCalculator.computeStepCount(16));
	    }

	    @Test
	    void testComputeStepCountWithOddNumber() {
	        assertEquals(7, CollatzCalculator.computeStepCount(3));
	    }

	    @Test
	    void testComputeStepCountWithLargeNumber() {
	        assertEquals(111, CollatzCalculator.computeStepCount(27));
	    }

	    @Test
	    void testComputeStepCountWithZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }

	    @Test
	    void testComputeStepCountWithNegativeNumber() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-1));
	    }
	}
	```
2024/06/19 08:49:50 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn11195127751342914260resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.801 s
[INFO] Finished at: 2024-06-19T08:50:02Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:50:02 Executes tests with 13 coverage objects
2024/06/19 08:50:02 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/19 08:50:07 Model "openrouter/google/gemini-pro-1.5" responded (4824 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void testConditionsAndTrue() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseXNotA() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseYNotB() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }

	    @Test
	    void testConditionsAndFalseBothNotMatch() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'D'));
	    }
	}
	```
2024/06/19 08:50:07 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn14389162711482485438resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.243 s
[INFO] Finished at: 2024-06-19T08:50:16Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:50:16 Executes tests with 5 coverage objects
2024/06/19 08:50:16 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/19 08:50:21 Model "openrouter/google/gemini-pro-1.5" responded (4562 ms) with:
	```java
	import com.eval.EqulibriumIndices;
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class EqulibriumIndicesTest {

	    @Test
	    void equlibriumIndicesTest() {
	        assertEquals("1;3;5;", EqulibriumIndices.equlibriumIndices(new int[]{-7, 1, 5, 2, -4, 3, 0}));
	        assertEquals("", EqulibriumIndices.equlibriumIndices(new int[]{1, 2, 3}));
	        assertEquals("0;", EqulibriumIndices.equlibriumIndices(new int[]{0}));
	        assertEquals("0;1;2;3;", EqulibriumIndices.equlibriumIndices(new int[]{0, 0, 0, 0}));
	    }
	}
	```
2024/06/19 08:50:21 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.925 s\n[INFO] Finished at: 2024-06-19T08:50:25Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047e000}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000318b8, {0xc0000318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00019c0c0, 0x26}, 0x0, {0xc000043680, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00019c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7fab3365fdb8?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc0004c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 08:50:25 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/19 08:50:29 Model "openrouter/google/gemini-pro-1.5" responded (3685 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class ForLoopTest {

	    @Test
	    void forLoop_zero() {
	        int result = ForLoop.forLoop(0);
	        assertEquals(0, result);
	    }

	    @Test
	    void forLoop_positive() {
	        int result = ForLoop.forLoop(5);
	        assertEquals(20, result);
	    }
	}
	```
2024/06/19 08:50:29 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1261158721415346200resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.148 s
[INFO] Finished at: 2024-06-19T08:50:39Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:50:39 Executes tests with 9 coverage objects
2024/06/19 08:50:39 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/19 08:50:50 Model "openrouter/google/gemini-pro-1.5" responded (11398 ms) with:
	```java
	import com.eval.JacobiSymbol;
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbol() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(2, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(4, 5));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(5, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(10, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(11, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(12, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(13, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(14, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(15, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(16, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(17, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(18, 19));
	    }

	    @Test
	    void testJacobiSymbolInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 5));
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(1, 4));
	    }

	    @Test
	    void testJacobiSymbolKGreaterThanN() {
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(7, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(11, 9));
	    }

	    @Test
	    void testJacobiSymbolKEqualsZero() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(0, 5));
	    }
	}
	```
2024/06/19 08:50:50 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.404 s\n[INFO] Finished at: 2024-06-19T08:50:55Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000556030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00002d8b8, {0xc00002d8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000654030, 0x26}, 0x0, {0xc0004bd0e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000654030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ce178, {0xc0004ce000?, 0x7fa15eb30858?, 0xc0004ce178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ce000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ce000?}, {0xc000040080?, 0x274c500?, 0xc0004ce000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc00007e058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 08:50:55 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/19 08:51:07 Model "openrouter/google/gemini-pro-1.5" responded (12224 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class KlarnerRadoSequenceTest {

	    @Test
	    void testInitialiseKlarnerRadoSequence() {
	        assertArrayEquals(new int[]{0, 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 27, 32, 36, 48, 54, 64, 72, 81, 96, 108, 128, 144, 162, 192, 216, 243, 256, 288, 324, 384, 432, 486, 512, 576, 648, 729, 768, 864, 972, 1024, 1152, 1296, 1458, 1536, 1728, 1944, 2048, 2304, 2592, 2916, 3072, 3456, 3888, 4096, 4608, 5184, 5832, 6144, 6912, 7776, 8192, 9216, 10368, 11664, 12288, 13824, 15552, 16384, 18432, 20736, 23328, 24576, 27648, 31104, 32768, 36864, 41472, 46656, 49152, 55296, 62208, 65536, 73728, 82944, 93312, 98304}, KlarnerRadoSequence.initialiseKlarnerRadoSequence(100));
	    }
	}
	```
2024/06/19 08:51:07 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16580296211817684019resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.226 s
[INFO] Finished at: 2024-06-19T08:51:18Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:51:18 Executes tests with 18 coverage objects
2024/06/19 08:51:18 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/19 08:51:30 Model "openrouter/google/gemini-pro-1.5" responded (11999 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KnapsackTest {

	    @Test
	    void testMaximumValue_EmptyItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = new Item[0];
	        int maximumWeight = 10;
	        int expectedValue = 0;
	        assertEquals(expectedValue, knapsack.maximumValue(maximumWeight, items));
	    }

	    @Test
	    void testMaximumValue_ZeroWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = { new Knapsack.Item() {{ weight = 1; value = 10; }} };
	        int maximumWeight = 0;
	        int expectedValue = 0;
	        assertEquals(expectedValue, knapsack.maximumValue(maximumWeight, items));
	    }

	    @Test
	    void testMaximumValue_SingleItemFits() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = { new Knapsack.Item() {{ weight = 5; value = 10; }} };
	        int maximumWeight = 10;
	        int expectedValue = 10;
	        assertEquals(expectedValue, knapsack.maximumValue(maximumWeight, items));
	    }


	    @Test
	    void testMaximumValue_SingleItemDoesNotFit() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = { new Knapsack.Item() {{ weight = 10; value = 20; }} };
	        int maximumWeight = 5;
	        int expectedValue = 0;
	        assertEquals(expectedValue, knapsack.maximumValue(maximumWeight, items));
	    }

	    @Test
	    void testMaximumValue_MultipleItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {
	            new Knapsack.Item() {{ weight = 1; value = 6; }},
	            new Knapsack.Item() {{ weight = 2; value = 10; }},
	            new Knapsack.Item() {{ weight = 3; value = 12; }}
	        };
	        int maximumWeight = 5;
	        int expectedValue = 22;
	        assertEquals(expectedValue, knapsack.maximumValue(maximumWeight, items));
	    }
	}
	```
2024/06/19 08:51:30 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 18 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.736 s\n[INFO] Finished at: 2024-06-19T08:51:36Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000690020}, {0xffa8c0?, 0xc000012048})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004838b8, {0xc0004838a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0c0, 0x26}, 0x0, {0xc000674ae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f1e2e723538?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e2000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 08:51:36 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/19 08:51:41 Model "openrouter/google/gemini-pro-1.5" responded (5376 ms) with:
	```java
	import com.eval.LargestProperDivisor;
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class LargestProperDivisorTest {

	    @Test
	    void testLargestProperDivisorEven() {
	        assertEquals(4, LargestProperDivisor.largestProperDivisor(8));
	    }

	    @Test
	    void testLargestProperDivisorOdd() {
	        assertEquals(3, LargestProperDivisor.largestProperDivisor(9));
	    }

	    @Test
	    void testLargestProperDivisorPrime() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(7));
	    }

	    @Test
	    void testLargestProperDivisorOne() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    void testLargestProperDivisorLessThanOne() {
	        assertThrows(IllegalArgumentException.class, () -> LargestProperDivisor.largestProperDivisor(0));
	    }
	}
	```
2024/06/19 08:51:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.953 s\n[INFO] Finished at: 2024-06-19T08:51:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454020}, {0xffa8c0?, 0xc0006520f0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fd8b8, {0xc0000fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00013e2d0, 0x26}, 0x0, {0xc0006227e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00013e2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00011a578, {0xc00011a400?, 0x7f6e28c85918?, 0xc00011a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00011a400}, {0xc000040080?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00011a400?}, {0xc000040080?, 0x274c500?, 0xc00011a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 08:51:47 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/19 08:51:55 Model "openrouter/google/gemini-pro-1.5" responded (8102 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	import com.eval.MagicSquareOdd;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd3() {
	        int[][] expected = {
	                {8, 1, 6},
	                {3, 5, 7},
	                {4, 9, 2}
	        };
	        int[][] actual = MagicSquareOdd.magicSquareOdd(3);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testMagicSquareOdd5() {
	        int[][] expected = {
	                {17, 24, 1, 8, 15},
	                {23, 5, 7, 14, 16},
	                {4, 6, 13, 20, 22},
	                {10, 12, 19, 21, 3},
	                {11, 18, 25, 2, 9}
	        };
	        int[][] actual = MagicSquareOdd.magicSquareOdd(5);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testMagicSquareOddInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(2));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(0));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(-1));
	    }
	}
	```
2024/06/19 08:51:55 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1111962142832450950resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.795 s
[INFO] Finished at: 2024-06-19T08:52:09Z
[INFO] ------------------------------------------------------------------------

Total coverage 9.401709%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:52:09 Executes tests with 28 coverage objects
2024/06/19 08:52:09 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/19 08:52:19 Model "openrouter/google/gemini-pro-1.5" responded (10381 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	public class MatchBytesTest {

	    @Test
	    void testMatchBytes_EmptyArrays() {
	        assertTrue(MatchBytes.matchBytes(new byte[0], new byte[0]));
	    }

	    @Test
	    void testMatchBytes_EqualArrays() {
	        byte[] arr1 = { 'a', 'B', 'c', 'D'};
	        byte[] arr2 = { 'a', 'B', 'c', 'D'};
	        assertTrue(MatchBytes.matchBytes(arr1, arr2));
	    }

	    @Test
	    void testMatchBytes_DifferentArrays() {
	        byte[] arr1 = { 'a', 'B', 'c', 'D'};
	        byte[] arr2 = { 'a', 'b', 'C', 'd'};
	        assertTrue(MatchBytes.matchBytes(arr1, arr2));
	    }
	    
	    @Test
	    void testMatchBytes_DifferentArrays2() {
	        byte[] arr1 = { 'a', 'B', 'c', 'D'};
	        byte[] arr2 = { 'a', 'b', 'C', 'e'};
	        assertFalse(MatchBytes.matchBytes(arr1, arr2));
	    }

	    @Test
	    void testMatchBytes_DifferentLengthArrays() {
	        byte[] arr1 = { 'a', 'B', 'c', 'D'};
	        byte[] arr2 = { 'a', 'B', 'c'};
	        assertFalse(MatchBytes.matchBytes(arr1, arr2));
	    }
	    
	    @Test
	    void testMatchBytes_NonLetterCharacter() {
	        byte[] arr1 = { 'a', 'B', '1', 'D'};
	        byte[] arr2 = { 'a', 'B', '1', 'e'};
	        assertFalse(MatchBytes.matchBytes(arr1, arr2));
	    }
	}
	```
2024/06/19 08:52:19 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4479783436443445473resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.511 s
[INFO] Finished at: 2024-06-19T08:52:32Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:52:32 Executes tests with 13 coverage objects
2024/06/19 08:52:32 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/19 08:52:38 Model "openrouter/google/gemini-pro-1.5" responded (5798 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PascalsTriangleTest {

	    @Test
	    void testGenerateTriangleValidInput() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}};
	        int[][] actual = pt.generateTriangle(5);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleZeroRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {};
	        int[][] actual = pt.generateTriangle(0);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleNegativeRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        assertThrows(IllegalArgumentException.class, () -> pt.generateTriangle(-1));
	    }
	}
	```
2024/06/19 08:52:38 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn11745673291028854766resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.262 s
[INFO] Finished at: 2024-06-19T08:52:52Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:52:52 Executes tests with 14 coverage objects
2024/06/19 08:52:52 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/19 08:53:04 Model "openrouter/google/gemini-pro-1.5" responded (11580 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class PhoneNumberTest {

	    @Test
	    void testExtractDigits_ValidNumber() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123-456-7890"));
	    }

	    @Test
	    void testExtractDigits_NumberWithSpaces() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123 456 7890"));
	    }

	    @Test
	    void testExtractDigits_NumberWithDots() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123.456.7890"));
	    }

	    @Test
	    void testExtractDigits_NumberWithParentheses() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("(123) 456-7890"));
	    }

	    @Test
	    void testExtractDigits_NumberWithPlus() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("+1 123-456-7890"));
	    }

	    @Test
	    void testExtractDigits_InvalidCharacterHyphen() {
	        assertThrows(IllegalArgumentException.class, () ->
	                PhoneNumber.extractDigits("123--456-7890"));
	    }

	    @Test
	    void testExtractDigits_InvalidCharacterAt() {
	        assertThrows(IllegalArgumentException.class, () ->
	                PhoneNumber.extractDigits("123@4567890"));
	    }

	    @Test
	    void testExtractDigits_InvalidCharacterColon() {
	        assertThrows(IllegalArgumentException.class, () ->
	                PhoneNumber.extractDigits("123:456:7890"));
	    }

	    @Test
	    void testExtractDigits_InvalidCharacterExclamation() {
	        assertThrows(IllegalArgumentException.class, () ->
	                PhoneNumber.extractDigits("123!456!7890"));
	    }

	    @Test
	    void testExtractDigits_InvalidCharacterLetter() {
	        assertThrows(IllegalArgumentException.class, () ->
	                PhoneNumber.extractDigits("123A456B7890"));
	    }
	}

	```
2024/06/19 08:53:04 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.142 s\n[INFO] Finished at: 2024-06-19T08:53:08Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc000616108})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004138b8, {0xc0004138a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c9c0, 0x26}, 0x0, {0xc000596d20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c9c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079578, {0xc000079400?, 0x7fe41639b598?, 0xc000079578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079400}, {0xc000192000?, 0x0?, 0xc0004b9ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079400?}, {0xc000192000?, 0x274c500?, 0xc000079400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 08:53:08 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/19 08:53:12 Model "openrouter/google/gemini-pro-1.5" responded (3628 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleIfElseTest {

	    @Test
	    void testSimpleIfElse_WhenInputIsOne() {
	        int result = SimpleIfElse.simpleIfElse(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void testSimpleIfElse_WhenInputIsNotOne() {
	        int result = SimpleIfElse.simpleIfElse(2);
	        assertEquals(1, result);
	    }
	}
	```
2024/06/19 08:53:12 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15847002289984334180resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.562 s
[INFO] Finished at: 2024-06-19T08:53:24Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:53:24 Executes tests with 5 coverage objects
2024/06/19 08:53:24 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/19 08:53:28 Model "openrouter/google/gemini-pro-1.5" responded (4204 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        int result = SimpleSwitchWithReturn.simpleSwitchWithReturn(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefault() {
	        int result = SimpleSwitchWithReturn.simpleSwitchWithReturn(2);
	        assertEquals(1, result);
	    }
	}
	```
2024/06/19 08:53:28 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12663709606684660772resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.287 s
[INFO] Finished at: 2024-06-19T08:53:42Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:53:43 Executes tests with 6 coverage objects
2024/06/19 08:53:43 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/19 08:53:49 Model "openrouter/google/gemini-pro-1.5" responded (6388 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SortTest {

	    @Test
	    void testIsSortedEmptyArray() {
	        int[] a = {};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void testIsSortedSingleElement() {
	        int[] a = {1};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void testIsSortedSortedArray() {
	        int[] a = {1, 2, 3, 4, 5};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void testIsSortedUnsortedArray() {
	        int[] a = {1, 3, 2, 4, 5};
	        assertFalse(Sort.isSorted(a));
	    }

	    @Test
	    void testIsSortedUnsortedArrayWithDuplicates() {
	        int[] a = {1, 3, 2, 2, 5};
	        assertFalse(Sort.isSorted(a));
	    }
	}
	```
2024/06/19 08:53:49 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4996298672968272245resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.895 s
[INFO] Finished at: 2024-06-19T08:53:59Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:53:59 Executes tests with 6 coverage objects
2024/06/19 08:53:59 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/19 08:54:04 Model "openrouter/google/gemini-pro-1.5" responded (4401 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccess_FirstElement123() {
	        int[] x = {123, 4, 5};
	        assertEquals(123, TypeArrayAccess.typeArrayAccess(x));
	    }

	    @Test
	    void testTypeArrayAccess_FirstElementNot123() {
	        int[] x = {1, 4, 5};
	        assertEquals(3, TypeArrayAccess.typeArrayAccess(x));
	    }
	}
	```
2024/06/19 08:54:04 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn5254803576159870126resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.608 s
[INFO] Finished at: 2024-06-19T08:54:15Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:54:15 Executes tests with 5 coverage objects
2024/06/19 08:54:15 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/19 08:54:22 Model "openrouter/google/gemini-pro-1.5" responded (6980 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayConsecutiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccess_BothMatch() {
	        int[] input = {0, 8};
	        assertEquals(2, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_FirstMatches() {
	        int[] input = {0, 1};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_SecondMatches() {
	        int[] input = {1, 8};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_NoneMatch() {
	        int[] input = {1, 1};
	        assertEquals(0, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }
	}
	```
2024/06/19 08:54:22 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7408772306752187389resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.512 s
[INFO] Finished at: 2024-06-19T08:54:34Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:54:34 Executes tests with 9 coverage objects
2024/06/19 08:54:34 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/19 08:54:41 Model "openrouter/google/gemini-pro-1.5" responded (6992 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayMultidimensionalArrayLengthTest {

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_BothDimensionsLength2() {
	        int[][] x = {{1, 2}, {3, 4}};
	        int expected = 2;
	        int actual = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_FirstDimensionLength2() {
	        int[][] x = {{1}, {2}};
	        int expected = 1;
	        int actual = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_FirstDimensionLengthNot2() {
	        int[][] x = {{1, 2, 3}, {4, 5, 6}};
	        int expected = 0;
	        int actual = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(expected, actual);
	    }
	}
	```
2024/06/19 08:54:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7755671317531622059resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.733 s
[INFO] Finished at: 2024-06-19T08:54:56Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:54:56 Executes tests with 6 coverage objects
2024/06/19 08:54:56 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/19 08:55:03 Model "openrouter/google/gemini-pro-1.5" responded (7491 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ValidDateTest {

	    @Test
	    void testValidDate() {
	        assertTrue(ValidDate.validDate(1, 1, 2000));
	        assertTrue(ValidDate.validDate(29, 2, 2000));
	        assertTrue(ValidDate.validDate(28, 2, 2001));
	        assertTrue(ValidDate.validDate(31, 12, 2000));
	        assertTrue(ValidDate.validDate(30, 4, 2000));
	    }

	    @Test
	    void testInvalidDate() {
	        assertFalse(ValidDate.validDate(32, 1, 2000));
	        assertFalse(ValidDate.validDate(29, 2, 2001));
	        assertFalse(ValidDate.validDate(31, 4, 2000));
	        assertFalse(ValidDate.validDate(0, 1, 2000));
	        assertFalse(ValidDate.validDate(1, 0, 2000));
	        assertFalse(ValidDate.validDate(1, 13, 2000));
	        assertFalse(ValidDate.validDate(1, 1, 1582));
	    }
	}
	```
2024/06/19 08:55:03 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn10909137853182917870resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.633 s
[INFO] Finished at: 2024-06-19T08:55:18Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:55:18 Executes tests with 21 coverage objects
2024/06/19 08:55:18 Evaluated model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light": encountered 5 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.925 s\n[INFO] Finished at: 2024-06-19T08:50:25Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047e000}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000318b8, {0xc0000318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00019c0c0, 0x26}, 0x0, {0xc000043680, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00019c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7fab3365fdb8?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc0004c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.925 s\n[INFO] Finished at: 2024-06-19T08:50:25Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[9,49] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,43] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,45] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[12,51] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047e000}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000318b8, {0xc0000318a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00019c0c0, 0x26}, 0x0, {0xc000043680, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00019c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7fab3365fdb8?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc0004c5ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/EqulibriumIndices.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.404 s\n[INFO] Finished at: 2024-06-19T08:50:55Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000556030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00002d8b8, {0xc00002d8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000654030, 0x26}, 0x0, {0xc0004bd0e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000654030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ce178, {0xc0004ce000?, 0x7fa15eb30858?, 0xc0004ce178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ce000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ce000?}, {0xc000040080?, 0x274c500?, 0xc0004ce000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc00007e058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.404 s\n[INFO] Finished at: 2024-06-19T08:50:55Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,72] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,38] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[35,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[40,37] jacobiSymbol(int,int) is not public in com.eval.JacobiSymbol; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000556030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00002d8b8, {0xc00002d8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000654030, 0x26}, 0x0, {0xc0004bd0e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000654030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ce178, {0xc0004ce000?, 0x7fa15eb30858?, 0xc0004ce178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ce000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ce000?}, {0xc000040080?, 0x274c500?, 0xc0004ce000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc00007e058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/JacobiSymbol.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 18 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.736 s\n[INFO] Finished at: 2024-06-19T08:51:36Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000690020}, {0xffa8c0?, 0xc000012048})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004838b8, {0xc0004838a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0c0, 0x26}, 0x0, {0xc000674ae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f1e2e723538?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e2000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 18 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.736 s\n[INFO] Finished at: 2024-06-19T08:51:36Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,26] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[39,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[48,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[49,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[50,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,13] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[51,33] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000690020}, {0xffa8c0?, 0xc000012048})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004838b8, {0xc0004838a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0c0, 0x26}, 0x0, {0xc000674ae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f1e2e723538?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e2000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.953 s\n[INFO] Finished at: 2024-06-19T08:51:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454020}, {0xffa8c0?, 0xc0006520f0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fd8b8, {0xc0000fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00013e2d0, 0x26}, 0x0, {0xc0006227e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00013e2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00011a578, {0xc00011a400?, 0x7f6e28c85918?, 0xc00011a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00011a400}, {0xc000040080?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00011a400?}, {0xc000040080?, 0x274c500?, 0xc00011a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.953 s\n[INFO] Finished at: 2024-06-19T08:51:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[10,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[20,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[25,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[30,80] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454020}, {0xffa8c0?, 0xc0006520f0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fd8b8, {0xc0000fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00013e2d0, 0x26}, 0x0, {0xc0006227e0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00013e2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc00011a578, {0xc00011a400?, 0x7f6e28c85918?, 0xc00011a578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc00011a400}, {0xc000040080?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc00011a400?}, {0xc000040080?, 0x274c500?, 0xc00011a400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/LargestProperDivisor.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.142 s\n[INFO] Finished at: 2024-06-19T08:53:08Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc000616108})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004138b8, {0xc0004138a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c9c0, 0x26}, 0x0, {0xc000596d20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c9c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079578, {0xc000079400?, 0x7fe41639b598?, 0xc000079578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079400}, {0xc000192000?, 0x0?, 0xc0004b9ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079400?}, {0xc000192000?, 0x274c500?, 0xc000079400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.142 s\n[INFO] Finished at: 2024-06-19T08:53:08Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[8,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[13,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[23,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[28,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[34,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[40,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[46,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[52,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[58,17] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc000616108})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004138b8, {0xc0004138a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c9c0, 0x26}, 0x0, {0xc000596d20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c9c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079578, {0xc000079400?, 0x7fe41639b598?, 0xc000079578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079400}, {0xc000192000?, 0x0?, 0xc0004b9ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079400?}, {0xc000192000?, 0x274c500?, 0xc000079400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/PhoneNumber.java]
2024/06/19 08:58:41 Evaluating model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light"
2024/06/19 08:58:41 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/19 08:58:46 Model "openrouter/google/gemini-pro-1.5" responded (4948 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testBalancedBrackets() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[][]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[][]]".toCharArray()));
	    }

	    @Test
	    void testUnbalancedBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("][".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[]]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[[[]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets(
	                "[ invalid ]".toCharArray()));
	    }
	}
	```
2024/06/19 08:58:46 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn18093276795677866618resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.027 s
[INFO] Finished at: 2024-06-19T08:58:55Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:58:56 Executes tests with 14 coverage objects
2024/06/19 08:58:56 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/19 08:59:07 Model "openrouter/google/gemini-pro-1.5" responded (11815 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	public class BinarySearchTest {

	    @Test
	    void testBinarySearchFound() {
	        int[] a = {2, 5, 7, 12, 15, 21, 28, 31, 36};
	        int x = 21;
	        int expectedIndex = 5;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchNotFound() {
	        int[] a = {2, 5, 7, 12, 15, 21, 28, 31, 36};
	        int x = 10;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchEmptyArray() {
	        int[] a = {};
	        int x = 10;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchFirstElement() {
	        int[] a = {2, 5, 7, 12, 15, 21, 28, 31, 36};
	        int x = 2;
	        int expectedIndex = 0;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchLastElement() {
	        int[] a = {2, 5, 7, 12, 15, 21, 28, 31, 36};
	        int x = 36;
	        int expectedIndex = 8;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	}
	```
2024/06/19 08:59:07 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17893274707005387393resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.245 s
[INFO] Finished at: 2024-06-19T08:59:21Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:59:21 Executes tests with 15 coverage objects
2024/06/19 08:59:22 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/19 08:59:29 Model "openrouter/google/gemini-pro-1.5" responded (7047 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void callLoopConditionsOftenEnough_xLessThan10_shouldReturn0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_xGreaterThan20_shouldReturn0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iLessThan20_shouldReturnX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 20);
	        assertEquals(15, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iGreaterThan20_shouldReturnXDividedBy2() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 30);
	        assertEquals(20, result);
	    }
	}
	```
2024/06/19 08:59:29 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17553607854467733644resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.795 s
[INFO] Finished at: 2024-06-19T08:59:44Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:59:44 Executes tests with 13 coverage objects
2024/06/19 08:59:44 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/19 08:59:48 Model "openrouter/google/gemini-pro-1.5" responded (4067 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElse_One() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElse_Three() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElse_Other() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	    }
	}
	```
2024/06/19 08:59:48 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17748229440823564937resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.345 s
[INFO] Finished at: 2024-06-19T08:59:59Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 08:59:59 Executes tests with 8 coverage objects
2024/06/19 08:59:59 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/19 09:00:05 Model "openrouter/google/gemini-pro-1.5" responded (5910 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CollatzCalculatorTest {

	    @Test
	    void testComputeStepCountWithOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }

	    @Test
	    void testComputeStepCountWithEvenNumber() {
	        assertEquals(4, CollatzCalculator.computeStepCount(8));
	    }

	    @Test
	    void testComputeStepCountWithOddNumber() {
	        assertEquals(7, CollatzCalculator.computeStepCount(3));
	    }

	    @Test
	    void testComputeStepCountWithLargeNumber() {
	        assertEquals(111, CollatzCalculator.computeStepCount(27));
	    }

	    @Test
	    void testComputeStepCountWithZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }

	    @Test
	    void testComputeStepCountWithNegativeNumber() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-5));
	    }
	}
	```
2024/06/19 09:00:05 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8326479021811126762resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.613 s
[INFO] Finished at: 2024-06-19T09:00:16Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:00:16 Executes tests with 13 coverage objects
2024/06/19 09:00:16 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/19 09:00:20 Model "openrouter/google/gemini-pro-1.5" responded (4281 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void conditionsAnd_true() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void conditionsAnd_false_X() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void conditionsAnd_false_Y() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }
	}
	```
2024/06/19 09:00:20 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn5093944541421219561resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.487 s
[INFO] Finished at: 2024-06-19T09:00:32Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:00:32 Executes tests with 5 coverage objects
2024/06/19 09:00:32 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/19 09:00:41 Model "openrouter/google/gemini-pro-1.5" responded (8347 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class EqulibriumIndicesTest {

	    @Test
	    void equlibriumIndices_emptyArray() {
	        int[] sequence = {};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	    
	    @Test
	    void equlibriumIndices_singleElementArray() {
	        int[] sequence = {1};
	        String expected = "0;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_noEquilibriumIndex() {
	        int[] sequence = {1, 2, 3, 4, 5};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_oneEquilibriumIndex() {
	        int[] sequence = {1, 3, 5, 2, 1};
	        String expected = "2;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_multipleEquilibriumIndices() {
	        int[] sequence = {1, 2, 3, 4, 3, 2, 1};
	        String expected = "3;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	}
	```
2024/06/19 09:00:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.844 s\n[INFO] Finished at: 2024-06-19T09:00:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007a4080}, {0xffa8c0?, 0xc0007820a8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00061a090, 0x26}, 0x0, {0xc000780f60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00061a090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7faff3276df8?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e4000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e4000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:00:47 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/19 09:00:50 Model "openrouter/google/gemini-pro-1.5" responded (3466 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class ForLoopTest {

	    @Test
	    void forLoop_zero() {
	        assertEquals(0, ForLoop.forLoop(0));
	    }

	    @Test
	    void forLoop_positive() {
	        assertEquals(4, ForLoop.forLoop(2));
	    }
	}
	```
2024/06/19 09:00:50 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17361707631910441264resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.867 s
[INFO] Finished at: 2024-06-19T09:01:01Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:01:01 Executes tests with 9 coverage objects
2024/06/19 09:01:01 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/19 09:01:12 Model "openrouter/google/gemini-pro-1.5" responded (11473 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbolInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 5));
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(2, 4));
	    }

	    @Test
	    void testJacobiSymbolGeneralCases() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(2, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(4, 5));

	        assertEquals(1, JacobiSymbol.jacobiSymbol(10, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(11, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(12, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(13, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(14, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(15, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(16, 19));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(17, 19));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(18, 19));
	    }

	    @Test
	    void testJacobiSymbolKZero() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(0, 5));
	    }

	    @Test
	    void testJacobiSymbolLargeNumbers() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1234567, 9876543));
	    }

	    @Test
	    void testJacobiSymbolKGreaterThanN() {
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(7, 5));
	    }
	}
	```
2024/06/19 09:01:12 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15085685055024704281resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.613 s
[INFO] Finished at: 2024-06-19T09:01:22Z
[INFO] ------------------------------------------------------------------------

Total coverage 8.547009%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:01:23 Executes tests with 25 coverage objects
2024/06/19 09:01:23 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/19 09:01:36 Model "openrouter/google/gemini-pro-1.5" responded (13022 ms) with:
	```java
	import com.eval.KlarnerRadoSequence;
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KlarnerRadoSequenceTest {

	    @Test
	    void testKlarnerRadoSequence() {
	        int[] expected = {0, 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 27, 32, 36, 48, 54, 64, 72, 81, 96, 108, 128, 144, 162, 192, 216, 243, 256, 288, 324, 384, 432, 486, 512, 576, 648, 729, 768, 864, 972, 1024, 1152, 1296, 1458, 1536, 1728, 1944, 2048, 2304, 2592, 2916, 3072, 3456, 3888, 4096, 4608, 5184, 5832, 6144, 6912, 7776, 8192, 9216, 10368, 11664, 12288, 13824, 15552, 16384, 18432, 20736, 23328, 24576, 27648, 31104, 32768, 36864, 41472, 46656, 49152, 55296, 62208, 65536, 73728, 82944, 93312, 98304, 110592, 124416};
	        int[] actual = KlarnerRadoSequence.initialiseKlarnerRadoSequence(100);
	        assertArrayEquals(expected, actual);
	    }
	}
	```
2024/06/19 09:01:36 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.372 s\n[INFO] Finished at: 2024-06-19T09:01:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00039b8b8, {0xc00039b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000530090, 0x26}, 0x0, {0xc0003d9440, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000530090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000500578, {0xc000500400?, 0x7f0fb5537dd8?, 0xc000500578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000500400}, {0xc000112000?, 0x0?, 0xc00043fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000500400?}, {0xc000112000?, 0x274c500?, 0xc000500400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:01:39 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/19 09:01:50 Model "openrouter/google/gemini-pro-1.5" responded (11221 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KnapsackTest {

	    @Test
	    void testMaximumValue_EmptyItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = new Item[0];
	        int maximumWeight = 10;
	        int result = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(0, result);
	    }

	    @Test
	    void testMaximumValue_ZeroWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack.Item()};
	        int maximumWeight = 0;
	        int result = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(0, result);
	    }
	    
	    @Test
	    void testMaximumValue_ValidCase() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack.Item(), new Knapsack.Item(), new Knapsack.Item()};
	        items[0].weight = 10;
	        items[0].value = 60;
	        items[1].weight = 20;
	        items[1].value = 100;
	        items[2].weight = 30;
	        items[2].value = 120;
	        int maximumWeight = 50;
	        int result = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(220, result);
	    }

	    @Test
	    void testMaximumValue_WeightLimitExceeded() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack.Item(), new Knapsack.Item()};
	        items[0].weight = 10;
	        items[0].value = 60;
	        items[1].weight = 20;
	        items[1].value = 100;
	        int maximumWeight = 15;
	        int result = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(60, result);
	    }

	}
	```
2024/06/19 09:01:50 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.346 s\n[INFO] Finished at: 2024-06-19T09:01:53Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00052b8b8, {0xc00052b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000600120, 0x26}, 0x0, {0xc00001e660, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000600120, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ae178, {0xc0004ae000?, 0x7fa40b045918?, 0xc0004ae178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ae000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ae000?}, {0xc000040080?, 0x274c500?, 0xc0004ae000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:01:54 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/19 09:02:00 Model "openrouter/google/gemini-pro-1.5" responded (6228 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class LargestProperDivisorTest {

	    @Test
	    void largestProperDivisor_EvenNumber() {
	        assertEquals(4, LargestProperDivisor.largestProperDivisor(8));
	    }

	    @Test
	    void largestProperDivisor_OddNumberWithDivisor() {
	        assertEquals(9, LargestProperDivisor.largestProperDivisor(27));
	    }

	    @Test
	    void largestProperDivisor_PrimeNumber() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(7));
	    }

	    @Test
	    void largestProperDivisor_One() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    void largestProperDivisor_LessThanOne() {
	        assertThrows(IllegalArgumentException.class, () -> LargestProperDivisor.largestProperDivisor(0));
	    }
	}
	```
2024/06/19 09:02:00 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8787444833679501332resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.108 s
[INFO] Finished at: 2024-06-19T09:02:10Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:02:10 Executes tests with 12 coverage objects
2024/06/19 09:02:10 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/19 09:02:18 Model "openrouter/google/gemini-pro-1.5" responded (7876 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	import com.eval.MagicSquareOdd;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd3() {
	        int[][] expected = {
	                {8, 1, 6},
	                {3, 5, 7},
	                {4, 9, 2}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(3));
	    }

	    @Test
	    void testMagicSquareOdd5() {
	        int[][] expected = {
	                {17, 24, 1, 8, 15},
	                {23, 5, 7, 14, 16},
	                {4, 6, 13, 20, 22},
	                {10, 12, 19, 21, 3},
	                {11, 18, 25, 2, 9}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(5));
	    }

	    @Test
	    void testMagicSquareOddInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(2));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(0));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(-1));
	    }
	}
	```
2024/06/19 09:02:18 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12423815630633029304resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.370 s
[INFO] Finished at: 2024-06-19T09:02:27Z
[INFO] ------------------------------------------------------------------------

Total coverage 9.401709%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:02:27 Executes tests with 28 coverage objects
2024/06/19 09:02:27 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:02:36 Model "openrouter/google/gemini-pro-1.5" responded (9524 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class MatchBytesTest {

	    @Test
	    void testMatchBytes_EqualArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hello".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "world".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_CaseInsensitive() {
	        byte[] s1 = "HeLlO".getBytes();
	        byte[] s2 = "hElLo".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_NonLetterDifference() {
	        byte[] s1 = "hello!".getBytes();
	        byte[] s2 = "hello.".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_EmptyArrays() {
	        byte[] s1 = "".getBytes();
	        byte[] s2 = "".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentLengthArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hell".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }
	}
	```
2024/06/19 09:02:36 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn3230889684576168900resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.310 s
[INFO] Finished at: 2024-06-19T09:02:46Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:02:46 Executes tests with 13 coverage objects
2024/06/19 09:02:46 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/19 09:02:52 Model "openrouter/google/gemini-pro-1.5" responded (6252 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PascalsTriangleTest {

	    @Test
	    void testGenerateTriangleValidInput() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}};
	        int[][] actual = pt.generateTriangle(5);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleZeroRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {};
	        int[][] actual = pt.generateTriangle(0);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleNegativeRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        assertThrows(IllegalArgumentException.class, () -> pt.generateTriangle(-5));
	    }
	}
	```
2024/06/19 09:02:52 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12667072002923917544resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.239 s
[INFO] Finished at: 2024-06-19T09:03:01Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:03:01 Executes tests with 14 coverage objects
2024/06/19 09:03:01 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/19 09:03:11 Model "openrouter/google/gemini-pro-1.5" responded (10663 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PhoneNumberTest {

	    @Test
	    void extractDigits_removesSpacesDotsParenthesesHyphensPluses() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123 456.7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("123-456-7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("(123) 456-7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("+1234567890"));
	    }

	    @Test
	    void extractDigits_throwsExceptionForInvalidPunctuation() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123-456@7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123:456:7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123!456!7890"));
	    }

	    @Test
	    void extractDigits_throwsExceptionForLetters() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123ABC7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123 abc 7890"));
	    }

	    @Test
	    void extractDigits_returnsEmptyStringForEmptyInput() {
	        assertEquals("", PhoneNumber.extractDigits(""));
	    }

	    @Test
	    void extractDigits_returnsDigitsOnlyForValidInput() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("1234567890"));
	    }
	}
	```
2024/06/19 09:03:11 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn18115162771277483091resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.367 s
[INFO] Finished at: 2024-06-19T09:03:21Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:03:21 Executes tests with 16 coverage objects
2024/06/19 09:03:21 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:03:25 Model "openrouter/google/gemini-pro-1.5" responded (4018 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleIfElseTest {

	    @Test
	    void simpleIfElse_WhenOne_ThenZero() {
	        int result = SimpleIfElse.simpleIfElse(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void simpleIfElse_WhenNotOne_ThenOne() {
	        int result = SimpleIfElse.simpleIfElse(2);
	        assertEquals(1, result);
	    }
	}
	```
2024/06/19 09:03:25 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn9811667481362100887resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.390 s
[INFO] Finished at: 2024-06-19T09:03:37Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:03:37 Executes tests with 5 coverage objects
2024/06/19 09:03:37 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:03:40 Model "openrouter/google/gemini-pro-1.5" responded (3053 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        assertEquals(0, SimpleSwitchWithReturn.simpleSwitchWithReturn(1));
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefault() {
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(2));
	    }
	}
	```
2024/06/19 09:03:40 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15865440473339451844resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.303 s
[INFO] Finished at: 2024-06-19T09:03:51Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:03:51 Executes tests with 6 coverage objects
2024/06/19 09:03:51 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/19 09:03:58 Model "openrouter/google/gemini-pro-1.5" responded (6886 ms) with:
	```java
	import com.eval.Sort;
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SortTest {

	    @Test
	    void isSorted_emptyArray() {
	        assertTrue(Sort.isSorted(new int[]{}));
	    }

	    @Test
	    void isSorted_singleElementArray() {
	        assertTrue(Sort.isSorted(new int[]{1}));
	    }

	    @Test
	    void isSorted_sortedArray() {
	        assertTrue(Sort.isSorted(new int[]{1, 2, 3, 4, 5}));
	    }

	    @Test
	    void isSorted_unsortedArray() {
	        assertFalse(Sort.isSorted(new int[]{1, 3, 2, 4, 5}));
	    }

	    @Test
	    void isSorted_arrayWithDuplicates() {
	        assertTrue(Sort.isSorted(new int[]{1, 2, 2, 3, 4, 5}));
	    }

	    @Test
	    void isSorted_unsortedArrayWithDuplicates() {
	        assertFalse(Sort.isSorted(new int[]{1, 2, 2, 3, 5, 4}));
	    }
	}
	```
2024/06/19 09:03:58 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.448 s\n[INFO] Finished at: 2024-06-19T09:04:02Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0008923a0}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00017b8b8, {0xc00017b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0000b6720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7fe2dbb9b598?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc000192000?, 0x2782d80?, 0xc00051fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc000192000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:04:02 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/19 09:04:06 Model "openrouter/google/gemini-pro-1.5" responded (3980 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccessFirstElementMatch() {
	        int[] x = {123, 4, 5};
	        int result = TypeArrayAccess.typeArrayAccess(x);
	        assertEquals(123, result);
	    }

	    @Test
	    void testTypeArrayAccessFirstElementMismatch() {
	        int[] x = {12, 4, 5};
	        int result = TypeArrayAccess.typeArrayAccess(x);
	        assertEquals(3, result);
	    }
	}
	```
2024/06/19 09:04:06 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn10462555616208887350resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.443 s
[INFO] Finished at: 2024-06-19T09:04:18Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:04:18 Executes tests with 5 coverage objects
2024/06/19 09:04:18 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/19 09:04:24 Model "openrouter/google/gemini-pro-1.5" responded (5675 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayConsecutiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccess_BothMatch() {
	        int[] input = {0, 8};
	        assertEquals(2, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_FirstMatches() {
	        int[] input = {0, 1};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_SecondMatches() {
	        int[] input = {1, 8};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_NoneMatch() {
	        int[] input = {1, 1};
	        assertEquals(0, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }
	}
	```
2024/06/19 09:04:24 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn10912585327200686495resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.168 s
[INFO] Finished at: 2024-06-19T09:04:37Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:04:38 Executes tests with 9 coverage objects
2024/06/19 09:04:38 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/19 09:04:43 Model "openrouter/google/gemini-pro-1.5" responded (5811 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayMultidimensionalArrayLengthTest {

	    @Test
	    void typeArrayMultidimensionalArrayLength_BothDimensionsAreTwo_ReturnsTwo() {
	        int[][] x = {{1, 2}, {3, 4}};
	        int result = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(2, result);
	    }

	    @Test
	    void typeArrayMultidimensionalArrayLength_FirstDimensionIsTwoSecondIsNot_ReturnsOne() {
	        int[][] x = {{1}, {2}};
	        int result = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(1, result);
	    }


	    @Test
	    void typeArrayMultidimensionalArrayLength_FirstDimensionIsNotTwo_ReturnsZero() {
	        int[][] x = {{1, 2, 3}, {4, 5, 6}};
	        int result = TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x);
	        assertEquals(0, result);
	    }
	}
	```
2024/06/19 09:04:43 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn3448038724372900703resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.338 s
[INFO] Finished at: 2024-06-19T09:04:56Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:04:56 Executes tests with 6 coverage objects
2024/06/19 09:04:56 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:05:04 Model "openrouter/google/gemini-pro-1.5" responded (7670 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ValidDateTest {

	    @Test
	    void testValidDate() {
	        assertTrue(ValidDate.validDate(1, 1, 2000));
	        assertTrue(ValidDate.validDate(29, 2, 2000));
	        assertTrue(ValidDate.validDate(28, 2, 2001));
	        assertTrue(ValidDate.validDate(31, 12, 2000));
	        assertTrue(ValidDate.validDate(30, 4, 2000));
	    }

	    @Test
	    void testInvalidDate() {
	        assertFalse(ValidDate.validDate(1, 1, 1582));
	        assertFalse(ValidDate.validDate(0, 1, 2000));
	        assertFalse(ValidDate.validDate(1, 0, 2000));
	        assertFalse(ValidDate.validDate(1, 13, 2000));
	        assertFalse(ValidDate.validDate(32, 1, 2000));
	        assertFalse(ValidDate.validDate(29, 2, 2001));
	        assertFalse(ValidDate.validDate(30, 2, 2000));
	    }
	}
	```
2024/06/19 09:05:04 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn331560210036864229resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.130 s
[INFO] Finished at: 2024-06-19T09:05:16Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:05:16 Executes tests with 21 coverage objects
2024/06/19 09:05:16 Evaluated model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light": encountered 4 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.844 s\n[INFO] Finished at: 2024-06-19T09:00:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007a4080}, {0xffa8c0?, 0xc0007820a8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00061a090, 0x26}, 0x0, {0xc000780f60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00061a090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7faff3276df8?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e4000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e4000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n  symbol:   variable EqulibriumIndices\n  location: class EqulibriumIndicesTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.844 s\n[INFO] Finished at: 2024-06-19T09:00:47Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[26,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[34,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[42,25] cannot find symbol\n[ERROR]   symbol:   variable EqulibriumIndices\n[ERROR]   location: class EqulibriumIndicesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007a4080}, {0xffa8c0?, 0xc0007820a8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00061a090, 0x26}, 0x0, {0xc000780f60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00061a090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7faff3276df8?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc0000e4000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc0000e4000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/EqulibriumIndices.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.372 s\n[INFO] Finished at: 2024-06-19T09:01:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00039b8b8, {0xc00039b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000530090, 0x26}, 0x0, {0xc0003d9440, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000530090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000500578, {0xc000500400?, 0x7f0fb5537dd8?, 0xc000500578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000500400}, {0xc000112000?, 0x0?, 0xc00043fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000500400?}, {0xc000112000?, 0x274c500?, 0xc000500400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.372 s\n[INFO] Finished at: 2024-06-19T09:01:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,43] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00039b8b8, {0xc00039b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000530090, 0x26}, 0x0, {0xc0003d9440, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000530090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000500578, {0xc000500400?, 0x7f0fb5537dd8?, 0xc000500578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000500400}, {0xc000112000?, 0x0?, 0xc00043fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000500400?}, {0xc000112000?, 0x274c500?, 0xc000500400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/KlarnerRadoSequence.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.346 s\n[INFO] Finished at: 2024-06-19T09:01:53Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00052b8b8, {0xc00052b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000600120, 0x26}, 0x0, {0xc00001e660, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000600120, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ae178, {0xc0004ae000?, 0x7fa40b045918?, 0xc0004ae178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ae000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ae000?}, {0xc000040080?, 0x274c500?, 0xc0004ae000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[INFO] 11 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.346 s\n[INFO] Finished at: 2024-06-19T09:01:53Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,67] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,25] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,46] an enclosing instance that contains com.eval.Knapsack.Item is required\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00007a000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00052b8b8, {0xc00052b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000600120, 0x26}, 0x0, {0xc00001e660, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000600120, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0004ae178, {0xc0004ae000?, 0x7fa40b045918?, 0xc0004ae178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0004ae000}, {0xc000040080?, 0x2782d80?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0004ae000?}, {0xc000040080?, 0x274c500?, 0xc0004ae000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.448 s\n[INFO] Finished at: 2024-06-19T09:04:02Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0008923a0}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00017b8b8, {0xc00017b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0000b6720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7fe2dbb9b598?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc000192000?, 0x2782d80?, 0xc00051fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc000192000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.448 s\n[INFO] Finished at: 2024-06-19T09:04:02Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[1,16] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[9,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[14,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[19,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[24,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[29,20] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/SortTest.java:[34,21] com.eval.Sort is not public in com.eval; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0008923a0}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00017b8b8, {0xc00017b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0000b6720, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7fe2dbb9b598?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc000192000?, 0x2782d80?, 0xc00051fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc000192000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Sort.java]
2024/06/19 09:08:28 Evaluating model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light"
2024/06/19 09:08:28 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/19 09:08:36 Model "openrouter/google/gemini-pro-1.5" responded (7619 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testEmptyString() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("".toCharArray()));
	    }

	    @Test
	    void testSingleBracketPair() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[]".toCharArray()));
	    }

	    @Test
	    void testMultipleBracketPairs() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[][][][]".toCharArray()));
	    }

	    @Test
	    void testNestedBrackets() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[][][]]".toCharArray()));
	    }

	    @Test
	    void testUnbalancedSingleBracket() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[".toCharArray()));
	    }

	    @Test
	    void testUnbalancedSingleClosingBracket() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("]".toCharArray()));
	    }

	    @Test
	    void testUnbalancedBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[][][".toCharArray()));
	    }

	    @Test
	    void testUnbalancedBracketsReverse() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[]]".toCharArray()));
	    }

	    @Test
	    void testInvalidCharacter() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("a".toCharArray()));
	    }

	    @Test
	    void testInvalidCharacters() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[]a[]".toCharArray()));
	    }
	}
	```
2024/06/19 09:08:36 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.826 s\n[INFO] Finished at: 2024-06-19T09:08:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d8000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004258b8, {0xc0004258a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc0003d34a0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003b5178, {0xc0003b5000?, 0x7f73b15ca298?, 0xc0003b5178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003b5000}, {0xc000040080?, 0x0?, 0xc00060fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003b5000?}, {0xc000040080?, 0x274c500?, 0xc0003b5000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:08:39 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/19 09:08:49 Model "openrouter/google/gemini-pro-1.5" responded (9956 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BinarySearchTest {

	    @Test
	    void testBinarySearchFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 11;
	        int expectedIndex = 4;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	    
	    @Test
	    void testBinarySearchNotFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 13;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchFirstElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 2;
	        int expectedIndex = 0;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchLastElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 12;
	        int expectedIndex = 5;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchEmptyArray() {
	        int[] a = {};
	        int x = 12;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	}

	```
2024/06/19 09:08:49 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7327987887081990585resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.297 s
[INFO] Finished at: 2024-06-19T09:08:59Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:08:59 Executes tests with 15 coverage objects
2024/06/19 09:08:59 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/19 09:09:08 Model "openrouter/google/gemini-pro-1.5" responded (8278 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void callLoopConditionsOftenEnough_xLessThan10_returns0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_xGreaterThan20_returns0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iLessThan20_returnsX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 10);
	        assertEquals(15, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iGreaterThan20_xLessThan20_returnsX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 25);
	        assertEquals(20, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iGreaterThan20_xGreaterThan20_returnsXDividedBy2() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 30);
	        assertEquals(10, result);
	    }
	}
	```
2024/06/19 09:09:08 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8122922554370135349resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.270 s
[INFO] Finished at: 2024-06-19T09:09:19Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:09:19 Executes tests with 13 coverage objects
2024/06/19 09:09:19 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/19 09:09:23 Model "openrouter/google/gemini-pro-1.5" responded (3809 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElse_One() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElse_Three() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElse_Other() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	    }
	}
	```
2024/06/19 09:09:23 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn6917957323138061641resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.723 s
[INFO] Finished at: 2024-06-19T09:09:33Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:09:33 Executes tests with 8 coverage objects
2024/06/19 09:09:33 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/19 09:09:39 Model "openrouter/google/gemini-pro-1.5" responded (6158 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CollatzCalculatorTest {

	    @Test
	    void testComputeStepCountWithOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }

	    @Test
	    void testComputeStepCountWithEvenNumber() {
	        assertEquals(4, CollatzCalculator.computeStepCount(16));
	    }

	    @Test
	    void testComputeStepCountWithOddNumber() {
	        assertEquals(9, CollatzCalculator.computeStepCount(19));
	    }

	    @Test
	    void testComputeStepCountWithZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }

	    @Test
	    void testComputeStepCountWithNegativeNumber() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-5));
	    }
	}

	```
2024/06/19 09:09:39 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn10674517111700758018resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.505 s
[INFO] Finished at: 2024-06-19T09:09:50Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:09:50 Executes tests with 13 coverage objects
2024/06/19 09:09:50 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/19 09:09:54 Model "openrouter/google/gemini-pro-1.5" responded (3954 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void testConditionsAndTrue() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseX() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseY() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }

	    @Test
	    void testConditionsAndFalseXY() {
	        assertFalse(ConditionsAnd.conditionsAnd('X', 'Y'));
	    }
	}

	```
2024/06/19 09:09:54 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn11999911265185378018resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.603 s
[INFO] Finished at: 2024-06-19T09:10:08Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:10:08 Executes tests with 5 coverage objects
2024/06/19 09:10:08 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/19 09:10:18 Model "openrouter/google/gemini-pro-1.5" responded (9926 ms) with:
	```java
	import com.eval.EqulibriumIndices;
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class EqulibriumIndicesTest {

	    @Test
	    void testEqulibriumIndices_EmptyArray() {
	        int[] sequence = {};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_SingleElementArray() {
	        int[] sequence = {1};
	        String expected = "0;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_MultipleEquilibriumIndices() {
	        int[] sequence = {1, 3, 5, 7, 9, 5, 3, 1};
	        String expected = "3;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_NoEquilibriumIndices() {
	        int[] sequence = {1, 2, 3, 4, 5};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_AllElementsEqual() {
	        int[] sequence = {2, 2, 2, 2, 2};
	        String expected = "0;1;2;3;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	}
	```
2024/06/19 09:10:18 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  3.361 s\n[INFO] Finished at: 2024-06-19T09:10:24Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000424000}, {0xffa8c0?, 0xc0000ca0c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004fd8b8, {0xc0004fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006c00c0, 0x26}, 0x0, {0xc0003b4e40, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006c00c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000318d78, {0xc000318c00?, 0x7fb8265ae878?, 0xc000318d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000318c00}, {0xc000040080?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000318c00?}, {0xc000040080?, 0x274c500?, 0xc000318c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:10:25 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/19 09:10:28 Model "openrouter/google/gemini-pro-1.5" responded (3452 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class ForLoopTest {

	    @Test
	    void forLoop_zero() {
	        assertEquals(0, ForLoop.forLoop(0));
	    }

	    @Test
	    void forLoop_positive() {
	        assertEquals(12, ForLoop.forLoop(3));
	    }
	}
	```
2024/06/19 09:10:28 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15662323256853564799resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.530 s
[INFO] Finished at: 2024-06-19T09:10:39Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:10:39 Executes tests with 9 coverage objects
2024/06/19 09:10:39 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/19 09:10:49 Model "openrouter/google/gemini-pro-1.5" responded (9714 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbol() {
	        // Test cases from https://en.wikipedia.org/wiki/Jacobi_symbol
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 5));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(4, 2));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(1001, 9907));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(19, 45));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(20, 45));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(8, 21));

	        // Additional test cases
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 7));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(10, 13));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(6, 9));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(5, 11));

	    }

	    @Test
	    void testJacobiSymbolIllegalArgumentException() {
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 5));
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(4, 4));
	    }
	}
	```
2024/06/19 09:10:49 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 12 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.610 s\n[INFO] Finished at: 2024-06-19T09:10:54Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c2000}, {0xffa8c0?, 0xc0000ca288})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003ed8b8, {0xc0003ed8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c150, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c150, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003da578, {0xc0003da400?, 0x7fbe6da400e8?, 0xc0003da578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003da400}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003da400?}, {0xc0000e2000?, 0x274c500?, 0xc0003da400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:10:55 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/19 09:11:07 Model "openrouter/google/gemini-pro-1.5" responded (12040 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class KlarnerRadoSequenceTest {

	    @Test
	    void testInitialiseKlarnerRadoSequence() {
	        int[] expected = {0, 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 27, 32, 36, 48, 54, 64, 72, 81, 96, 108, 128, 144, 162, 192, 216, 243, 256, 288, 324, 384, 432, 486, 512, 576, 648, 729, 768, 864, 972, 1024, 1152, 1296, 1458, 1536, 1728, 1944, 2048, 2187, 2304, 2592, 2916, 3072, 3456, 3888, 4096, 4374, 4608, 5184, 5832, 6144, 6912, 7776, 8192, 8748, 9216, 10368, 11664, 12288, 13824, 15552, 16384, 17496, 18432, 20736, 23328, 24576, 27648, 31104, 32768, 34992, 36864, 41472};
	        assertArrayEquals(expected, KlarnerRadoSequence.initialiseKlarnerRadoSequence(100));
	    }
	}
	```
2024/06/19 09:11:07 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn6954942890241515178resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.382 s
[INFO] Finished at: 2024-06-19T09:11:23Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:11:23 Executes tests with 18 coverage objects
2024/06/19 09:11:23 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/19 09:11:31 Model "openrouter/google/gemini-pro-1.5" responded (8715 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KnapsackTest {

	    @Test
	    void testMaximumValue_EmptyItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = new Item[0];
	        int maximumWeight = 10;
	        assertEquals(0, knapsack.maximumValue(maximumWeight, items));
	    }

	    @Test
	    void testMaximumValue_ZeroWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item()};
	        items[0].weight = 5;
	        items[0].value = 10;
	        int maximumWeight = 0;
	        assertEquals(0, knapsack.maximumValue(maximumWeight, items));
	    }

	    @Test
	    void testMaximumValue_NormalCase() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item(), new Knapsack().new Item(), new Knapsack().new Item()};
	        items[0].weight = 10;
	        items[0].value = 60;
	        items[1].weight = 20;
	        items[1].value = 100;
	        items[2].weight = 30;
	        items[2].value = 120;
	        int maximumWeight = 50;
	        assertEquals(220, knapsack.maximumValue(maximumWeight, items));
	    }
	}
	```
2024/06/19 09:11:31 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.577 s\n[INFO] Finished at: 2024-06-19T09:11:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003458b8, {0xc0003458a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0005b9e60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f49346df010?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:11:35 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/19 09:11:41 Model "openrouter/google/gemini-pro-1.5" responded (6205 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class LargestProperDivisorTest {

	    @Test
	    void largestProperDivisor_EvenNumber() {
	        assertEquals(4, LargestProperDivisor.largestProperDivisor(8));
	    }

	    @Test
	    void largestProperDivisor_OddNumberWithDivisor() {
	        assertEquals(9, LargestProperDivisor.largestProperDivisor(27));
	    }

	    @Test
	    void largestProperDivisor_PrimeNumber() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(7));
	    }

	    @Test
	    void largestProperDivisor_One() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    void largestProperDivisor_LessThanOne() {
	        assertThrows(IllegalArgumentException.class, () -> LargestProperDivisor.largestProperDivisor(0));
	    }
	}
	```
2024/06/19 09:11:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7848968818645092257resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.262 s
[INFO] Finished at: 2024-06-19T09:11:58Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:11:58 Executes tests with 12 coverage objects
2024/06/19 09:11:58 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/19 09:12:06 Model "openrouter/google/gemini-pro-1.5" responded (8142 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	import com.eval.MagicSquareOdd;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd3() {
	        int[][] expected = {
	                {8, 1, 6},
	                {3, 5, 7},
	                {4, 9, 2}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(3));
	    }

	    @Test
	    void testMagicSquareOdd5() {
	        int[][] expected = {
	                {17, 24, 1, 8, 15},
	                {23, 5, 7, 14, 16},
	                {4, 6, 13, 20, 22},
	                {10, 12, 19, 21, 3},
	                {11, 18, 25, 2, 9}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(5));
	    }

	    @Test
	    void testMagicSquareOddInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(2));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(0));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(-1));
	    }
	}
	```
2024/06/19 09:12:06 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4687122939812092909resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.530 s
[INFO] Finished at: 2024-06-19T09:12:15Z
[INFO] ------------------------------------------------------------------------

Total coverage 9.401709%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:12:16 Executes tests with 28 coverage objects
2024/06/19 09:12:16 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:12:26 Model "openrouter/google/gemini-pro-1.5" responded (10055 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class MatchBytesTest {

	    @Test
	    void matchBytes_EqualArrays_ReturnsTrue() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hello".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void matchBytes_CaseDifferenceOnly_ReturnsTrue() {
	        byte[] s1 = "HeLlO".getBytes();
	        byte[] s2 = "hELLo".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void matchBytes_DifferentArrays_ReturnsFalse() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "world".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void matchBytes_DifferentLengthArrays_ThrowsException() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hell".getBytes();
	        assertThrows(ArrayIndexOutOfBoundsException.class, () -> MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void matchBytes_NonLetterCharacterDifference_ReturnsFalse() {
	        byte[] s1 = "hello!".getBytes();
	        byte[] s2 = "hello?".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void matchBytes_EmptyArrays_ReturnsTrue() {
	        byte[] s1 = "".getBytes();
	        byte[] s2 = "".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }
	}
	```
2024/06/19 09:12:26 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.026 s\n[INFO] Finished at: 2024-06-19T09:12:30Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc0000120c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fb8b8, {0xc0000fb8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006120c0, 0x26}, 0x0, {0xc0000b9020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006120c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7ff505c35858?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:12:30 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/19 09:12:37 Model "openrouter/google/gemini-pro-1.5" responded (6722 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PascalsTriangleTest {

	    @Test
	    void testGenerateTriangleValidInput() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {{1}, {1, 1}, {1, 2, 1}, {1, 3, 3, 1}, {1, 4, 6, 4, 1}};
	        int[][] result = pt.generateTriangle(5);

	        assertArrayEquals(expected, result);
	    }

	    @Test
	    void testGenerateTriangleZeroRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {};
	        int[][] result = pt.generateTriangle(0);

	        assertArrayEquals(expected, result);
	    }


	    @Test
	    void testGenerateTriangleNegativeRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        assertThrows(IllegalArgumentException.class, () -> pt.generateTriangle(-5));
	    }
	}
	```
2024/06/19 09:12:37 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn3385882689658038864resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.662 s
[INFO] Finished at: 2024-06-19T09:12:50Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:12:50 Executes tests with 14 coverage objects
2024/06/19 09:12:50 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/19 09:13:03 Model "openrouter/google/gemini-pro-1.5" responded (12504 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PhoneNumberTest {

	    @Test
	    void extractDigits_validNumber() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("1234567890"));
	    }

	    @Test
	    void extractDigits_numberWithSpaces() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123 456 7890"));
	    }

	    @Test
	    void extractDigits_numberWithDots() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123.456.7890"));
	    }

	    @Test
	    void extractDigits_numberWithParentheses() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("(123) 456-7890"));
	    }

	    @Test
	    void extractDigits_numberWithHyphens() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123-456-7890"));
	    }

	    @Test
	    void extractDigits_numberWithPluses() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("+1 234 567 890"));
	    }

	    @Test
	    void extractDigits_numberWithMultipleInvalidCharacters() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("+(123).456-7890 "));
	    }

	    @Test
	    void extractDigits_emptyString() {
	        assertEquals("", PhoneNumber.extractDigits(""));
	    }

	    @Test
	    void extractDigits_illegalPunctuation() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123-456@7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123:456:7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123!456!7890"));
	    }

	    @Test
	    void extractDigits_lettersNotPermitted() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123ABC7890"));
	    }
	}

	```
2024/06/19 09:13:03 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn10502763825459758240resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.487 s
[INFO] Finished at: 2024-06-19T09:13:16Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:13:16 Executes tests with 16 coverage objects
2024/06/19 09:13:16 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:13:21 Model "openrouter/google/gemini-pro-1.5" responded (4257 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleIfElseTest {

	    @Test
	    void testSimpleIfElse_WhenInputIsOne_ThenReturnZero() {
	        int result = SimpleIfElse.simpleIfElse(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void testSimpleIfElse_WhenInputIsNotOne_ThenReturnOne() {
	        int result = SimpleIfElse.simpleIfElse(2);
	        assertEquals(1, result);
	    }
	}
	```
2024/06/19 09:13:21 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12078592427134745060resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.683 s
[INFO] Finished at: 2024-06-19T09:13:33Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:13:33 Executes tests with 5 coverage objects
2024/06/19 09:13:33 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:13:37 Model "openrouter/google/gemini-pro-1.5" responded (3692 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        assertEquals(0, SimpleSwitchWithReturn.simpleSwitchWithReturn(1));
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefault() {
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(2));
	    }
	}
	```
2024/06/19 09:13:37 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1841725256560337250resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  4.025 s
[INFO] Finished at: 2024-06-19T09:13:50Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:13:50 Executes tests with 6 coverage objects
2024/06/19 09:13:50 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/19 09:13:56 Model "openrouter/google/gemini-pro-1.5" responded (6576 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class SortTest {

	    @Test
	    void isSorted_emptyArray() {
	        int[] a = {};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_singleElementArray() {
	        int[] a = {1};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_sortedArray() {
	        int[] a = {1, 2, 3, 4, 5};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_unsortedArray() {
	        int[] a = {1, 3, 2, 4, 5};
	        assertFalse(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_reverseSortedArray() {
	        int[] a = {5, 4, 3, 2, 1};
	        assertFalse(Sort.isSorted(a));
	    }
	}
	```
2024/06/19 09:13:56 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17581277775501938371resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.548 s
[INFO] Finished at: 2024-06-19T09:14:07Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:14:07 Executes tests with 6 coverage objects
2024/06/19 09:14:07 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/19 09:14:11 Model "openrouter/google/gemini-pro-1.5" responded (3991 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccess_FirstElement123() {
	        int[] x = {123, 2, 3};
	        assertEquals(123, TypeArrayAccess.typeArrayAccess(x));
	    }

	    @Test
	    void testTypeArrayAccess_FirstElementNot123() {
	        int[] x = {1, 2, 3};
	        assertEquals(3, TypeArrayAccess.typeArrayAccess(x));
	    }
	}
	```
2024/06/19 09:14:11 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4855998678839296043resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.638 s
[INFO] Finished at: 2024-06-19T09:14:26Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:14:26 Executes tests with 5 coverage objects
2024/06/19 09:14:26 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/19 09:14:34 Model "openrouter/google/gemini-pro-1.5" responded (7936 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.assertEquals;

	class TypeArrayConsecutiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccess_BothMatch() {
	        int[] input = {0, 8};
	        int expected = 2;
	        int actual = TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_FirstMatch() {
	        int[] input = {0, 1};
	        int expected = 1;
	        int actual = TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_SecondMatch() {
	        int[] input = {1, 8};
	        int expected = 1;
	        int actual = TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_NoMatch() {
	        int[] input = {1, 1};
	        int expected = 0;
	        int actual = TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input);
	        assertEquals(expected, actual);
	    }
	}
	```
2024/06/19 09:14:34 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12142330836252990781resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.121 s
[INFO] Finished at: 2024-06-19T09:14:49Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:14:49 Executes tests with 9 coverage objects
2024/06/19 09:14:49 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/19 09:14:55 Model "openrouter/google/gemini-pro-1.5" responded (6521 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayMultidimensionalArrayLengthTest {

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case1() {
	        int[][] x = {{1, 2}, {3, 4}};
	        assertEquals(2, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case2() {
	        int[][] x = {{1, 2, 3}, {4, 5, 6}};
	        assertEquals(1, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case3() {
	        int[][] x = {{1}, {2}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case4() {
	        int[][] x = {{1, 2}, {3}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }
	}
	```
2024/06/19 09:14:55 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16135542785326820871resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.566 s
[INFO] Finished at: 2024-06-19T09:15:05Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:15:05 Executes tests with 6 coverage objects
2024/06/19 09:15:05 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:15:15 Model "openrouter/google/gemini-pro-1.5" responded (9585 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ValidDateTest {

	    @Test
	    void testValidDate() {
	        assertTrue(ValidDate.validDate(1, 1, 2000));
	        assertTrue(ValidDate.validDate(29, 2, 2000));
	        assertTrue(ValidDate.validDate(28, 2, 2001));
	        assertTrue(ValidDate.validDate(31, 12, 2000));
	        assertTrue(ValidDate.validDate(30, 4, 2000));
	        assertTrue(ValidDate.validDate(31, 5, 2000));
	        assertTrue(ValidDate.validDate(31, 1, 2000));
	    }

	    @Test
	    void testInvalidDate() {
	        assertFalse(ValidDate.validDate(1, 1, 1582));
	        assertFalse(ValidDate.validDate(0, 1, 2000));
	        assertFalse(ValidDate.validDate(32, 1, 2000));
	        assertFalse(ValidDate.validDate(1, 0, 2000));
	        assertFalse(ValidDate.validDate(1, 13, 2000));
	        assertFalse(ValidDate.validDate(29, 2, 2001));
	        assertFalse(ValidDate.validDate(30, 2, 2000));
	        assertFalse(ValidDate.validDate(32, 12, 2000));
	        assertFalse(ValidDate.validDate(31, 4, 2000));
	    }
	}
	```
2024/06/19 09:15:15 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16662665605161905417resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.471 s
[INFO] Finished at: 2024-06-19T09:15:24Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:15:24 Executes tests with 21 coverage objects
2024/06/19 09:15:24 Evaluated model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light": encountered 5 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.826 s\n[INFO] Finished at: 2024-06-19T09:08:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d8000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004258b8, {0xc0004258a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc0003d34a0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003b5178, {0xc0003b5000?, 0x7f73b15ca298?, 0xc0003b5178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003b5000}, {0xc000040080?, 0x0?, 0xc00060fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003b5000?}, {0xc000040080?, 0x274c500?, 0xc0003b5000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n  symbol:   variable BalancedBrackets\n  location: class BalancedBracketsTest\n[INFO] 10 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.826 s\n[INFO] Finished at: 2024-06-19T09:08:39Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[8,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[13,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[18,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[23,20] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[28,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[33,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[43,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[48,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/BalancedBracketsTest.java:[53,21] cannot find symbol\n[ERROR]   symbol:   variable BalancedBrackets\n[ERROR]   location: class BalancedBracketsTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d8000}, {0xffa8c0?, 0xc000012270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004258b8, {0xc0004258a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc0003d34a0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003b5178, {0xc0003b5000?, 0x7f73b15ca298?, 0xc0003b5178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003b5000}, {0xc000040080?, 0x0?, 0xc00060fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003b5000?}, {0xc000040080?, 0x274c500?, 0xc0003b5000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/BalancedBrackets.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  3.361 s\n[INFO] Finished at: 2024-06-19T09:10:24Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000424000}, {0xffa8c0?, 0xc0000ca0c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004fd8b8, {0xc0004fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006c00c0, 0x26}, 0x0, {0xc0003b4e40, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006c00c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000318d78, {0xc000318c00?, 0x7fb8265ae878?, 0xc000318d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000318c00}, {0xc000040080?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000318c00?}, {0xc000040080?, 0x274c500?, 0xc000318c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  3.361 s\n[INFO] Finished at: 2024-06-19T09:10:24Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000424000}, {0xffa8c0?, 0xc0000ca0c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004fd8b8, {0xc0004fd8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006c00c0, 0x26}, 0x0, {0xc0003b4e40, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006c00c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000318d78, {0xc000318c00?, 0x7fb8265ae878?, 0xc000318d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000318c00}, {0xc000040080?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000318c00?}, {0xc000040080?, 0x274c500?, 0xc000318c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/EqulibriumIndices.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 12 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.610 s\n[INFO] Finished at: 2024-06-19T09:10:54Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c2000}, {0xffa8c0?, 0xc0000ca288})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003ed8b8, {0xc0003ed8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c150, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c150, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003da578, {0xc0003da400?, 0x7fbe6da400e8?, 0xc0003da578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003da400}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003da400?}, {0xc0000e2000?, 0x274c500?, 0xc0003da400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 12 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.610 s\n[INFO] Finished at: 2024-06-19T09:10:54Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[26,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[27,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c2000}, {0xffa8c0?, 0xc0000ca288})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003ed8b8, {0xc0003ed8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c150, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c150, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0003da578, {0xc0003da400?, 0x7fbe6da400e8?, 0xc0003da578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0003da400}, {0xc0000e2000?, 0x0?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0003da400?}, {0xc0000e2000?, 0x274c500?, 0xc0003da400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/JacobiSymbol.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.577 s\n[INFO] Finished at: 2024-06-19T09:11:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003458b8, {0xc0003458a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0005b9e60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f49346df010?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 4 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.577 s\n[INFO] Finished at: 2024-06-19T09:11:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[19,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[29,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0001821e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0003458b8, {0xc0003458a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c090, 0x26}, 0x0, {0xc0005b9e60, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c090, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f49346df010?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.026 s\n[INFO] Finished at: 2024-06-19T09:12:30Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc0000120c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fb8b8, {0xc0000fb8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006120c0, 0x26}, 0x0, {0xc0000b9020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006120c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7ff505c35858?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n  symbol:   variable MatchBytes\n  location: class MatchBytesTest\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.026 s\n[INFO] Finished at: 2024-06-19T09:12:30Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[10,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[17,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[24,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[31,66] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[38,21] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MatchBytesTest.java:[45,20] cannot find symbol\n[ERROR]   symbol:   variable MatchBytes\n[ERROR]   location: class MatchBytesTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc0000120c0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000fb8b8, {0xc0000fb8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006120c0, 0x26}, 0x0, {0xc0000b9020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006120c0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7ff505c35858?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/MatchBytes.java]
2024/06/19 09:18:36 Evaluating model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light"
2024/06/19 09:18:36 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/19 09:18:45 Model "openrouter/google/gemini-pro-1.5" responded (9250 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testBalancedBrackets_EmptyString() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_SingleBracketPair() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[]".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_MultipleBracketPairs() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[]][]".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_NestedBracketPairs() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[][][]]".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_UnbalancedBrackets_ClosingBracketFirst() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("][".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_UnbalancedBrackets_MoreOpeningBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[[[".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_UnbalancedBrackets_MoreClosingBrackets() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("]]]".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_InvalidCharacters() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("a[b]c".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_InvalidCharacters_AtStart() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("a[]".toCharArray()));
	    }

	    @Test
	    void testBalancedBrackets_InvalidCharacters_AtEnd() {
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[]a".toCharArray()));
	    }
	}
	```
2024/06/19 09:18:45 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16972482736961717335resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.519 s
[INFO] Finished at: 2024-06-19T09:18:58Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:18:58 Executes tests with 14 coverage objects
2024/06/19 09:18:58 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/19 09:19:08 Model "openrouter/google/gemini-pro-1.5" responded (10191 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BinarySearchTest {

	    @Test
	    void testBinarySearchFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 11;
	        int expectedIndex = 4;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchNotFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 9;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchEmptyArray() {
	        int[] a = {};
	        int x = 5;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchFirstElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 2;
	        int expectedIndex = 0;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchLastElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 12;
	        int expectedIndex = 5;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	}
	```
2024/06/19 09:19:08 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn2591151335665599353resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.636 s
[INFO] Finished at: 2024-06-19T09:19:20Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:19:20 Executes tests with 15 coverage objects
2024/06/19 09:19:20 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/19 09:19:26 Model "openrouter/google/gemini-pro-1.5" responded (6410 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void callLoopConditionsOftenEnough_XLessThan10() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 10);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_XGreaterThan20() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 10);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_LessThan20Iterations() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 10);
	        assertEquals(15, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_MoreThan20Iterations() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 30);
	        assertEquals(20, result);
	    }
	}
	```
2024/06/19 09:19:26 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn5066289922763218285resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.545 s
[INFO] Finished at: 2024-06-19T09:19:36Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:19:36 Executes tests with 13 coverage objects
2024/06/19 09:19:36 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/19 09:19:41 Model "openrouter/google/gemini-pro-1.5" responded (5586 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElse_WhenIEquals1_ThenReturn2() {
	        int result = CascadingIfElse.cascadingIfElse(1);
	        assertEquals(2, result);
	    }

	    @Test
	    void testCascadingIfElse_WhenIEquals3_ThenReturn4() {
	        int result = CascadingIfElse.cascadingIfElse(3);
	        assertEquals(4, result);
	    }

	    @Test
	    void testCascadingIfElse_WhenIDoesNotEqual1Or3_ThenReturn5() {
	        int result = CascadingIfElse.cascadingIfElse(5);
	        assertEquals(5, result);
	    }
	}
	```
2024/06/19 09:19:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16510133829254855554resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.680 s
[INFO] Finished at: 2024-06-19T09:19:53Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:19:53 Executes tests with 8 coverage objects
2024/06/19 09:19:53 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/19 09:19:59 Model "openrouter/google/gemini-pro-1.5" responded (5601 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CollatzCalculatorTest {

	    @Test
	    void testComputeStepCountOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }

	    @Test
	    void testComputeStepCountEven() {
	        assertEquals(4, CollatzCalculator.computeStepCount(16));
	    }

	    @Test
	    void testComputeStepCountOdd() {
	        assertEquals(9, CollatzCalculator.computeStepCount(3));
	    }

	    @Test
	    void testComputeStepCountZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }

	    @Test
	    void testComputeStepCountNegative() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-5));
	    }
	}
	```
2024/06/19 09:19:59 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn35683275324546726resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.609 s
[INFO] Finished at: 2024-06-19T09:20:14Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:20:14 Executes tests with 13 coverage objects
2024/06/19 09:20:14 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/19 09:20:19 Model "openrouter/google/gemini-pro-1.5" responded (4729 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void testConditionsAndTrue() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseX() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseY() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }

	    @Test
	    void testConditionsAndFalseXY() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'D'));
	    }
	}
	```
2024/06/19 09:20:19 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8690227212438812440resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.485 s
[INFO] Finished at: 2024-06-19T09:20:34Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:20:34 Executes tests with 5 coverage objects
2024/06/19 09:20:34 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/19 09:20:43 Model "openrouter/google/gemini-pro-1.5" responded (8755 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class EqulibriumIndicesTest {

	    @Test
	    void equlibriumIndices_EmptyString() {
	        int[] sequence = {};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_SingleElement() {
	        int[] sequence = {5};
	        String expected = "0;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_MultipleElements_WithEquilibrium() {
	        int[] sequence = {1,3,5,7,9,11,5,3,1};
	        String expected = "5;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void equlibriumIndices_MultipleElements_WithoutEquilibrium() {
	        int[] sequence = {1,2,3,4,5};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	    
	    @Test
	    void equlibriumIndices_MultipleElements_WithMultipleEquilibrium() {
	        int[] sequence = {0,1,3,-3,-2,-1};
	        String expected = "1;2;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	}
	```
2024/06/19 09:20:43 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12651217157545492567resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.760 s
[INFO] Finished at: 2024-06-19T09:20:58Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:20:58 Executes tests with 14 coverage objects
2024/06/19 09:20:58 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/19 09:21:01 Model "openrouter/google/gemini-pro-1.5" responded (2945 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class ForLoopTest {

	    @Test
	    void forLoop_zero() {
	        assertEquals(0, ForLoop.forLoop(0));
	    }

	    @Test
	    void forLoop_positive() {
	        assertEquals(12, ForLoop.forLoop(3));
	    }
	}
	```
2024/06/19 09:21:01 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12813830975509231779resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.235 s
[INFO] Finished at: 2024-06-19T09:21:13Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:21:14 Executes tests with 9 coverage objects
2024/06/19 09:21:14 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/19 09:21:24 Model "openrouter/google/gemini-pro-1.5" responded (9962 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbol() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(2, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(4, 5));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(5, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(1001, 9907));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(19, 45));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(20, 45));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(999, 9907));
	    }

	    @Test
	    void testJacobiSymbolInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 5));
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(1, 4));
	    }

	    @Test
	    void testJacobiSymbolKGreaterThanN() {
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(7, 5));
	    }

	    @Test
	    void testJacobiSymbolKEqualsN() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(5, 5));
	    }

	    @Test
	    void testJacobiSymbolKZero() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(0, 5));
	    }

	    @Test
	    void testJacobiSymbolNOne() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 1));
	    }
	}
	```
2024/06/19 09:21:24 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 15 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.741 s\n[INFO] Finished at: 2024-06-19T09:21:29Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001440e0}, {0xffa8c0?, 0xc0000121f8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001a98b8, {0xc0001a98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c630, 0x26}, 0x0, {0xc0000bbe00, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c630, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000104578, {0xc000104400?, 0x7f9a7f360918?, 0xc000104578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000104400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000104400?}, {0xc000040080?, 0x274c500?, 0xc000104400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:21:29 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/19 09:21:41 Model "openrouter/google/gemini-pro-1.5" responded (12288 ms) with:
	```java
	import com.eval.KlarnerRadoSequence;
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KlarnerRadoSequenceTest {

	    @Test
	    void testKlarnerRadoSequence() {
	        int[] expected = {0, 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 27, 32, 36, 48, 54, 64, 72, 81, 96, 108, 128, 144, 162, 192, 216, 243, 256, 288, 324, 384, 432, 486, 512, 576, 648, 729, 768, 864, 972, 1024, 1152, 1296, 1458, 1536, 1728, 1944, 2048, 2304, 2592, 2916, 3072, 3456, 3888, 4096, 4608, 5184, 5832, 6144, 6912, 7776, 8192, 9216, 10368, 11664, 12288, 13824, 15552, 16384, 18432, 20736, 23328, 24576, 27648, 31104, 32768, 36864, 41472, 46656, 49152, 55296, 62208, 65536, 73728, 82944, 93312, 98304};
	        assertArrayEquals(expected, KlarnerRadoSequence.initialiseKlarnerRadoSequence(100));
	    }
	}
	```
2024/06/19 09:21:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.753 s\n[INFO] Finished at: 2024-06-19T09:21:45Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000122220}, {0xffa8c0?, 0xc00011c1c8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005e58b8, {0xc0005e58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001660f0, 0x26}, 0x0, {0xc0005c2060, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001660f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7f5cedd4aa98?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc0000c8000?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc0000c8000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:21:45 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/19 09:21:56 Model "openrouter/google/gemini-pro-1.5" responded (10492 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KnapsackTest {

	    @Test
	    void testMaximumValue_EmptyItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = new Item[0];
	        int maximumWeight = 10;
	        int maxValue = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(0, maxValue);
	    }

	    @Test
	    void testMaximumValue_ZeroWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item()};
	        items[0].weight = 5;
	        items[0].value = 10;
	        int maximumWeight = 0;
	        int maxValue = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(0, maxValue);
	    }

	    @Test
	    void testMaximumValue_ValidInput() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item(), new Knapsack().new Item(), new Knapsack().new Item()};
	        items[0].weight = 10;
	        items[0].value = 60;
	        items[1].weight = 20;
	        items[1].value = 100;
	        items[2].weight = 30;
	        items[2].value = 120;
	        int maximumWeight = 50;
	        int maxValue = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(220, maxValue);
	    }

	    @Test
	    void testMaximumValue_ItemWeightGreaterThanMaximumWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item()};
	        items[0].weight = 20;
	        items[0].value = 100;
	        int maximumWeight = 10;
	        int maxValue = knapsack.maximumValue(maximumWeight, items);
	        assertEquals(0, maxValue);
	    }
	}
	```
2024/06/19 09:21:56 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.551 s\n[INFO] Finished at: 2024-06-19T09:21:59Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007936a0}, {0xffa8c0?, 0xc00052a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0002db8b8, {0xc0002db8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00063e060, 0x26}, 0x0, {0xc0003f7920, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00063e060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0000a8578, {0xc0000a8400?, 0x7fedea38db18?, 0xc0000a8578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0000a8400}, {0xc000136000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0000a8400?}, {0xc000136000?, 0x274c500?, 0xc0000a8400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:21:59 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/19 09:22:04 Model "openrouter/google/gemini-pro-1.5" responded (5590 ms) with:
	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class LargestProperDivisorTest {

	    @Test
	    void largestProperDivisor_evenNumber() {
	        assertEquals(5, LargestProperDivisor.largestProperDivisor(10));
	    }

	    @Test
	    void largestProperDivisor_oddNumber() {
	        assertEquals(3, LargestProperDivisor.largestProperDivisor(9));
	    }

	    @Test
	    void largestProperDivisor_primeNumber() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(7));
	    }

	    @Test
	    void largestProperDivisor_one() {
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    void largestProperDivisor_lessThanOne() {
	        assertThrows(IllegalArgumentException.class, () -> LargestProperDivisor.largestProperDivisor(0));
	    }
	}
	```
2024/06/19 09:22:04 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15934621900730730522resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.786 s
[INFO] Finished at: 2024-06-19T09:22:19Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:22:19 Executes tests with 12 coverage objects
2024/06/19 09:22:19 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/19 09:22:27 Model "openrouter/google/gemini-pro-1.5" responded (8144 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd3() {
	        int[][] expected = {
	                {8, 1, 6},
	                {3, 5, 7},
	                {4, 9, 2}
	        };
	        int[][] actual = MagicSquareOdd.magicSquareOdd(3);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testMagicSquareOdd5() {
	        int[][] expected = {
	                {17, 24, 1, 8, 15},
	                {23, 5, 7, 14, 16},
	                {4, 6, 13, 20, 22},
	                {10, 12, 19, 21, 3},
	                {11, 18, 25, 2, 9}
	        };
	        int[][] actual = MagicSquareOdd.magicSquareOdd(5);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testMagicSquareOddInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(2));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(0));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(-1));
	    }
	}
	```
2024/06/19 09:22:27 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8127214115643427357resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.124 s
[INFO] Finished at: 2024-06-19T09:22:43Z
[INFO] ------------------------------------------------------------------------

Total coverage 9.401709%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:22:43 Executes tests with 28 coverage objects
2024/06/19 09:22:43 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:22:51 Model "openrouter/google/gemini-pro-1.5" responded (8205 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class MatchBytesTest {

	    @Test
	    void testMatchBytes_EmptyArrays() {
	        byte[] s1 = {};
	        byte[] s2 = {};
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_EqualArrays() {
	        byte[] s1 = { 'a', 'B', 'c' };
	        byte[] s2 = { 'a', 'B', 'c' };
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentCase() {
	        byte[] s1 = { 'a', 'b', 'c' };
	        byte[] s2 = { 'A', 'B', 'C' };
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentArrays() {
	        byte[] s1 = { 'a', 'b', 'c' };
	        byte[] s2 = { 'a', 'B', 'd' };
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_NonLetterCharacter() {
	        byte[] s1 = { 'a', 'b', '1' };
	        byte[] s2 = { 'a', 'B', '1' };
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }
	}
	```
2024/06/19 09:22:51 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4308753305097543238resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.800 s
[INFO] Finished at: 2024-06-19T09:23:04Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:23:04 Executes tests with 13 coverage objects
2024/06/19 09:23:04 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/19 09:23:10 Model "openrouter/google/gemini-pro-1.5" responded (6314 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PascalsTriangleTest {

	    @Test
	    void testGenerateTriangleValidInput() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {
	                {1},
	                {1, 1},
	                {1, 2, 1},
	                {1, 3, 3, 1},
	                {1, 4, 6, 4, 1},
	        };
	        int[][] actual = pt.generateTriangle(5);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleZeroRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        int[][] expected = {};
	        int[][] actual = pt.generateTriangle(0);
	        assertArrayEquals(expected, actual);
	    }

	    @Test
	    void testGenerateTriangleNegativeRows() {
	        PascalsTriangle pt = new PascalsTriangle();
	        assertThrows(IllegalArgumentException.class, () -> pt.generateTriangle(-1));
	    }
	}
	```
2024/06/19 09:23:10 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1768187858391032237resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.633 s
[INFO] Finished at: 2024-06-19T09:23:21Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:23:21 Executes tests with 14 coverage objects
2024/06/19 09:23:21 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/19 09:23:31 Model "openrouter/google/gemini-pro-1.5" responded (9893 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PhoneNumberTest {

	    @Test
	    void extractDigits_validInput_returnsCleanNumber() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("123.456.7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("123 456 7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("(123) 456-7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("+1234567890"));
	    }

	    @Test
	    void extractDigits_invalidInput_throwsIllegalArgumentException() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123-456-7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123@456@7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123:456:7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123!456!7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123ABC7890"));
	    }
	}
	```
2024/06/19 09:23:31 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 9 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.731 s\n[INFO] Finished at: 2024-06-19T09:23:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454000}, {0xffa8c0?, 0xc0006e4018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0006638b8, {0xc0006638a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006bc480, 0x26}, 0x0, {0xc0006ddf20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006bc480, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000102578, {0xc000102400?, 0x7f0892c76070?, 0xc000102578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000102400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000102400?}, {0xc000040080?, 0x274c500?, 0xc000102400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:23:35 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:23:39 Model "openrouter/google/gemini-pro-1.5" responded (4118 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleIfElseTest {

	    @Test
	    void testSimpleIfElse_WhenInputIsOne_ThenReturnZero() {
	        int result = SimpleIfElse.simpleIfElse(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void testSimpleIfElse_WhenInputIsNotOne_ThenReturnOne() {
	        int result = SimpleIfElse.simpleIfElse(2);
	        assertEquals(1, result);
	    }
	}

	```
2024/06/19 09:23:39 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn3812449135474550223resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  4.043 s
[INFO] Finished at: 2024-06-19T09:23:53Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:23:53 Executes tests with 5 coverage objects
2024/06/19 09:23:53 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:23:56 Model "openrouter/google/gemini-pro-1.5" responded (3623 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        assertEquals(0, SimpleSwitchWithReturn.simpleSwitchWithReturn(1));
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefault() {
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(2));
	    }
	}
	```
2024/06/19 09:23:56 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn14006717908312503405resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.890 s
[INFO] Finished at: 2024-06-19T09:24:08Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:24:09 Executes tests with 6 coverage objects
2024/06/19 09:24:09 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/19 09:24:14 Model "openrouter/google/gemini-pro-1.5" responded (5814 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class SortTest {

	    @Test
	    void isSorted_emptyArray() {
	        assertTrue(Sort.isSorted(new int[]{}));
	    }

	    @Test
	    void isSorted_singleElementArray() {
	        assertTrue(Sort.isSorted(new int[]{1}));
	    }

	    @Test
	    void isSorted_sortedArray() {
	        assertTrue(Sort.isSorted(new int[]{1, 2, 3, 4, 5}));
	    }

	    @Test
	    void isSorted_unsortedArray() {
	        assertFalse(Sort.isSorted(new int[]{1, 3, 2, 4, 5}));
	    }

	    @Test
	    void isSorted_arrayWithEqualElements() {
	        assertTrue(Sort.isSorted(new int[]{1, 1, 2, 2, 3, 3}));
	    }
	}
	```
2024/06/19 09:24:14 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn9195637965746045500resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.806 s
[INFO] Finished at: 2024-06-19T09:24:27Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:24:27 Executes tests with 6 coverage objects
2024/06/19 09:24:27 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/19 09:24:31 Model "openrouter/google/gemini-pro-1.5" responded (3735 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccess_FirstElementMatch() {
	        int[] x = {123, 2, 3};
	        assertEquals(123, TypeArrayAccess.typeArrayAccess(x));
	    }

	    @Test
	    void testTypeArrayAccess_FirstElementDoesNotMatch() {
	        int[] x = {12, 2, 3};
	        assertEquals(3, TypeArrayAccess.typeArrayAccess(x));
	    }
	}
	```
2024/06/19 09:24:31 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn13102889177333905251resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.792 s
[INFO] Finished at: 2024-06-19T09:24:43Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:24:44 Executes tests with 5 coverage objects
2024/06/19 09:24:44 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/19 09:24:49 Model "openrouter/google/gemini-pro-1.5" responded (5838 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayConsecutiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccess_BothMatch() {
	        int[] input = {0, 8};
	        assertEquals(2, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_FirstMatches() {
	        int[] input = {0, 1};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_SecondMatches() {
	        int[] input = {1, 8};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_NoneMatch() {
	        int[] input = {1, 1};
	        assertEquals(0, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }
	}
	```
2024/06/19 09:24:49 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn11020804917405929468resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.734 s
[INFO] Finished at: 2024-06-19T09:25:00Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:25:00 Executes tests with 9 coverage objects
2024/06/19 09:25:00 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/19 09:25:06 Model "openrouter/google/gemini-pro-1.5" responded (5994 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayMultidimensionalArrayLengthTest {

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case1() {
	        int[][] x = {{1,2}, {2, 3}};
	        assertEquals(2, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case2() {
	        int[][] x = {{1,2, 3}, {2, 3, 4}};
	        assertEquals(1, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case3() {
	        int[][] x = {{1,2, 3}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }
	}
	```
2024/06/19 09:25:06 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn14148176706138768505resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.918 s
[INFO] Finished at: 2024-06-19T09:25:20Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:25:20 Executes tests with 8 coverage objects
2024/06/19 09:25:20 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:25:27 Model "openrouter/google/gemini-pro-1.5" responded (7055 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ValidDateTest {

	    @Test
	    void testValidDate() {
	        assertTrue(ValidDate.validDate(1, 1, 2000));
	        assertTrue(ValidDate.validDate(29, 2, 2000));
	        assertFalse(ValidDate.validDate(29, 2, 2001));
	        assertTrue(ValidDate.validDate(28, 2, 2001));
	        assertTrue(ValidDate.validDate(31, 1, 2000));
	        assertFalse(ValidDate.validDate(31, 4, 2000));
	        assertTrue(ValidDate.validDate(30, 4, 2000));
	        assertFalse(ValidDate.validDate(0, 4, 2000));
	        assertFalse(ValidDate.validDate(1, 0, 2000));
	        assertFalse(ValidDate.validDate(1, 13, 2000));
	        assertFalse(ValidDate.validDate(1, 1, 1582));
	    }
	}
	```
2024/06/19 09:25:27 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7944374900299196625resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.195 s
[INFO] Finished at: 2024-06-19T09:25:39Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:25:39 Executes tests with 17 coverage objects
2024/06/19 09:25:39 Evaluated model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light": encountered 4 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 15 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.741 s\n[INFO] Finished at: 2024-06-19T09:21:29Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001440e0}, {0xffa8c0?, 0xc0000121f8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001a98b8, {0xc0001a98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c630, 0x26}, 0x0, {0xc0000bbe00, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c630, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000104578, {0xc000104400?, 0x7f9a7f360918?, 0xc000104578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000104400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000104400?}, {0xc000040080?, 0x274c500?, 0xc000104400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 15 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.741 s\n[INFO] Finished at: 2024-06-19T09:21:29Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[13,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[33,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[38,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[43,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001440e0}, {0xffa8c0?, 0xc0000121f8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001a98b8, {0xc0001a98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c630, 0x26}, 0x0, {0xc0000bbe00, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c630, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000104578, {0xc000104400?, 0x7f9a7f360918?, 0xc000104578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000104400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000104400?}, {0xc000040080?, 0x274c500?, 0xc000104400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/JacobiSymbol.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.753 s\n[INFO] Finished at: 2024-06-19T09:21:45Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000122220}, {0xffa8c0?, 0xc00011c1c8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005e58b8, {0xc0005e58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001660f0, 0x26}, 0x0, {0xc0005c2060, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001660f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7f5cedd4aa98?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc0000c8000?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc0000c8000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.753 s\n[INFO] Finished at: 2024-06-19T09:21:45Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[10,56] initialiseKlarnerRadoSequence(int) is not public in com.eval.KlarnerRadoSequence; cannot be accessed from outside package\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000122220}, {0xffa8c0?, 0xc00011c1c8})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0005e58b8, {0xc0005e58a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0001660f0, 0x26}, 0x0, {0xc0005c2060, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0001660f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000580578, {0xc000580400?, 0x7f5cedd4aa98?, 0xc000580578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000580400}, {0xc0000c8000?, 0x0?, 0xc00050fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000580400?}, {0xc0000c8000?, 0x274c500?, 0xc000580400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000102058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/KlarnerRadoSequence.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.551 s\n[INFO] Finished at: 2024-06-19T09:21:59Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007936a0}, {0xffa8c0?, 0xc00052a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0002db8b8, {0xc0002db8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00063e060, 0x26}, 0x0, {0xc0003f7920, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00063e060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0000a8578, {0xc0000a8400?, 0x7fedea38db18?, 0xc0000a8578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0000a8400}, {0xc000136000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0000a8400?}, {0xc000136000?, 0x274c500?, 0xc0000a8400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.551 s\n[INFO] Finished at: 2024-06-19T09:21:59Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[20,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[31,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0007936a0}, {0xffa8c0?, 0xc00052a018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0002db8b8, {0xc0002db8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00063e060, 0x26}, 0x0, {0xc0003f7920, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00063e060, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0000a8578, {0xc0000a8400?, 0x7fedea38db18?, 0xc0000a8578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0000a8400}, {0xc000136000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0000a8400?}, {0xc000136000?, 0x274c500?, 0xc0000a8400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 9 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.731 s\n[INFO] Finished at: 2024-06-19T09:23:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454000}, {0xffa8c0?, 0xc0006e4018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0006638b8, {0xc0006638a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006bc480, 0x26}, 0x0, {0xc0006ddf20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006bc480, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000102578, {0xc000102400?, 0x7f0892c76070?, 0xc000102578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000102400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000102400?}, {0xc000040080?, 0x274c500?, 0xc000102400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n  symbol:   variable PhoneNumber\n  location: class PhoneNumberTest\n[INFO] 9 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.731 s\n[INFO] Finished at: 2024-06-19T09:23:35Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[9,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[10,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[11,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[12,36] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[17,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[18,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[19,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[20,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/PhoneNumberTest.java:[21,60] cannot find symbol\n[ERROR]   symbol:   variable PhoneNumber\n[ERROR]   location: class PhoneNumberTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc000454000}, {0xffa8c0?, 0xc0006e4018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0006638b8, {0xc0006638a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0006bc480, 0x26}, 0x0, {0xc0006ddf20, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0006bc480, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000102578, {0xc000102400?, 0x7f0892c76070?, 0xc000102578?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000102400}, {0xc000040080?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000102400?}, {0xc000040080?, 0x274c500?, 0xc000102400?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/PhoneNumber.java]
2024/06/19 09:28:55 Evaluating model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light"
2024/06/19 09:28:55 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BalancedBrackets.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class BalancedBrackets {
	  static boolean hasBalancedBrackets(char[] charArray) {
	    int brackets = 0;
	    for (char ch : charArray) {
	      if (ch == '[') {
	        brackets++;
	      } else if (ch == ']') {
	        brackets--;
	      } else {
	        return false; // Non-bracket characters.
	      }
	      if (brackets < 0) { // Closing bracket before opening bracket.
	        return false;
	      }
	    }
	    return brackets == 0;
	  }
	}
	```
2024/06/19 09:29:01 Model "openrouter/google/gemini-pro-1.5" responded (5695 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BalancedBracketsTest {

	    @Test
	    void testBalancedBrackets() {
	        assertTrue(BalancedBrackets.hasBalancedBrackets("".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[][]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[]][]".toCharArray()));
	        assertTrue(BalancedBrackets.hasBalancedBrackets("[[[]]]".toCharArray()));

	        assertFalse(BalancedBrackets.hasBalancedBrackets("][".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[][]]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[[[]]".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("]".toCharArray()));

	        assertFalse(BalancedBrackets.hasBalancedBrackets("a".toCharArray()));
	        assertFalse(BalancedBrackets.hasBalancedBrackets("[a]".toCharArray()));
	    }
	}
	```
2024/06/19 09:29:01 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn5179207839591261920resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.254 s
[INFO] Finished at: 2024-06-19T09:29:09Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:29:10 Executes tests with 14 coverage objects
2024/06/19 09:29:10 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/BinarySearch.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class BinarySearch {
	    static int binarySearch(int []a, int x) {
			int index = -1;

			int min = 0;
			int max = a.length - 1;

			while (index == -1 && min <= max) {
				int m = (min + max) / 2;

				if (x == a[m]) {
					index = m;
				} else if (x < a[m]) {
					max = m - 1;
				} else {
					min = m + 1;
				}
			}

			return index;
		}
	}
	```
2024/06/19 09:29:20 Model "openrouter/google/gemini-pro-1.5" responded (10505 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class BinarySearchTest {

	    @Test
	    void testBinarySearchFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 11;
	        int expectedIndex = 4;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchNotFound() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 9;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchEmptyArray() {
	        int[] a = {};
	        int x = 5;
	        int expectedIndex = -1;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchFirstElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 2;
	        int expectedIndex = 0;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }

	    @Test
	    void testBinarySearchLastElement() {
	        int[] a = {2, 5, 7, 8, 11, 12};
	        int x = 12;
	        int expectedIndex = 5;
	        int actualIndex = BinarySearch.binarySearch(a, x);
	        assertEquals(expectedIndex, actualIndex);
	    }
	}
	```
2024/06/19 09:29:20 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn558525471520467079resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.354 s
[INFO] Finished at: 2024-06-19T09:29:29Z
[INFO] ------------------------------------------------------------------------

Total coverage 5.128205%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:29:29 Executes tests with 15 coverage objects
2024/06/19 09:29:29 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CallLoopConditionsOftenEnough.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CallLoopConditionsOftenEnough {
	    static int callLoopConditionsOftenEnough(int x, int y) {
			if (x < 10 || x > 20) {
				return 0;
			}

			for (int i = 0; i < y; i++) {
				if (i > 20) {
					x++; // This needs to be executed more than 10 times
				}
			}

			if (x > 20) { // This block needs to be reached for full coverage
				x = x / 2;
			}

			return x;
		}
	}
	```
2024/06/19 09:29:38 Model "openrouter/google/gemini-pro-1.5" responded (8694 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CallLoopConditionsOftenEnoughTest {

	    @Test
	    void callLoopConditionsOftenEnough_xLessThan10_returns0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(5, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_xGreaterThan20_returns0() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(25, 20);
	        assertEquals(0, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iLessThan20_returnsX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 10);
	        assertEquals(15, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iGreaterThan20_xLessThan20_returnsX() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 30);
	        assertEquals(25, result);
	    }

	    @Test
	    void callLoopConditionsOftenEnough_iGreaterThan20_xGreaterThan20_returnsXDividedBy2() {
	        int result = CallLoopConditionsOftenEnough.callLoopConditionsOftenEnough(15, 40);
	        assertEquals(17, result);
	    }
	}
	```
2024/06/19 09:29:38 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn12858861224022891541resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.305 s
[INFO] Finished at: 2024-06-19T09:29:47Z
[INFO] ------------------------------------------------------------------------

Total coverage 3.846154%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:29:47 Executes tests with 13 coverage objects
2024/06/19 09:29:47 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CascadingIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class CascadingIfElse {
	    static int cascadingIfElse(int i) {
	        if (i == 1) {
	            return 2;
	        } else if (i == 3) {
	            return 4;
	        } else {
	            return 5;
	        }
	    }
	}
	```
2024/06/19 09:29:51 Model "openrouter/google/gemini-pro-1.5" responded (4511 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class CascadingIfElseTest {

	    @Test
	    void testCascadingIfElse_One() {
	        assertEquals(2, CascadingIfElse.cascadingIfElse(1));
	    }

	    @Test
	    void testCascadingIfElse_Three() {
	        assertEquals(4, CascadingIfElse.cascadingIfElse(3));
	    }

	    @Test
	    void testCascadingIfElse_Other() {
	        assertEquals(5, CascadingIfElse.cascadingIfElse(2));
	    }
	}
	```
2024/06/19 09:29:51 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1303522312949752952resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.352 s
[INFO] Finished at: 2024-06-19T09:30:00Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:30:00 Executes tests with 8 coverage objects
2024/06/19 09:30:00 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/CollatzCalculator.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class CollatzCalculator {
	  static int computeStepCount(final int start) {
	    if (start <= 0) {
	      throw new IllegalArgumentException("Only positive integers are allowed");
	    }
	    if (start == 1) {
	      return 0;
	    }
	    final int next;

	    if (start % 2 == 0) {
	      next = start / 2;
	    } else {
	      next = 3 * start + 1;
	    }

	    return 1 + computeStepCount(next);
	  }
	}
	```
2024/06/19 09:30:08 Model "openrouter/google/gemini-pro-1.5" responded (7858 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class CollatzCalculatorTest {

	    @Test
	    void testComputeStepCountForOne() {
	        assertEquals(0, CollatzCalculator.computeStepCount(1));
	    }

	    @Test
	    void testComputeStepCountForEvenNumber() {
	        assertEquals(4, CollatzCalculator.computeStepCount(16));
	    }

	    @Test
	    void testComputeStepCountForOddNumber() {
	        assertEquals(9, CollatzCalculator.computeStepCount(19));
	    }

	    @Test
	    void testComputeStepCountForLargeNumber() {
	        assertEquals(111, CollatzCalculator.computeStepCount(123456789));
	    }

	    @Test
	    void testComputeStepCountForZero() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(0));
	    }

	    @Test
	    void testComputeStepCountForNegativeNumber() {
	        assertThrows(IllegalArgumentException.class, () -> CollatzCalculator.computeStepCount(-1));
	    }
	}
	```
2024/06/19 09:30:08 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn6624367382476818823resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.339 s
[INFO] Finished at: 2024-06-19T09:30:17Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:30:17 Executes tests with 13 coverage objects
2024/06/19 09:30:17 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ConditionsAnd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ConditionsAnd {
	    static boolean conditionsAnd(char x, char y) {
	        if (x == 'A' && y == 'B') {
	            return true;
	        }

	        return false;
	    }
	}
	```
2024/06/19 09:30:21 Model "openrouter/google/gemini-pro-1.5" responded (4844 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ConditionsAndTest {

	    @Test
	    void testConditionsAndTrue() {
	        assertTrue(ConditionsAnd.conditionsAnd('A', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseXNotA() {
	        assertFalse(ConditionsAnd.conditionsAnd('C', 'B'));
	    }

	    @Test
	    void testConditionsAndFalseYNotB() {
	        assertFalse(ConditionsAnd.conditionsAnd('A', 'C'));
	    }

	    @Test
	    void testConditionsAndFalseBothNotMatching() {
	        assertFalse(ConditionsAnd.conditionsAnd('X', 'Y'));
	    }
	}
	```
2024/06/19 09:30:21 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8441216392134910903resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.560 s
[INFO] Finished at: 2024-06-19T09:30:31Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:30:31 Executes tests with 5 coverage objects
2024/06/19 09:30:31 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/EqulibriumIndices.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class EqulibriumIndices {
	  static String equlibriumIndices(int[] sequence) {
	    String indexList = "";
	    // Determine total sum.
	    int totalSum = 0;
	    for (int n : sequence) {
	      totalSum += n;
	    }
	    // Compare running sum to remaining sum to find equilibrium indices.
	    int runningSum = 0;
	    for (int i = 0; i < sequence.length; i++) {
	      int n = sequence[i];
	      if (totalSum - runningSum - n == runningSum) {
	        indexList += i + ";";
	      }
	      runningSum += n;
	    }

	    return indexList;
	  }
	}
	```
2024/06/19 09:30:41 Model "openrouter/google/gemini-pro-1.5" responded (9530 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;
	import com.eval.EqulibriumIndices;

	class EqulibriumIndicesTest {

	    @Test
	    void testEqulibriumIndices_EmptyArray() {
	        int[] sequence = {};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_SingleElement() {
	        int[] sequence = {1};
	        String expected = "0;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_MultipleElementsWithEquilibrium() {
	        int[] sequence = {1, 3, 5, 7, 9, 11, 5, 3, 1};
	        String expected = "4;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }
	    
	    @Test
	    void testEqulibriumIndices_MultipleElementsWithoutEquilibrium() {
	        int[] sequence = {1, 2, 3, 4, 5};
	        String expected = "";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	    @Test
	    void testEqulibriumIndices_MultipleEquilibriumIndices() {
	        int[] sequence = {0, -3, 5, -4, -2, 3, 1, 0};
	        String expected = "0;3;7;";
	        String actual = EqulibriumIndices.equlibriumIndices(sequence);
	        assertEquals(expected, actual);
	    }

	}
	```
2024/06/19 09:30:41 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.492 s\n[INFO] Finished at: 2024-06-19T09:30:44Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00014a040}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00042b8b8, {0xc00042b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00011c0f0, 0x26}, 0x0, {0xc000043800, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00011c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f9019ac3198?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc000112000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc000112000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:30:44 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ForLoop.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ForLoop {
	    static int forLoop(int s) {
	        int sum = 0;
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }
	        for (int i = 0; i < s; i++) {
	            sum = sum + i;
	        }

	        return sum;
	    }
	}
	```
2024/06/19 09:30:48 Model "openrouter/google/gemini-pro-1.5" responded (3715 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class ForLoopTest {

	    @Test
	    void testForLoopZero() {
	        assertEquals(0, ForLoop.forLoop(0));
	    }

	    @Test
	    void testForLoopOne() {
	        assertEquals(0, ForLoop.forLoop(1));
	    }

	    @Test
	    void testForLoopPositive() {
	        assertEquals(12, ForLoop.forLoop(3));
	    }
	}
	```
2024/06/19 09:30:48 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8238218653950510765resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.442 s
[INFO] Finished at: 2024-06-19T09:30:56Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:30:57 Executes tests with 9 coverage objects
2024/06/19 09:30:57 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/JacobiSymbol.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class JacobiSymbol {
	  static int jacobiSymbol(int k, int n) {
	    if (k < 0 || n % 2 == 0) {
	      throw new IllegalArgumentException("Invalid value. k = " + k +
	          ", n = " + n);
	    }
	    k %= n;
	    int jacobi = 1;
	    while (k > 0) {
	      while (k % 2 == 0) {
	        k /= 2;
	        int r = n % 8;
	        if (r == 3 || r == 5) {
	          jacobi = -jacobi;
	        }
	      }
	      int temp = n;
	      n = k;
	      k = temp;
	      if (k % 4 == 3 && n % 4 == 3) {
	        jacobi = -jacobi;
	      }
	      k %= n;
	    }
	    if (n == 1) {
	      return jacobi;
	    }
	    return 0;
	  }
	}
	```
2024/06/19 09:31:08 Model "openrouter/google/gemini-pro-1.5" responded (11814 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class JacobiSymbolTest {

	    @Test
	    void testJacobiSymbol() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(2, 5));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(3, 5));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(4, 5));

	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 15));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(2, 15));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(3, 15));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(4, 15));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(7, 15));
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(8, 15));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(9, 15));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(11, 15));
	        assertEquals(1, JacobiSymbol.jacobiSymbol(13, 15));
	        assertEquals(0, JacobiSymbol.jacobiSymbol(15, 15));
	    }

	    @Test
	    void testJacobiSymbolInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(-1, 5));
	        assertThrows(IllegalArgumentException.class, () -> JacobiSymbol.jacobiSymbol(1, 4));
	    }

	    @Test
	    void testJacobiSymbolKGreaterThanN() {
	        assertEquals(-1, JacobiSymbol.jacobiSymbol(7, 5));
	    }

	    @Test
	    void testJacobiSymbolKZero() {
	        assertEquals(0, JacobiSymbol.jacobiSymbol(0, 5));
	    }

	    @Test
	    void testJacobiSymbolNEqualOne() {
	        assertEquals(1, JacobiSymbol.jacobiSymbol(1, 1));
	    }
	}
	```
2024/06/19 09:31:08 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.523 s\n[INFO] Finished at: 2024-06-19T09:31:11Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c4020}, {0xffa8c0?, 0xc0000ca270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001738b8, {0xc0001738a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc000889320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000520178, {0xc000520000?, 0x7f03a55848d8?, 0xc000520178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000520000}, {0xc0000e4000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000520000?}, {0xc0000e4000?, 0x274c500?, 0xc000520000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:31:12 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/KlarnerRadoSequence.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class KlarnerRadoSequence {
	  static int[] initialiseKlarnerRadoSequence(int limit) {
	    int[] result = new int[limit + 1];
	    int i2 = 1, i3 = 1;
	    int m2 = 1, m3 = 1;
	    for (int i = 1; i <= limit; i++) {
	      int minimum = Math.min(m2, m3);
	      result[i] = minimum;
	      ;
	      if (m2 == minimum) {
	        m2 = result[i2] * 2 + 1;
	        i2 += 1;
	      }
	      if (m3 == minimum) {
	        m3 = result[i3] * 3 + 1;
	        i3 += 1;
	      }
	    }
	    return result;
	  }
	}
	```
2024/06/19 09:31:24 Model "openrouter/google/gemini-pro-1.5" responded (11959 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KlarnerRadoSequenceTest {

	    @Test
	    void testKlarnerRadoSequence() {
	        assertArrayEquals(new int[]{0, 1, 2, 3, 4, 6, 8, 9, 12, 16, 18, 24, 27, 32, 36, 48, 54, 64, 72, 81, 96, 108, 128, 144, 162, 192, 216, 243, 256, 288, 324, 384, 432, 486, 512, 576, 648, 729, 768, 864, 972, 1024, 1152, 1296, 1458, 1536, 1728, 1944, 2048, 2304, 2592, 2916, 3072, 3456, 3888, 4096, 4608, 5184, 5832, 6144, 6912, 7776, 8192, 9216, 10368, 11664, 12288, 13824, 15552, 16384, 18432, 20736, 23328, 24576, 27648, 31104, 32768, 36864, 41472, 46656, 49152, 55296, 62208, 65536, 73728, 82944, 93312, 98304}, KlarnerRadoSequence.initialiseKlarnerRadoSequence(100));
	    }
	}
	```
2024/06/19 09:31:24 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n  symbol:   variable KlarnerRadoSequence\n  location: class KlarnerRadoSequenceTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.322 s\n[INFO] Finished at: 2024-06-19T09:31:26Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n[ERROR]   symbol:   variable KlarnerRadoSequence\n[ERROR]   location: class KlarnerRadoSequenceTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc000612018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004e98b8, {0xc0004e98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000656030, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000656030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f8fb0482798?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:31:27 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Knapsack.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class Knapsack {
	  static int maximumValue(int maximumWeight, Item[] items) {
	    int[][] knapsack = new int[items.length + 1][maximumWeight + 1];
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        knapsack[item][weight] = 0; // Return 0 if not filled
	      }
	    }
	    for (int item = 0; item <= items.length; item++) {
	      for (int weight = 0; weight <= maximumWeight; weight++) {
	        if (item == 0 || weight == 0) {
	          knapsack[item][weight] = 0;
	        } else if (items[item - 1].weight > weight) {
	          knapsack[item][weight] = knapsack[item - 1][weight];
	        } else {
	          int itemValue = items[item - 1].value;
	          int itemWeight = items[item - 1].weight;
	          knapsack[item][weight] =
	              Math.max(itemValue + knapsack[item - 1][weight - itemWeight],
	                       knapsack[item - 1][weight]);
	        }
	      }
	    }
	    return knapsack[items.length][maximumWeight];
	  }

	  class Item {
	    int weight;
	    int value;
	  }
	}
	```
2024/06/19 09:31:35 Model "openrouter/google/gemini-pro-1.5" responded (8690 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class KnapsackTest {

	    @Test
	    void testMaximumValue_EmptyItems() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = new Item[0];
	        assertEquals(0, knapsack.maximumValue(10, items));
	    }

	    @Test
	    void testMaximumValue_ZeroWeight() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {new Knapsack().new Item()};
	        assertEquals(0, knapsack.maximumValue(0, items));
	    }

	    @Test
	    void testMaximumValue_NormalCase() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {
	                createItem(10, 60),
	                createItem(20, 100),
	                createItem(30, 120)
	        };
	        assertEquals(220, knapsack.maximumValue(50, items));
	    }

	    @Test
	    void testMaximumValue_WeightOverflow() {
	        Knapsack knapsack = new Knapsack();
	        Item[] items = {
	                createItem(10, 60),
	                createItem(20, 100),
	                createItem(30, 120)
	        };
	        assertEquals(160, knapsack.maximumValue(40, items));
	    }

	    private Item createItem(int weight, int value) {
	        Knapsack knapsack = new Knapsack();
	        Item item = knapsack.new Item();
	        item.weight = weight;
	        item.value = value;
	        return item;
	    }
	}
	```
2024/06/19 09:31:35 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.413 s\n[INFO] Finished at: 2024-06-19T09:31:38Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0006ad470})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004f38b8, {0xc0004f38a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c210, 0x26}, 0x0, {0xc00060eae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c210, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079978, {0xc000079800?, 0x7fb782455458?, 0xc000079978?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079800}, {0xc000192000?, 0x2782d80?, 0xc0004c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079800?}, {0xc000192000?, 0x274c500?, 0xc000079800?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:31:38 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/LargestProperDivisor.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class LargestProperDivisor {
	  static int largestProperDivisor(int aNumber) {
	    if (aNumber < 1) {
	      throw new IllegalArgumentException("Argument must be >= 1: " + aNumber);
	    }

	    if ((aNumber & 1) == 0) {
	      return aNumber >> 1;
	    }
	    for (int p = 3; p * p <= aNumber; p += 2) {
	      if (aNumber % p == 0) {
	        return aNumber / p;
	      }
	    }
	    return 1;
	  }
	}
	```
2024/06/19 09:31:45 Model "openrouter/google/gemini-pro-1.5" responded (7184 ms) with:
	```java
	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	import com.eval.LargestProperDivisor;

	class LargestProperDivisorTest {

	    @Test
	    void testLargestProperDivisor() {
	        assertEquals(4, LargestProperDivisor.largestProperDivisor(8));
	        assertEquals(12, LargestProperDivisor.largestProperDivisor(24));
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(7));
	        assertEquals(19, LargestProperDivisor.largestProperDivisor(38));
	        assertEquals(1, LargestProperDivisor.largestProperDivisor(1));
	    }

	    @Test
	    void testLargestProperDivisorException() {
	        IllegalArgumentException thrown = assertThrows(IllegalArgumentException.class,
	                () -> LargestProperDivisor.largestProperDivisor(0));
	        assertTrue(thrown.getMessage().contains("Argument must be >= 1: 0"));
	     }
	}
	```
2024/06/19 09:31:45 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.590 s\n[INFO] Finished at: 2024-06-19T09:31:49Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d0000}, {0xffa8c0?, 0xc0000ca090})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000426270, 0x26}, 0x0, {0xc000581020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000426270, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0005a4178, {0xc0005a4000?, 0x7fdf15b6d038?, 0xc0005a4178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0005a4000}, {0xc000040080?, 0x40?, 0xc00051ded8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0005a4000?}, {0xc000040080?, 0x274c500?, 0xc0005a4000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:31:49 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MagicSquareOdd.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	// Copyright (C) rosettacode.org
	package com.eval;

	public class MagicSquareOdd {
		public static int[][] magicSquareOdd(final int base) {
			if (base % 2 == 0 || base < 3)
				throw new IllegalArgumentException("base must be odd and > 2");

			int[][] grid = new int[base][base];
			int r = 0, number = 0;
			int size = base * base;

			int c = base / 2;
			while (number++ < size) {
				grid[r][c] = number;
				if (r == 0) {
					if (c == base - 1) {
						r++;
					} else {
						r = base - 1;
						c++;
					}
				} else {
					if (c == base - 1) {
						r--;
						c = 0;
					} else {
						if (grid[r - 1][c + 1] == 0) {
							r--;
							c++;
						} else {
							r++;
						}
					}
				}
			}
			return grid;
		}
	}
	```
2024/06/19 09:31:57 Model "openrouter/google/gemini-pro-1.5" responded (7951 ms) with:
	```java
	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class MagicSquareOddTest {

	    @Test
	    void testMagicSquareOdd3() {
	        int[][] expected = {
	                {8, 1, 6},
	                {3, 5, 7},
	                {4, 9, 2}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(3));
	    }

	    @Test
	    void testMagicSquareOdd5() {
	        int[][] expected = {
	                {17, 24, 1, 8, 15},
	                {23, 5, 7, 14, 16},
	                {4, 6, 13, 20, 22},
	                {10, 12, 19, 21, 3},
	                {11, 18, 25, 2, 9}
	        };
	        assertArrayEquals(expected, MagicSquareOdd.magicSquareOdd(5));
	    }

	    @Test
	    void testInvalidInput() {
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(2));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(0));
	        assertThrows(IllegalArgumentException.class, () -> MagicSquareOdd.magicSquareOdd(-2));
	    }
	}
	```
2024/06/19 09:31:57 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.455 s\n[INFO] Finished at: 2024-06-19T09:32:00Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001160c0}, {0xffa8c0?, 0xc000012030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000298b8, {0xc0000298a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0000ec2d0, 0x26}, 0x0, {0xc00056d5c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0000ec2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000522178, {0xc000522000?, 0x7fdff2386558?, 0xc000522178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000522000}, {0xc0000e2000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000522000?}, {0xc0000e2000?, 0x274c500?, 0xc000522000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5

2024/06/19 09:32:00 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/MatchBytes.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class MatchBytes {
	    static boolean matchBytes(byte[] s1, byte[] s2) {
			for (int i = 0; i < s1.length; i++) {
				byte c1 = s1[i];
				byte c2 = s2[i];

				if (c1 != c2) {
					c1 |= 'a' - 'A';
					c2 |= 'a' - 'A';

					if (c1 != c2 || c1 < 'a' || c1 > 'z') {
						return false;
					}
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:32:09 Model "openrouter/google/gemini-pro-1.5" responded (9351 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class MatchBytesTest {

	    @Test
	    void testMatchBytes_EmptyArrays() {
	        byte[] s1 = new byte[0];
	        byte[] s2 = new byte[0];
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_EqualArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hello".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "world".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_CaseInsensitiveMatch() {
	        byte[] s1 = "HeLlO".getBytes();
	        byte[] s2 = "hElLo".getBytes();
	        assertTrue(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_NonLetterDifference() {
	        byte[] s1 = "hello!".getBytes();
	        byte[] s2 = "hello.".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }

	    @Test
	    void testMatchBytes_DifferentLengthArrays() {
	        byte[] s1 = "hello".getBytes();
	        byte[] s2 = "hell".getBytes();
	        assertFalse(MatchBytes.matchBytes(s1, s2));
	    }
	}
	```
2024/06/19 09:32:09 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn17307726924856194881resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.365 s
[INFO] Finished at: 2024-06-19T09:32:19Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.273504%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:32:19 Executes tests with 13 coverage objects
2024/06/19 09:32:19 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PascalsTriangle.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PascalsTriangle {
	  int[][] generateTriangle(int rows) {
	    if (rows < 0) {
	      throw new IllegalArgumentException("Rows can't be negative!");
	    }

	    int[][] triangle = new int[rows][];

	    for (int i = 0; i < rows; i++) {
	      triangle[i] = new int[i + 1];
	      triangle[i][0] = 1;
	      for (int j = 1; j < i; j++) {
	        triangle[i][j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
	      }
	      triangle[i][i] = 1;
	    }
	    return triangle;
	  }
	}
	```
2024/06/19 09:32:25 Model "openrouter/google/gemini-pro-1.5" responded (6209 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.*;

	import org.junit.jupiter.api.Test;

	class PascalsTriangleTest {

	  @Test
	  void testGenerateTriangleValidInput() {
	    PascalsTriangle pt = new PascalsTriangle();
	    int[][] expectedTriangle = {
	        {1},
	        {1, 1},
	        {1, 2, 1},
	        {1, 3, 3, 1},
	        {1, 4, 6, 4, 1}
	    };
	    int[][] actualTriangle = pt.generateTriangle(5);
	    assertArrayEquals(expectedTriangle, actualTriangle);
	  }
	  
	  @Test
	  void testGenerateTriangleZeroRows() {
	    PascalsTriangle pt = new PascalsTriangle();
	    int[][] expectedTriangle = {};
	    int[][] actualTriangle = pt.generateTriangle(0);
	    assertArrayEquals(expectedTriangle, actualTriangle);
	  }

	  @Test
	  void testGenerateTriangleNegativeRows() {
	    PascalsTriangle pt = new PascalsTriangle();
	    assertThrows(IllegalArgumentException.class, () -> pt.generateTriangle(-1));
	  }
	}
	```
2024/06/19 09:32:25 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15684885550237333152resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.464 s
[INFO] Finished at: 2024-06-19T09:32:34Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:32:34 Executes tests with 14 coverage objects
2024/06/19 09:32:34 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/PhoneNumber.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	public class PhoneNumber {
	  static String extractDigits(String dirtyNumber) {
	    String cleanNumber = "";
	    for (int i = 0; i < dirtyNumber.length(); i++) {
	      char c = dirtyNumber.charAt(i);
	      if (c == ' ' || c == '.' || c == '(' || c == ')' || c == '-' ||
	          c == '+') {
	        // Remove spaces, dots, parentheses, hyphens and pluses.
	        continue;
	      }
	      if (c == '-' || c == '@' || c == ':' || c == '!') {
	        throw new IllegalArgumentException("punctuations not permitted");
	      }
	      if (c < '0' || c > '9') {
	        throw new IllegalArgumentException("letters not permitted");
	      }
	      cleanNumber += c;
	    }

	    return cleanNumber;
	  }
	}
	```
2024/06/19 09:32:43 Model "openrouter/google/gemini-pro-1.5" responded (9152 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class PhoneNumberTest {

	    @Test
	    void extractDigits_validInput_returnsCleanNumber() {
	        assertEquals("1234567890", PhoneNumber.extractDigits("1234567890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("123 456 7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("(123) 456-7890"));
	        assertEquals("1234567890", PhoneNumber.extractDigits("+1 (123) 456-7890"));
	    }

	    @Test
	    void extractDigits_invalidPunctuation_throwsException() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123-456-7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123@456@7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123:456:7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123!456!7890"));
	    }

	    @Test
	    void extractDigits_letters_throwsException() {
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123ABC7890"));
	        assertThrows(IllegalArgumentException.class, () -> PhoneNumber.extractDigits("123 abc 7890"));
	    }
	}
	```
2024/06/19 09:32:43 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn15515120856080751012resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.455 s
[INFO] Finished at: 2024-06-19T09:32:53Z
[INFO] ------------------------------------------------------------------------

Total coverage 4.700855%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:32:53 Executes tests with 15 coverage objects
2024/06/19 09:32:53 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleIfElse.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleIfElse {
	    static int simpleIfElse(int i) {
	        if (i == 1) {
	            return 0;
	        } else {
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:32:57 Model "openrouter/google/gemini-pro-1.5" responded (3437 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class SimpleIfElseTest {

	    @Test
	    void simpleIfElse_InputIsOne_ReturnsZero() {
	        int result = SimpleIfElse.simpleIfElse(1);
	        assertEquals(0, result);
	    }

	    @Test
	    void simpleIfElse_InputIsNotOne_ReturnsOne() {
	        int result = SimpleIfElse.simpleIfElse(2);
	        assertEquals(1, result);
	    }
	}
	```
2024/06/19 09:32:57 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7246388041093614870resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.403 s
[INFO] Finished at: 2024-06-19T09:33:05Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:33:05 Executes tests with 5 coverage objects
2024/06/19 09:33:05 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/SimpleSwitchWithReturn.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class SimpleSwitchWithReturn {
	    static int simpleSwitchWithReturn(int i) {
	        switch (i) {
	        case 1:
	            return 0;
	        default:
	            return 1;
	        }
	    }
	}
	```
2024/06/19 09:33:09 Model "openrouter/google/gemini-pro-1.5" responded (3618 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class SimpleSwitchWithReturnTest {

	    @Test
	    void testSimpleSwitchWithReturnCase1() {
	        assertEquals(0, SimpleSwitchWithReturn.simpleSwitchWithReturn(1));
	    }

	    @Test
	    void testSimpleSwitchWithReturnDefault() {
	        assertEquals(1, SimpleSwitchWithReturn.simpleSwitchWithReturn(2));
	    }
	}
	```
2024/06/19 09:33:09 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn1536065174462256585resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.462 s
[INFO] Finished at: 2024-06-19T09:33:18Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:33:18 Executes tests with 6 coverage objects
2024/06/19 09:33:18 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/Sort.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class Sort {
	    static boolean isSorted(int[] a) {
	        int i = 0;
	        while (i < a.length - 1 && a[i] <= a[i + 1]) {
	            i++;
	        }

	        return i == a.length - 1;
	    }
	}
	```
2024/06/19 09:33:25 Model "openrouter/google/gemini-pro-1.5" responded (6731 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class SortTest {

	    @Test
	    void isSorted_emptyArray() {
	        int[] a = {};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_singleElementArray() {
	        int[] a = {1};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_sortedArray() {
	        int[] a = {1, 2, 3, 4, 5};
	        assertTrue(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_unsortedArray() {
	        int[] a = {1, 3, 2, 4, 5};
	        assertFalse(Sort.isSorted(a));
	    }

	    @Test
	    void isSorted_unsortedArrayWithDuplicates() {
	        int[] a = {1, 3, 2, 2, 5};
	        assertFalse(Sort.isSorted(a));
	    }
	}
	```
2024/06/19 09:33:25 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn358284266339571628resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.500 s
[INFO] Finished at: 2024-06-19T09:33:34Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.136752%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:33:34 Executes tests with 6 coverage objects
2024/06/19 09:33:34 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayAccess {
	    static int typeArrayAccess(int[] x) {
	        if (x[0] == 123) {
	            return x[0];
	        }

	        return 3;
	    }
	}
	```
2024/06/19 09:33:38 Model "openrouter/google/gemini-pro-1.5" responded (4165 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;

	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayAccessTest {

	    @Test
	    void testTypeArrayAccess_FirstElement123() {
	        int[] x = {123, 4, 5};
	        int result = TypeArrayAccess.typeArrayAccess(x);
	        assertEquals(123, result);
	    }

	    @Test
	    void testTypeArrayAccess_FirstElementNot123() {
	        int[] x = {1, 4, 5};
	        int result = TypeArrayAccess.typeArrayAccess(x);
	        assertEquals(3, result);
	    }
	}
	```
2024/06/19 09:33:38 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn4101800053849054826resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.397 s
[INFO] Finished at: 2024-06-19T09:33:48Z
[INFO] ------------------------------------------------------------------------

Total coverage 1.709402%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:33:48 Executes tests with 5 coverage objects
2024/06/19 09:33:48 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayConsecutiveAccess.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayConsecutiveAccess {
	    static int typeArrayConsecutiveAccess(int[] input) {
	        int cnt = 0;
	        if (input[0] == 0)
	            cnt++;
	        if (input[1] == 8)
	            cnt++;
	        return cnt;
	    }
	}
	```
2024/06/19 09:33:54 Model "openrouter/google/gemini-pro-1.5" responded (6405 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayConsecutiveAccessTest {

	    @Test
	    void testTypeArrayConsecutiveAccess_BothMatch() {
	        int[] input = {0, 8};
	        assertEquals(2, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_FirstMatches() {
	        int[] input = {0, 1};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_SecondMatches() {
	        int[] input = {1, 8};
	        assertEquals(1, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }

	    @Test
	    void testTypeArrayConsecutiveAccess_NoneMatch() {
	        int[] input = {1, 1};
	        assertEquals(0, TypeArrayConsecutiveAccess.typeArrayConsecutiveAccess(input));
	    }
	}
	```
2024/06/19 09:33:54 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn7220719713881432533resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.568 s
[INFO] Finished at: 2024-06-19T09:34:03Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.991453%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:34:03 Executes tests with 9 coverage objects
2024/06/19 09:34:04 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/TypeArrayMultidimensionalArrayLength.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class TypeArrayMultidimensionalArrayLength {
	    static int typeArrayMultidimensionalArrayLength(int[][] x) {
	        if (x.length == 2) {
	            if (x[0].length == 2) {
	                return 2;
	            }

	            return 1;
	        }

	        return 0;
	    }
	}
	```
2024/06/19 09:34:10 Model "openrouter/google/gemini-pro-1.5" responded (6473 ms) with:
	```java
	package com.eval;

	import org.junit.jupiter.api.Test;
	import static org.junit.jupiter.api.Assertions.*;

	class TypeArrayMultidimensionalArrayLengthTest {

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case1() {
	        int[][] x = {{1, 2}, {3, 4}};
	        assertEquals(2, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case2() {
	        int[][] x = {{1, 2, 3}, {4, 5, 6}};
	        assertEquals(1, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case3() {
	        int[][] x = {{1}, {2}};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }

	    @Test
	    void testTypeArrayMultidimensionalArrayLength_Case4() {
	        int[][] x = {};
	        assertEquals(0, TypeArrayMultidimensionalArrayLength.typeArrayMultidimensionalArrayLength(x));
	    }
	}
	```
2024/06/19 09:34:10 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn8197486096791600688resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.389 s
[INFO] Finished at: 2024-06-19T09:34:19Z
[INFO] ------------------------------------------------------------------------

Total coverage 2.564103%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:34:19 Executes tests with 8 coverage objects
2024/06/19 09:34:19 Querying model "openrouter/google/gemini-pro-1.5" with:
	Given the following Java code file "src/main/java/com/eval/ValidDate.java" with package "com.eval", provide a test file for this code with JUnit 5 as a test framework.
	The tests should produce 100 percent code coverage and must compile.
	The response must contain only the test code and nothing else.

	```java
	package com.eval;

	class ValidDate {
	    static boolean validDate(int day, int month, int year) {
			int[] monthDays = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

			if (year < 1583) {
				return false;
			}
			if (month < 1 || month > 12) {
				return false;
			}
			if (day < 1) {
				return false;
			}
			if (month == 2) {
				if ((year % 400) != 0 && (year % 4) == 0) {
					if (day > 29) {
						return false;
					}
				} else {
					if (day > 28) {
						return false;
					}
				}
			} else {
				if (day > monthDays[month-1]) {
					return false;
				}
			}

			return true;
		}
	}
	```
2024/06/19 09:34:27 Model "openrouter/google/gemini-pro-1.5" responded (7975 ms) with:
	```java
	package com.eval;

	import static org.junit.jupiter.api.Assertions.*;

	import org.junit.jupiter.api.Test;

	class ValidDateTest {

	    @Test
	    void testValidDate() {
	        assertTrue(ValidDate.validDate(1, 1, 1583));
	        assertTrue(ValidDate.validDate(29, 2, 2000));
	        assertTrue(ValidDate.validDate(29, 2, 2020));
	        assertTrue(ValidDate.validDate(31, 12, 2023));
	        assertTrue(ValidDate.validDate(30, 4, 2024));
	    }

	    @Test
	    void testInvalidDate() {
	        assertFalse(ValidDate.validDate(1, 1, 1582));
	        assertFalse(ValidDate.validDate(29, 2, 2023));
	        assertFalse(ValidDate.validDate(32, 12, 2023));
	        assertFalse(ValidDate.validDate(31, 4, 2024));
	        assertFalse(ValidDate.validDate(0, 12, 2023));
	        assertFalse(ValidDate.validDate(1, 0, 2023));
	        assertFalse(ValidDate.validDate(1, 13, 2023));
	    }
	}
	```
2024/06/19 09:34:27 $ symflower test --language java --workspace /tmp/eval-dev-quality1279147334/light --coverage-file /tmp/eval-dev-quality1279147334/light/coverage.json
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT
[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:aggregate (default-cli) @ test-java-light ---
[INFO] 
[INFO] ------------------< eval.dev.quality:test-java-light >------------------
[INFO] Building test-java-light SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clover:4.5.2:clover (default-cli) @ test-java-light ---
[INFO] Using default-clover-report descriptor.
[INFO] Using Clover report descriptor: /tmp/mvn16819050805759112659resource
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Clover is enabled with initstring '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] OpenClover Version 4.5.2, built on 2024-01-31
[INFO] Loading coverage database from: '/tmp/eval-dev-quality1279147334/light/target/clover/clover.db'
[INFO] Writing report to '/tmp/eval-dev-quality1279147334/light/target/site/clover/clover.xml'
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.386 s
[INFO] Finished at: 2024-06-19T09:34:36Z
[INFO] ------------------------------------------------------------------------

Total coverage 6.410256%
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
2024/06/19 09:34:36 Executes tests with 21 coverage objects
2024/06/19 09:34:36 Evaluated model "openrouter/google/gemini-pro-1.5" on task "write-tests" using language "java" and repository "java/light": encountered 6 problems: [exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.492 s\n[INFO] Finished at: 2024-06-19T09:30:44Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00014a040}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00042b8b8, {0xc00042b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00011c0f0, 0x26}, 0x0, {0xc000043800, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00011c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f9019ac3198?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc000112000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc000112000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.492 s\n[INFO] Finished at: 2024-06-19T09:30:44Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[11,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[19,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[27,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[35,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/EqulibriumIndicesTest.java:[43,42] equlibriumIndices(int[]) is not public in com.eval.EqulibriumIndices; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00014a040}, {0xffa8c0?, 0xc0001021e0})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc00042b8b8, {0xc00042b8a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00011c0f0, 0x26}, 0x0, {0xc000043800, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00011c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079178, {0xc000079000?, 0x7f9019ac3198?, 0xc000079178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079000}, {0xc000112000?, 0x0?, 0xc00039fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079000?}, {0xc000112000?, 0x274c500?, 0xc000079000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/EqulibriumIndices.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.523 s\n[INFO] Finished at: 2024-06-19T09:31:11Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c4020}, {0xffa8c0?, 0xc0000ca270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001738b8, {0xc0001738a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc000889320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000520178, {0xc000520000?, 0x7f03a55848d8?, 0xc000520178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000520000}, {0xc0000e4000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000520000?}, {0xc0000e4000?, 0x274c500?, 0xc000520000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n  symbol:   variable JacobiSymbol\n  location: class JacobiSymbolTest\n[INFO] 19 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.523 s\n[INFO] Finished at: 2024-06-19T09:31:11Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[9,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[10,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[11,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[12,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[14,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[15,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[16,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[17,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[18,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[19,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[20,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[21,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[22,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[23,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[28,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[29,60] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[34,26] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[39,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/JacobiSymbolTest.java:[44,25] cannot find symbol\n[ERROR]   symbol:   variable JacobiSymbol\n[ERROR]   location: class JacobiSymbolTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0003c4020}, {0xffa8c0?, 0xc0000ca270})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0001738b8, {0xc0001738a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c0f0, 0x26}, 0x0, {0xc000889320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c0f0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000520178, {0xc000520000?, 0x7f03a55848d8?, 0xc000520178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000520000}, {0xc0000e4000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000520000?}, {0xc0000e4000?, 0x274c500?, 0xc000520000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/JacobiSymbol.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n  symbol:   variable KlarnerRadoSequence\n  location: class KlarnerRadoSequenceTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.322 s\n[INFO] Finished at: 2024-06-19T09:31:26Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n[ERROR]   symbol:   variable KlarnerRadoSequence\n[ERROR]   location: class KlarnerRadoSequenceTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc000612018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004e98b8, {0xc0004e98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000656030, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000656030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f8fb0482798?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n  symbol:   variable KlarnerRadoSequence\n  location: class KlarnerRadoSequenceTest\n[INFO] 1 error\n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.322 s\n[INFO] Finished at: 2024-06-19T09:31:26Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KlarnerRadoSequenceTest.java:[8,520] cannot find symbol\n[ERROR]   symbol:   variable KlarnerRadoSequence\n[ERROR]   location: class KlarnerRadoSequenceTest\n[ERROR] \n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc00047c000}, {0xffa8c0?, 0xc000612018})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004e98b8, {0xc0004e98a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000656030, 0x26}, 0x0, {0xc000043320, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000656030, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0001b7d78, {0xc0001b7c00?, 0x7f8fb0482798?, 0xc0001b7d78?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0001b7c00}, {0xc000192000?, 0x0?, 0xc00041fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0001b7c00?}, {0xc000192000?, 0x274c500?, 0xc0001b7c00?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/KlarnerRadoSequence.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.413 s\n[INFO] Finished at: 2024-06-19T09:31:38Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0006ad470})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004f38b8, {0xc0004f38a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c210, 0x26}, 0x0, {0xc00060eae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c210, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079978, {0xc000079800?, 0x7fb782455458?, 0xc000079978?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079800}, {0xc000192000?, 0x2782d80?, 0xc0004c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079800?}, {0xc000192000?, 0x274c500?, 0xc000079800?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n  symbol:   class Item\n  location: class com.eval.KnapsackTest\n[INFO] 7 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.413 s\n[INFO] Finished at: 2024-06-19T09:31:38Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[44,13] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[11,28] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[18,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[25,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[36,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/KnapsackTest.java:[46,9] cannot find symbol\n[ERROR]   symbol:   class Item\n[ERROR]   location: class com.eval.KnapsackTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001ca040}, {0xffa8c0?, 0xc0006ad470})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004f38b8, {0xc0004f38a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc00004c210, 0x26}, 0x0, {0xc00060eae0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc00004c210, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000079978, {0xc000079800?, 0x7fb782455458?, 0xc000079978?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000079800}, {0xc000192000?, 0x2782d80?, 0xc0004c1ed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000079800?}, {0xc000192000?, 0x274c500?, 0xc000079800?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc000100058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/Knapsack.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.590 s\n[INFO] Finished at: 2024-06-19T09:31:49Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d0000}, {0xffa8c0?, 0xc0000ca090})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000426270, 0x26}, 0x0, {0xc000581020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000426270, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0005a4178, {0xc0005a4000?, 0x7fdf15b6d038?, 0xc0005a4178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0005a4000}, {0xc000040080?, 0x40?, 0xc00051ded8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0005a4000?}, {0xc000040080?, 0x274c500?, 0xc0005a4000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[INFO] 6 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.590 s\n[INFO] Finished at: 2024-06-19T09:31:49Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[11,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[12,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[13,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[14,46] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[15,45] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/LargestProperDivisorTest.java:[21,43] largestProperDivisor(int) is not public in com.eval.LargestProperDivisor; cannot be accessed from outside package\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0000d0000}, {0xffa8c0?, 0xc0000ca090})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0004558b8, {0xc0004558a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc000426270, 0x26}, 0x0, {0xc000581020, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc000426270, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc0005a4178, {0xc0005a4000?, 0x7fdf15b6d038?, 0xc0005a4178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc0005a4000}, {0xc000040080?, 0x40?, 0xc00051ded8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc0005a4000?}, {0xc000040080?, 0x274c500?, 0xc0005a4000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/LargestProperDivisor.java exit status 1
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.455 s\n[INFO] Finished at: 2024-06-19T09:32:00Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001160c0}, {0xffa8c0?, 0xc000012030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000298b8, {0xc0000298a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0000ec2d0, 0x26}, 0x0, {0xc00056d5c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0000ec2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000522178, {0xc000522000?, 0x7fdff2386558?, 0xc000522178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000522000}, {0xc0000e2000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000522000?}, {0xc0000e2000?, 0x274c500?, 0xc000522000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


github.com/symflower/eval-dev-quality/util.CommandWithResult
	/home/ubuntu/eval-dev-quality/util/exec.go:52
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:108
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
github.com/symflower/eval-dev-quality/language/java.(*Language).Execute
	/home/ubuntu/eval-dev-quality/language/java/language.go:119
github.com/symflower/eval-dev-quality/evaluate/task.(*TaskWriteTests).Run
	/home/ubuntu/eval-dev-quality/evaluate/task/task-write-test.go:91
github.com/symflower/eval-dev-quality/evaluate.Evaluate.func2
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:228
github.com/symflower/eval-dev-quality/evaluate.withLoadedModel
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:273
github.com/symflower/eval-dev-quality/evaluate.Evaluate
	/home/ubuntu/eval-dev-quality/evaluate/evaluate.go:218
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.(*Evaluate).Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/evaluate.go:363
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute.func1
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:34
github.com/jessevdk/go-flags.(*Parser).ParseArgs
	/home/ubuntu/go/pkg/mod/github.com/jessevdk/go-flags@v1.5.1-0.20210607101731-3927b71304df/parser.go:333
github.com/symflower/eval-dev-quality/cmd/eval-dev-quality/cmd.Execute
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/cmd/command.go:37
main.main
	/home/ubuntu/eval-dev-quality/cmd/eval-dev-quality/main.go:11
runtime.main
	/home/ubuntu/.eval-dev-quality/go/src/runtime/proc.go:267
runtime.goexit
	/home/ubuntu/.eval-dev-quality/go/src/runtime/asm_amd64.s:1650
[0;34mGive us your feedback and let us know how we can improve Symflower at hello@symflower.com or https://github.com/symflower/symflower. Thanks so much for your help![0m
ERROR: All attempts fail:
#1: Internal error: exit status 1:
[]interface {}{
    "/tmp/eval-dev-quality1279147334/light/",
    "[INFO] Scanning for projects...\n[WARNING] \n[WARNING] Some problems were encountered while building the effective model for eval.dev.quality:test-java-light:jar:SNAPSHOT\n[WARNING] 'version' uses an unsupported snapshot version format, should be '*-SNAPSHOT' instead. @ line 8, column 11\n[WARNING] \n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.\n[WARNING] \n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.\n[WARNING] \n[INFO] \n[INFO] ------------------< eval.dev.quality:test-java-light >------------------\n[INFO] Building test-java-light SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.2.0:clean (default-clean) @ test-java-light ---\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:resources (default-resources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/main/resources\n[INFO] \n[INFO] --- compiler:3.10.1:compile (default-compile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 23 source files to /tmp/eval-dev-quality1279147334/light/target/classes\n[INFO] \n[INFO] --- resources:3.3.0:testResources (default-testResources) @ test-java-light ---\n[WARNING] Using platform encoding (ANSI_X3.4-1968 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /tmp/eval-dev-quality1279147334/light/src/test/resources\n[INFO] \n[INFO] --- compiler:3.10.1:testCompile (default-testCompile) @ test-java-light ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding ANSI_X3.4-1968, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /tmp/eval-dev-quality1279147334/light/target/test-classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n  symbol:   variable MagicSquareOdd\n  location: class MagicSquareOddTest\n[INFO] 5 errors \n[INFO] -------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.455 s\n[INFO] Finished at: 2024-06-19T09:32:00Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.10.1:testCompile (default-testCompile) on project test-java-light: Compilation failure: Compilation failure: \n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[13,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[25,37] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[30,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[31,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] /tmp/eval-dev-quality1279147334/light/src/test/java/com/eval/MagicSquareOddTest.java:[32,60] cannot find symbol\n[ERROR]   symbol:   variable MagicSquareOdd\n[ERROR]   location: class MagicSquareOddTest\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n",
}
Stacktrace: goroutine 1 [running]:
gitlab.nethead.at/symflower/symflower/model/errors.NewInternalError({0x1f42da0?, 0xc0001160c0}, {0xffa8c0?, 0xc000012030})
	gitlab.nethead.at/symflower/symflower/model/errors/error.go:850 +0x59
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand.func1()
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:80 +0x1ef
github.com/avast/retry-go.Do(0xc0000298b8, {0xc0000298a0, 0x3, 0x418c94?})
	github.com/avast/retry-go/retry.go:135 +0x5a3
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenDependencyCommand({0xc0000ec2d0, 0x26}, 0x0, {0xc00056d5c0, 0x6, 0x6})
	gitlab.nethead.at/symflower/symflower/language/java/execute/maven.go:60 +0x1c5
gitlab.nethead.at/symflower/symflower/language/java/execute.MavenCloverCoverage({0xc0000ec2d0, 0x26})
	gitlab.nethead.at/symflower/symflower/language/java/execute/clover.go:131 +0xc9
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*commandTest).Execute(0xc000522178, {0xc000522000?, 0x7fdff2386558?, 0xc000522178?})
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/test.go:143 +0x54f
gitlab.nethead.at/symflower/symflower/cmd.ExecuteNoExit({0x1f425e0?, 0xc000522000}, {0xc0000e2000?, 0x2782d80?, 0xc00032fed8?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:56 +0x2d0
gitlab.nethead.at/symflower/symflower/cmd.Execute({0x1f425e0?, 0xc000522000?}, {0xc0000e2000?, 0x274c500?, 0xc000522000?})
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:16 +0x26
gitlab.nethead.at/symflower/symflower/cmd.ExecuteWithOSArguments(...)
	gitlab.nethead.at/symflower/symflower/cmd/execute.go:75
main.main.func1()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:40 +0x34
gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd.(*Command).WithPanicReporter(0xc0000b6058?, 0x2636b18?)
	gitlab.nethead.at/symflower/symflower/cmd/symflower-local/cmd/cmd.go:184 +0x48
main.main()
	gitlab.nethead.at/symflower/symflower/cmd/symflower-demo/main.go:39 +0xa5


src/main/java/com/eval/MagicSquareOdd.java]
